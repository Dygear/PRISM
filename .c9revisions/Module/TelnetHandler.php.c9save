{"ts":1363211440059,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n/**\n * PHPInSimMod - Telnet Module\n * @package PRISM\n * @subpackage Telnet\n*/\n\nrequire_once(ROOTPATH . '/modules/prism_telnet_defines.php');\nrequire_once(ROOTPATH . '/modules/prism_telnet_server.php');\nrequire_once(ROOTPATH . '/modules/prism_telnet_admins.php');\nrequire_once(ROOTPATH . '/modules/prism_telnet_hosts.php');\nrequire_once(ROOTPATH . '/modules/prism_telnet_plugins.php');\n\ndefine('TELNET_NOT_LOGGED_IN', 0);\ndefine('TELNET_ASKED_USERNAME', 1);\ndefine('TELNET_ASKED_PASSWORD', 2);\ndefine('TELNET_LOGGED_IN', 3);\n\nclass TelnetHandler extends SectionHandler\n{\n\tprivate $telnetSock\t\t= null;\n\tprivate $clients\t\t= array();\n\tprivate $numClients\t\t= 0;\n\t\n\tprivate $telnetVars\t\t= array();\n\t\n\tpublic function __construct()\n\t{\n\t\t$this->iniFile = 'telnet.ini';\n\t}\n\n\tpublic function __destruct()\n\t{\n\t\t$this->close(true);\n\t}\n\t\n\tpublic function initialise()\n\t{\n\t\tglobal $PRISM;\n\t\t\n\t\t$this->telnetVars = array\n\t\t(\n\t\t\t'ip' => '', \n\t\t\t'port' => 0,\n\t\t);\n\n\t\tif ($this->loadIniFile($this->telnetVars, false))\n\t\t{\n\t\t\tif ($PRISM->config->cvars['debugMode'] & PRISM_DEBUG_CORE)\n\t\t\t\tconsole('Loaded '.$this->iniFile);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t# We ask the client to manually input the connection details here.\n\t\t\trequire_once(ROOTPATH . '/modules/prism_interactive.php');\n\t\t\tInteractive::queryTelnet($this->telnetVars);\n\t\t\t\n\t\t\t# Then build a telnet.ini file based on these details provided.\n\t\t\t$extraInfo = <<<ININOTES\n;\n; Telnet listen details (for remote console access).\n; 0.0.0.0 (default) will bind the socket to all available network interfaces.\n; To limit the bind to one interface only, you can enter its IP address here.\n; If you do not want to use the telnet feature, you can comment or remove the \n; lines, or enter \"\" and 0 for the ip and port.\n;\n\nININOTES;\n\t\t\tif ($this->createIniFile('Telnet Configuration (remote console)', array('telnet' => &$this->telnetVars), $extraInfo))\n\t\t\t\tconsole('Generated config/'.$this->iniFile);\n\t\t}\n\t\t\n\t\t// Setup telnet socket to listen on\n\t\tif (!$this->setupListenSocket())\n\t\t\treturn false;\n\t\t\n\t\treturn true;\n\t}\n\n\tprivate function setupListenSocket()\n\t{\n\t\t$this->close(false);\n\t\t\n\t\tif ($this->telnetVars['ip'] != '' && $this->telnetVars['port'] > 0)\n\t\t{\n\t\t\t$this->telnetSock = @stream_socket_server('tcp://'.$this->telnetVars['ip'].':'.$this->telnetVars['port'], $errNo, $errStr);\n\t\t\tif (!is_resource($this->telnetSock) || $this->telnetSock === FALSE || $errNo)\n\t\t\t{\n\t\t\t\tconsole('Error opening telnet socket : '.$errStr.' ('.$errNo.')');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole('Listening for telnet input on '.$this->telnetVars['ip'].':'.$this->telnetVars['port']);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate function close($all)\n\t{\n\t\tif (is_resource($this->telnetSock))\n\t\t\tfclose($this->telnetSock);\n\t\t\n\t\tif (!$all)\n\t\t\treturn;\n\t\t\n\t\tfor ($k=0; $k<$this->numClients; $k++)\n\t\t{\n\t\t\tarray_splice($this->clients, $k, 1);\n\t\t\t$k--;\n\t\t\t$this->numClients--;\n\t\t}\n\t}\n\n\tpublic function getSelectableSockets(array &$sockReads, array &$sockWrites)\n\t{\n\t\t// Add http sockets to sockReads\n\t\tif (is_resource($this->telnetSock))\n\t\t\t$sockReads[] = $this->telnetSock;\n\n\t\tfor ($k=0; $k<$this->numClients; $k++)\n\t\t{\n\t\t\tif (is_resource($this->clients[$k]->getSocket()))\n\t\t\t{\n\t\t\t\t$sockReads[] = $this->clients[$k]->getSocket();\n\t\t\t\t\n\t\t\t\t// If write buffer was full, we must check to see when we can write again\n\t\t\t\tif ($this->clients[$k]->getSendQLen() > 0)\n\t\t\t\t\t$sockWrites[] = $this->clients[$k]->getSocket();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function checkTraffic(array &$sockReads, array &$sockWrites)\n\t{\n\t\t$activity = 0;\n\n\t\t// telnetSock input (incoming telnet connection)\n\t\tif (in_array($this->telnetSock, $sockReads))\n\t\t{\n\t\t\t$activity++;\n\t\t\t\n\t\t\t// Accept the new connection\n\t\t\t$peerInfo = '';\n\t\t\t$sock = @stream_socket_accept ($this->telnetSock, NULL, $peerInfo);\n\t\t\tif (is_resource($sock))\n\t\t\t{\n\t\t\t\t//stream_set_blocking ($sock, 0);\n\t\t\t\t\n\t\t\t\t// Add new connection to clients array\n\t\t\t\t$exp = explode(':', $peerInfo);\n\t\t\t\t$this->clients[] = new PrismTelnet($sock, $exp[0], $exp[1]);\n\t\t\t\t$this->numClients++;\n\t\t\t\tconsole('Telnet Client '.$exp[0].':'.$exp[1].' connected.');\n\t\t\t}\n\t\t\tunset ($sock);\n\t\t}\n\t\t\n\t\t// telnet clients input\n\t\tfor ($k=0; $k<$this->numClients; $k++) {\n\t\t\t// Recover from a full write buffer?\n\t\t\tif ($this->clients[$k]->getSendQLen() > 0 &&\n\t\t\t\tin_array($this->clients[$k]->getSocket(), $sockWrites))\n\t\t\t{\n\t\t\t\t$activity++;\n\t\t\t\t\n\t\t\t\t// Flush the sendQ (bit by bit, not all at once - that could block the whole app)\n\t\t\t\tif ($this->clients[$k]->getSendQLen() > 0)\n\t\t\t\t\t$this->clients[$k]->flushSendQ();\n\t\t\t}\n\t\t\t\n\t\t\t// Did we receive something from a httpClient?\n\t\t\tif (!in_array($this->clients[$k]->getSocket(), $sockReads))\n\t\t\t\tcontinue;\n\n\t\t\t$activity++;\n\t\t\t\n\t\t\t$data = $this->clients[$k]->read($data);\n\t\t\t\n\t\t\t// Did the client hang up?\n\t\t\tif ($data == '')\n\t\t\t{\n\t\t\t\tconsole('Closed telnet client (client initiated) '.$this->clients[$k]->getRemoteIP().':'.$this->clients[$k]->getRemotePort());\n\t\t\t\tarray_splice ($this->clients, $k, 1);\n\t\t\t\t$k--;\n\t\t\t\t$this->numClients--;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$this->clients[$k]->addInputToBuffer($data);\n\t\t\t$this->clients[$k]->processInput();\n\n\t\t\tif ($this->clients[$k]->getMustClose())\n\t\t\t{\n\t\t\t\t$this->clients[$k]->__destruct();\n\t\t\t\tconsole('Closed telnet client (client ctrl-c) '.$this->clients[$k]->getRemoteIP().':'.$this->clients[$k]->getRemotePort());\n\t\t\t\tarray_splice ($this->clients, $k, 1);\n\t\t\t\t$k--;\n\t\t\t\t$this->numClients--;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn $activity;\n\t}\n}\n\ndefine('TS_SECTION_MAIN', 1);\n\n/**\n * The PrismTelnet class handles :\n * -the Prism telnet login session\n * -all the information coming from the telnet client (KB input / commands)\n * -what will be drawn on the telnet client's screen\n*/\nclass PrismTelnet extends TelnetServer\n{\n\t// If filled in, the user is logged in (or half-way logging in).\n\tprivate $username\t\t= '';\n\t\n\t// The state of the login process.\n\tprivate $loginState\t\t= 0;\n\t\n\t// Section vars\n\tprivate $curSection\t\t= '';\t\t// holds the name of the currently active section\n\tprivate $section\t\t= null;\t\t// holds the actual active section object itself (accounts, hosts, plugins)\n\t\n\tprivate $menuBar\t\t= null;\t\t// cosmetic menu bar\n\t\n\tprivate $adminSection\t= null;\t\t// handles all account related stuff\n\tprivate $hostSection\t= null;\t\t// handles all host related stuff\n\tprivate $pluginSection\t= null;\t\t// handles all plugin related stuff\n\t\n\tpublic function __construct(&$sock, &$ip, &$port)\n\t{\n\t\tparent::__construct($sock, $ip, $port);\n\n\t\t// Clear screen\n\t\t$this->screenClear(true);\n\t\t\n\t\t// Send welcome message and ask for username\n\t\t$msg = \"Welcome to the \".VT100_STYLE_BOLD.\"Prism v\".PHPInSimMod::VERSION.VT100_STYLE_RESET.\" remote console.\\r\\n\";\n\t\t$msg .= \"Please login with your Prism account details.\\r\\n\\r\\n\";\n\t\t$msg .= \"Username : \";\n\t\t\n\t\t$this->writeBuf($msg);\n\t\t$this->flush();\n\t\t$this->loginState = TELNET_ASKED_USERNAME;\n\t\t\n\t\t$this->registerInputCallback($this, 'doLogin', TELNET_MODE_LINEEDIT);\n\t}\n\t\n\tpublic function __destruct()\n\t{\n\t\t$this->registerInputCallback(null);\n\t\t$this->setCursorProperties(0);\n\t\t\n\t\t// Remove all visual objects\n\t\t$this->clearObjects(true);\n\t\t\n\t\t// Clean up the sections\n\t\tif ($this->adminSection)\n\t\t{\n\t\t\t$this->adminSection->__destruct();\n\t\t\t$this->hostSection->__destruct();\n\t\t\t$this->pluginSection->__destruct();\n\t\t}\n\t\t\n\t\t$this->writeBuf(VT100_STYLE_RESET.VT100_USG0.\"Goodbye...\\r\\n\");\n\t\t$this->flush();\n\t}\n\n\tprotected function doLogin($line)\n\t{\n\t\tswitch($this->getLoginState())\n\t\t{\n\t\t\tcase TELNET_NOT_LOGGED_IN :\n\t\t\t\t// Send error notice and ask for username\n\t\t\t\t$msg .= \"\\r\\nPlease login with your Prism account details.\\r\\n\";\n\t\t\t\t$msg .= \"Username : \";\n\t\t\t\t\n\t\t\t\t$this->write($msg);\n\t\t\t\t$this->loginState = TELNET_ASKED_USERNAME;\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase TELNET_ASKED_USERNAME :\n\t\t\t\tif ($line == '')\n\t\t\t\t{\n\t\t\t\t\t$this->write(\"\\r\\nUsername : \");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$this->username = $line;\n\t\t\t\t$this->write(\"\\r\\nPassword : \");\n\t\t\t\t$this->loginState = TELNET_ASKED_PASSWORD;\n\t\t\t\t$this->setEchoChar('*');\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase TELNET_ASKED_PASSWORD :\n\t\t\t\t$this->setEchoChar(null);\n\t\t\t\t\n\t\t\t\tif ($this->verifyLogin($line))\n\t\t\t\t{\n\t\t\t\t\t$this->loginState = TELNET_LOGGED_IN;\n\n\t\t\t\t\t$this->writeBuf(\"\\r\\nLogin successful\\r\\n\");\n\t\t\t\t\t$this->writeBuf(\"(x or ctrl-c to exit)\\r\\n\");\n\t\t\t\t\t$this->setCursorProperties(TELNET_CURSOR_HIDE);\n\t\t\t\t\t$this->flush();\n\n\t\t\t\t\tconsole('Successful telnet login from '.$this->username.' on '.date('r'));\n\t\t\t\t\t\n\t\t\t\t\t// Now setup the screen\n\t\t\t\t\t$this->setupMenu();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$msg = \"\\r\\nIncorrect login. Please try again.\\r\\n\";\n\t\t\t\t\t$msg .= \"Username : \";\n\t\t\t\t\t$this->username = '';\n\t\t\t\t\t$this->write($msg);\n\t\t\t\t\t$this->loginState = TELNET_ASKED_USERNAME;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tprotected function getLoginState()\n\t{\n\t\treturn $this->loginState;\n\t}\n\t\n\tprivate function verifyLogin(&$password)\n\t{\n\t\tglobal $PRISM;\n\n\t\treturn ($PRISM->admins->isPasswordCorrect($this->username, $password));\n\t}\n\t\n\tprivate function setupMenu()\n\t{\n\t\t$this->screenClear();\n\t\t\n\t\t// Create section bar (header bar)\n\t\t$this->menuBar = new MenuBar($this->getTType());\n\t\t$this->add($this->menuBar);\n\t\t\n\t\t// Initialise the actual sections as separate objects.\n\t\t$this->adminSection = new TSAdminSection($this, $this->getWidth(), $this->getHeight()-3, $this->getTType());\n\t\t$this->adminSection->setActive(true);\n\t\t$this->add($this->adminSection);\n\t\t$this->section = $this->adminSection;\n\t\t$this->curSection = 'admins';\n\n\t\t$this->hostSection = new TSHostSection($this, $this->getWidth(), $this->getHeight()-3, $this->getTType());\n\t\t$this->hostSection->setActive(true);\n\t\t$this->setVisible(false);\n\t\t$this->add($this->hostSection);\n\n\t\t$this->pluginSection = new TSPluginSection($this, $this->getWidth(), $this->getHeight()-3, $this->getTType());\n\t\t$this->pluginSection->setActive(true);\n\t\t$this->setVisible(false);\n\t\t$this->add($this->pluginSection);\n\n\t\t$this->registerInputCallback($this, 'handleKey');\n\t\t$this->reDraw();\n\t}\n\t\n\tprivate function selectSection($section)\n\t{\n\t\tif ($this->curSection == $section)\n\t\t\treturn true;\n\t\t\n\n\t\t// Make the section active\n\t\tswitch($section)\n\t\t{\n\t\t\tcase 'admins' :\n\t\t\t\t$this->section->setVisible(false);\n\t\t\t\t$this->section = $this->adminSection;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\tcase 'hosts' :\n\t\t\t\t$this->section->setVisible(false);\n\t\t\t\t$this->section = $this->hostSection;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\tcase 'plugins' :\n\t\t\t\t$this->section->setVisible(false);\n\t\t\t\t$this->section = $this->pluginSection;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\tdefault :\n\t\t\t\treturn false;\n\t\t\t\t\n\t\t}\n\n\t\t$this->section->setVisible(true);\n\n\t\t$this->menuBar->selectSection($section);\n\t\t$this->curSection = $section;\n\t\t\n\t\treturn true;\n\t}\n\t\n\t/**\n\t * When we are not in line-edit mode (to process a whole line of user-input),\n\t * we use this handleKey function to process single key presses.\n\t * These key presses drive the telnet text console application.\n\t * In other words, the handleKey function is the main() of the telnet console application.\n\t*/\n\tprotected function handleKey($key)\n\t{\n\t\tif (($tl = $this->getObjectById('testline')) === null)\n\t\t{\n\t\t\t$tl = new TSTextArea(1, $this->winSize[1], $this->winSize[0], 1);\n\t\t\t$tl->setId('testline');\n\t\t\t$this->add($tl);\n\t\t}\n\t\t\n\t\t// Handle section specific keys\n\t\tif ($this->section && $this->section->handleKey($key))\n\t\t{\n\t\t\t$this->redraw();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Default key actions\n\t\tswitch ($key)\n\t\t{\n\t\t\tcase 'A' :\n\t\t\t\t$this->selectSection('admins');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'H' :\n\t\t\t\t$this->selectSection('hosts');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'P' :\n\t\t\t\t$this->selectSection('plugins');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'x' :\n\t\t\t\t$this->shutdown();\n\t\t\t\treturn;\n\t\t\t\n\t\t\tcase KEY_ENTER :\n\t\t\t\t$tl->setText('Enter');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_CURLEFT :\n\t\t\t\t$tl->setText('Cursor left');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_CURRIGHT :\n\t\t\t\t$tl->setText('Cursor right');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_CURUP :\n\t\t\t\t$tl->setText('Cursor up');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_CURDOWN :\n\t\t\t\t$tl->setText('Cursor down');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_CURLEFT_CTRL :\n\t\t\t\t$tl->setText('CTRL-Cursor left');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_CURRIGHT_CTRL :\n\t\t\t\t$tl->setText('CTRL-Cursor right');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_CURUP_CTRL :\n\t\t\t\t$tl->setText('CTRL-Cursor up');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_CURDOWN_CTRL :\n\t\t\t\t$tl->setText('CTRL-Cursor down');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_HOME :\n\t\t\t\t$tl->setText('Home key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_END :\n\t\t\t\t$tl->setText('End key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_PAGEUP :\n\t\t\t\t$tl->setText('Page up');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_PAGEDOWN :\n\t\t\t\t$tl->setText('Page down');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_INSERT :\n\t\t\t\t$tl->setText('Insert');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_BS :\n\t\t\t\t$tl->setText('Backspace');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_TAB :\n\t\t\t\t$tl->setText('TAB key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_SHIFTTAB :\n\t\t\t\t$tl->setText('SHIFT-TAB key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_DELETE :\n\t\t\t\t$tl->setText('Delete key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_ESCAPE :\n\t\t\t\t$tl->setText('Escape key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_F1 :\n\t\t\t\t$tl->setText('F1 key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_F2 :\n\t\t\t\t$tl->setText('F2 key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_F3 :\n\t\t\t\t$tl->setText('F3 key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_F4 :\n\t\t\t\t$tl->setText('F4 key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_F5 :\n\t\t\t\t$tl->setText('F5 key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_F6 :\n\t\t\t\t$tl->setText('F6 key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_F7 :\n\t\t\t\t$tl->setText('F7 key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_F8 :\n\t\t\t\t// Toggle ttypes\n\t\t\t\t$this->setTType($this->getTType() + 1);\n\t\t\t\tif ($this->getTType() == TELNET_TTYPE_NUM)\n\t\t\t\t\t$this->setTType(0);\n\t\t\t\t$this->updateTTypes($this->getTType());\n\t\t\t\t$tl->setText('Toggling ttype ('.$this->getTType().')');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_F9 :\n\t\t\t\t$tl->setText('F9 key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_F10 :\n\t\t\t\t$tl->setText('F10 key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_F11 :\n\t\t\t\t$tl->setText('F11 key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase KEY_F12 :\n\t\t\t\t$tl->setText('F12 key');\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tdefault :\n\t\t\t\t$tl->setText($key.' pressed');\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\t$this->redraw();\n\t}\n}\n\nclass MenuBar extends ScreenContainer\n{\n\tpublic function __construct($ttype)\n\t{\n\t\t$this->setSize(80, 1);\n\t\t$this->setId('mainMenu');\n\t\t$this->setTType($ttype);\n\t\t\n\t\t$textArea = new TSTextArea(3, 1, 6, 1);\n\t\t$textArea->setId('admins');\n\t\t$textArea->setOptions(TS_OPT_ISSELECTABLE | TS_OPT_ISSELECTED);\n\t\t$textArea->setText(VT100_STYLE_BOLD.'A'.VT100_STYLE_RESET.'dmins');\n\t\t$this->add($textArea);\n\n\t\t$textArea = new TSTextArea(16, 0, 5, 1);\n\t\t$textArea->setId('hosts');\n\t\t$textArea->setOptions(TS_OPT_ISSELECTABLE);\n\t\t$textArea->setText(VT100_STYLE_BOLD.'H'.VT100_STYLE_RESET.'osts');\n\t\t$this->add($textArea);\n\n\t\t$textArea = new TSTextArea(26, 0, 7, 1);\n\t\t$textArea->setId('plugins');\n\t\t$textArea->setOptions(TS_OPT_ISSELECTABLE);\n\t\t$textArea->setText(VT100_STYLE_BOLD.'P'.VT100_STYLE_RESET.'lugins');\n\t\t$this->add($textArea);\n\n\t\t$l = strlen('Prism v'.PHPInSimMod::VERSION);\n\t\t$textArea = new TSTextArea(80 - ($l + 1), 0, $l, 1);\n\t\t$textArea->setId('prismVersion');\n\t\t$textArea->setText(VT100_STYLE_GREEN.VT100_STYLE_BOLD.'Prism v'.PHPInSimMod::VERSION.VT100_STYLE_RESET);\n\t\t$this->add($textArea);\n\n\t\t$line = new TSHLine(2, 2, $this->getWidth() - 2);\n\t\t$line->setTType($this->getTType());\n\t\t$this->add($line);\n\t}\n\t\n\tpublic function selectSection($section)\n\t{\n\t\t$a = 0;\n\t\twhile ($object = $this->getObjectByIndex($a))\n\t\t{\n\t\t\tif ($object->getId() == $section)\n\t\t\t{\n\t\t\t\tif (($object->getOptions() & TS_OPT_ISSELECTED) == 0)\n\t\t\t\t\t$object->toggleSelected();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (($object->getOptions() & TS_OPT_ISSELECTED) > 0)\n\t\t\t\t\t$object->toggleSelected();\n\t\t\t}\n\t\t\t$a++;\n\t\t}\n\t}\n}\n\n?>"]],"start1":0,"start2":0,"length1":0,"length2":15442}]],"length":15442}
{"contributors":[],"silentsave":true,"ts":1363211523435,"patch":[[{"diffs":[[0,"net\n*/\n\n"],[1,"n\n\n"],[0,"require_"]],"start1":77,"start2":77,"length1":16,"length2":19}]],"length":15445,"saved":false}
{"ts":1363211525724,"patch":[[{"diffs":[[0,"et\n*/\n\nn"],[1,"amespace "],[0,"\n\nrequir"]],"start1":78,"start2":78,"length1":16,"length2":25}]],"length":15454,"saved":false}
{"ts":1363211531898,"patch":[[{"diffs":[[0,"mespace "],[1,"PRISM\\Module''"],[0,"\n\nrequir"]],"start1":87,"start2":87,"length1":16,"length2":30}]],"length":15468,"saved":false}
{"ts":1363211534474,"patch":[[{"diffs":[[0,"M\\Module"],[-1,"''"],[1,";"],[0,"\n\nrequir"]],"start1":99,"start2":99,"length1":18,"length2":17}]],"length":15467,"saved":false}
{"ts":1363211537781,"patch":[[{"diffs":[[0,"odule;\n\n"],[1,"use\n"],[0,"require_"]],"start1":102,"start2":102,"length1":16,"length2":20}]],"length":15471,"saved":false}
{"ts":1363211540758,"patch":[[{"diffs":[[0,"e;\n\nuse\n"],[1,"/*\n"],[0,"require_"]],"start1":106,"start2":106,"length1":16,"length2":19}]],"length":15474,"saved":false}
{"ts":1363211544035,"patch":[[{"diffs":[[0,"php');\n\n"],[1,"\n"],[0,"define('"]],"start1":416,"start2":416,"length1":16,"length2":17}]],"length":15475,"saved":false}
{"ts":1363211546192,"patch":[[{"diffs":[[0,".php');\n"],[1,"/"],[0,"\n\ndefine"]],"start1":415,"start2":415,"length1":16,"length2":17}]],"length":15476,"saved":false}
{"ts":1363211548772,"patch":[[{"diffs":[[0,"e;\n\nuse\n"],[1,"\n"],[0,"/*\nrequi"]],"start1":106,"start2":106,"length1":16,"length2":17}]],"length":15477,"saved":false}
{"ts":1363211552512,"patch":[[{"diffs":[[0,"le;\n\nuse"],[1,"PRI"],[0,"\n\n/*\nreq"]],"start1":105,"start2":105,"length1":16,"length2":19}]],"length":15480,"saved":false}
{"ts":1363211553859,"patch":[[{"diffs":[[0,"e;\n\nuseP"],[-1,"RI"],[0,"\n\n/*\nreq"]],"start1":106,"start2":106,"length1":18,"length2":16}]],"length":15478,"saved":false}
{"ts":1363211555727,"patch":[[{"diffs":[[0,"le;\n\nuse"],[-1,"P"],[1," "],[0,"\n\n/*\nreq"]],"start1":105,"start2":105,"length1":17,"length2":17}]],"length":15478,"saved":false}
{"ts":1363211558145,"patch":[[{"diffs":[[0,"e;\n\nuse "],[1,"PRISM\\"],[0,"\n\n/*\nreq"]],"start1":106,"start2":106,"length1":16,"length2":22}]],"length":15484,"saved":false}
{"ts":1363211558738,"patch":[[{"diffs":[[0,"e PRISM\\"],[1,"M"],[0,"\n\n/*\nreq"]],"start1":112,"start2":112,"length1":16,"length2":17}]],"length":15485,"saved":false}
{"contributors":[],"silentsave":true,"ts":1363317711712,"patch":[[{"diffs":[[0," PRISM\\M"],[1,"odule\\Telnet\\Defines;\nuse PRISM\\Module\\Telnet\\Server;\nuse PRISM\\Module\\Telnet\\Admins;\nuse PRISM\\Module\\Telnet\\Hosts;\nuse PRISM\\Module\\Telnet\\Plugins;"],[0,"\n\n/*\nreq"]],"start1":113,"start2":113,"length1":16,"length2":165},{"diffs":[[0,".php');\n"],[1,"*"],[0,"/\n\ndefin"]],"start1":573,"start2":573,"length1":16,"length2":17},{"diffs":[[0," false))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tif "]],"start1":1190,"start2":1190,"length1":19,"length2":17},{"diffs":[[0,"}\n}\n"],[-1,"\n?>"]],"start1":15626,"start2":15626,"length1":7,"length2":4}]],"length":15630,"saved":false}
{"ts":1363317715188,"patch":[[{"diffs":[[0,"le);\n\t\t}"],[-1,"\n\t\t"],[1," "],[0,"else\n\t\t{"]],"start1":1297,"start2":1297,"length1":19,"length2":17}]],"length":15628,"saved":false}
{"ts":1363317718196,"patch":[[{"diffs":[[0,"\t\t} else"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t# W"]],"start1":1302,"start2":1302,"length1":19,"length2":17}]],"length":15626,"saved":false}
{"ts":1363317721261,"patch":[[{"diffs":[[0,"UG_CORE)"],[1," {"],[0,"\n\t\t\t\tcon"]],"start1":1254,"start2":1254,"length1":16,"length2":18}]],"length":15628,"saved":false}
{"ts":1363317723195,"patch":[[{"diffs":[[0,"iFile);\n"],[1,"\t\t\t}\n"],[0,"\t\t} else"]],"start1":1296,"start2":1296,"length1":16,"length2":21}]],"length":15633,"saved":false}
{"ts":1363317728798,"patch":[[{"diffs":[[0,"ocket())"],[1," {"],[0,"\n\t\t\tretu"]],"start1":2191,"start2":2191,"length1":16,"length2":18}]],"length":15635,"saved":false}
{"ts":1363317730470,"patch":[[{"diffs":[[0," false;\n"],[1,"\t\t}\n"],[0,"\t\t\n\t\tret"]],"start1":2211,"start2":2211,"length1":16,"length2":20}]],"length":15639,"saved":false}
{"ts":1363317733540,"patch":[[{"diffs":[[0,"raInfo))"],[1," {"],[0,"\n\t\t\t\tcon"]],"start1":2062,"start2":2062,"length1":16,"length2":18}]],"length":15641,"saved":false}
{"ts":1363317735654,"patch":[[{"diffs":[[0,"iFile);\n"],[1,"\t\t\t}\n"],[0,"\t\t}\n\t\t\n\t"]],"start1":2114,"start2":2114,"length1":16,"length2":21}]],"length":15646,"saved":false}
{"ts":1363317742580,"patch":[[{"diffs":[[0,"t'] > 0)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$th"]],"start1":2380,"start2":2380,"length1":19,"length2":17}]],"length":15644,"saved":false}
{"ts":1363317746596,"patch":[[{"diffs":[[0," $errNo)"],[-1,"\n\t\t\t"],[1," "],[0,"{\n\t\t\t\tco"]],"start1":2590,"start2":2590,"length1":20,"length2":17}]],"length":15641,"saved":false}
{"ts":1363317750420,"patch":[[{"diffs":[[0,"rrStr);\n"],[1,"            \n"],[0,"\t\t\tif (!"]],"start1":2510,"start2":2510,"length1":16,"length2":29}]],"length":15654,"saved":false}
{"ts":1363317755942,"patch":[[{"diffs":[[0," false;\n\t\t\t}"],[-1,"\n\t\t\t"],[0,"else\n\t\t\t{\n\t\t"]],"start1":2695,"start2":2695,"length1":28,"length2":24}]],"length":15650,"saved":false}
{"ts":1363317757421,"patch":[[{"diffs":[[0,"se;\n\t\t\t}"],[1," "],[0,"else\n\t\t\t"]],"start1":2699,"start2":2699,"length1":16,"length2":17}]],"length":15651,"saved":false}
{"ts":1363317759256,"patch":[[{"diffs":[[0,"e;\n\t\t\t} else"],[-1,"\n\t\t\t"],[1," "],[0,"{\n\t\t\t\tconsol"]],"start1":2700,"start2":2700,"length1":28,"length2":25}]],"length":15648,"saved":false}
{"ts":1363317762368,"patch":[[{"diffs":[[0,"\t\t}\n\t\t}\n"],[1,"        \n"],[0,"\t\treturn"]],"start1":2817,"start2":2817,"length1":16,"length2":25}]],"length":15657,"saved":false}
{"ts":1363317766094,"patch":[[{"diffs":[[0,"telnetSock))"],[1," {"],[0,"\n\t\t\tfclose($"]],"start1":2911,"start2":2911,"length1":24,"length2":26}]],"length":15659,"saved":false}
{"ts":1363317768231,"patch":[[{"diffs":[[0,"tSock);\n"],[1,"\t\t}\n"],[0,"\t\t\n\t\tif "]],"start1":2948,"start2":2948,"length1":16,"length2":20}]],"length":15663,"saved":false}
{"ts":1363317771152,"patch":[[{"diffs":[[0," (!$all)"],[1," {"],[0,"\n\t\t\tretu"]],"start1":2967,"start2":2967,"length1":16,"length2":18}]],"length":15665,"saved":false}
{"ts":1363317774189,"patch":[[{"diffs":[[0,"return;\n"],[1,"            \n"],[0,"\t\t\n\t\tfor"]],"start1":2981,"start2":2981,"length1":16,"length2":29}]],"length":15678,"saved":false}
{"ts":1363317775382,"patch":[[{"diffs":[[0,"return;\n"],[-1,"            "],[1,"\t\t}"],[0,"\n\t\t\n\t\tfo"]],"start1":2981,"start2":2981,"length1":28,"length2":19}]],"length":15669,"saved":false}
{"ts":1363317780399,"patch":[[{"diffs":[[0,"nts; $k++)\n\t"],[-1,"\t{"],[0,"\n\t\t\tarray_sp"]],"start1":3026,"start2":3026,"length1":26,"length2":24}]],"length":15667,"saved":false}
{"ts":1363317781954,"patch":[[{"diffs":[[0,"; $k++)\n"],[-1,"\t\n"],[0,"\t\t\tarray"]],"start1":3029,"start2":3029,"length1":18,"length2":16}]],"length":15665,"saved":false}
{"ts":1363317783236,"patch":[[{"diffs":[[0,"s; $k++)"],[1," {"],[0,"\n\t\t\tarra"]],"start1":3028,"start2":3028,"length1":16,"length2":18}]],"length":15667,"saved":false}
{"ts":1363317789545,"patch":[[{"diffs":[[0,"telnetSock))"],[1," {"],[0,"\n\t\t\t$sockRea"]],"start1":3260,"start2":3260,"length1":24,"length2":26}]],"length":15669,"saved":false}
{"ts":1363317791118,"patch":[[{"diffs":[[0,"netSock;"],[1,"\n            "],[0,"\n\n\t\tfor "]],"start1":3303,"start2":3303,"length1":16,"length2":29}]],"length":15682,"saved":false}
{"ts":1363317792252,"patch":[[{"diffs":[[0,"etSock;\n"],[-1,"            "],[1,"\t\t}"],[0,"\n\n\t\tfor "]],"start1":3304,"start2":3304,"length1":28,"length2":19}]],"length":15673,"saved":false}
{"ts":1363317794460,"patch":[[{"diffs":[[0,"; $k++)\n"],[-1,"\t\t"],[0,"{\n\t\t\tif "]],"start1":3350,"start2":3350,"length1":18,"length2":16}]],"length":15671,"saved":false}
{"ts":1363317795571,"patch":[[{"diffs":[[0,"s; $k++)"],[-1,"\n"],[1," "],[0,"{\n\t\t\tif "]],"start1":3349,"start2":3349,"length1":17,"length2":17}]],"length":15671,"saved":false}
{"ts":1363317798739,"patch":[[{"diffs":[[0,"cket()))"],[-1,"\n\t\t\t"],[1," "],[0,"{\n\t\t\t\t$s"]],"start1":3404,"start2":3404,"length1":20,"length2":17}]],"length":15668,"saved":false}
{"ts":1363317802436,"patch":[[{"diffs":[[0,"dQLen() > 0)"],[1," {"],[0,"\n\t\t\t\t\t$sockW"]],"start1":3584,"start2":3584,"length1":24,"length2":26}]],"length":15670,"saved":false}
{"ts":1363317806248,"patch":[[{"diffs":[[0,"etSocket();\n"],[1,"\t\t\t\t}\n"],[0,"\t\t\t}\n\t\t}\n\t}\n"]],"start1":3641,"start2":3641,"length1":24,"length2":30}]],"length":15676,"saved":false}
{"ts":1363317937364,"patch":[[{"diffs":[[0,"kReads))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$ac"]],"start1":3851,"start2":3851,"length1":19,"length2":17}]],"length":15674,"saved":false}
{"ts":1363317940410,"patch":[[{"diffs":[[0,"$sock))\n"],[-1,"\t\t\t"],[0,"{\n\t\t\t\t//"]],"start1":4023,"start2":4023,"length1":19,"length2":16}]],"length":15671,"saved":false}
{"ts":1363317941988,"patch":[[{"diffs":[[0,"($sock))"],[-1,"\n"],[0,"{\n\t\t\t\t//"]],"start1":4022,"start2":4022,"length1":17,"length2":16}]],"length":15670,"saved":false}
{"ts":1363317943774,"patch":[[{"diffs":[[0,"($sock))"],[1," "],[0,"{\n\t\t\t\t//"]],"start1":4022,"start2":4022,"length1":16,"length2":17}]],"length":15671,"saved":false}
{"ts":1363317946670,"patch":[[{"diffs":[[0,"rInfo);\n"],[1,"            \n"],[0,"\t\t\tif (i"]],"start1":3996,"start2":3996,"length1":16,"length2":29}]],"length":15684,"saved":false}
{"ts":1363317952118,"patch":[[{"diffs":[[0,"ck, "],[-1,"NULL"],[1,"null"],[0,", $p"]],"start1":3982,"start2":3982,"length1":12,"length2":12}]],"length":15684,"saved":false}
{"ts":1363317957793,"patch":[[{"diffs":[[0,"rites))\n"],[-1,"\t\t\t"],[0,"{\n\t\t\t\t$a"]],"start1":4562,"start2":4562,"length1":19,"length2":16}]],"length":15681,"saved":false}
{"ts":1363317959298,"patch":[[{"diffs":[[0,"Writes))"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\t$a"]],"start1":4561,"start2":4561,"length1":17,"length2":17}]],"length":15681,"saved":false}
{"ts":1363317962677,"patch":[[{"diffs":[[0,") > 0 &&"],[-1,"\n\t"],[0,"\t\t\tin_ar"]],"start1":4501,"start2":4501,"length1":18,"length2":16}]],"length":15679,"saved":false}
{"ts":1363317964403,"patch":[[{"diffs":[[0,") > 0 &&"],[-1,"\t\t\t"],[1," "],[0,"in_array"]],"start1":4501,"start2":4501,"length1":19,"length2":17}]],"length":15677,"saved":false}
{"ts":1363317971343,"patch":[[{"diffs":[[0,"dQLen() > 0)"],[1," {"],[0,"\n\t\t\t\t\t$this-"]],"start1":4710,"start2":4710,"length1":24,"length2":26}]],"length":15679,"saved":false}
{"ts":1363317974984,"patch":[[{"diffs":[[0,"ushSendQ();\n"],[1,"\t\t\t\t}\n"],[0,"\t\t\t}\n\t\t\t\n\t\t\t"]],"start1":4752,"start2":4752,"length1":24,"length2":30}]],"length":15685,"saved":false}
{"ts":1363317979404,"patch":[[{"diffs":[[0,"kReads))"],[1," {"],[0,"\n\t\t\t\tcon"]],"start1":4883,"start2":4883,"length1":16,"length2":18}]],"length":15687,"saved":false}
{"ts":1363317981111,"patch":[[{"diffs":[[0,"ontinue;"],[1,"\n\t\t\t}"],[0,"\n\n\t\t\t$ac"]],"start1":4899,"start2":4899,"length1":16,"length2":21}]],"length":15692,"saved":false}
{"ts":1363317986778,"patch":[[{"diffs":[[0,"== '')\n\t"],[-1,"\t\t{"],[0,"\n\t\t\t\tcon"]],"start1":5025,"start2":5025,"length1":19,"length2":16}]],"length":15689,"saved":false}
{"ts":1363317987884,"patch":[[{"diffs":[[0," == '')\n"],[-1,"\t\n"],[0,"\t\t\t\tcons"]],"start1":5024,"start2":5024,"length1":18,"length2":16}]],"length":15687,"saved":false}
{"ts":1363317989777,"patch":[[{"diffs":[[0,"$data == '')"],[1," {"],[0,"\n\t\t\t\tconsole"]],"start1":5019,"start2":5019,"length1":24,"length2":26}]],"length":15689,"saved":false}
{"ts":1363317997308,"patch":[[{"diffs":[[0,"lose())\n"],[-1,"\t\t\t"],[0,"{\n\t\t\t\t$t"]],"start1":5385,"start2":5385,"length1":19,"length2":16}]],"length":15686,"saved":false}
{"ts":1363317998404,"patch":[[{"diffs":[[0,"Close())"],[-1,"\n"],[0,"{\n\t\t\t\t$t"]],"start1":5384,"start2":5384,"length1":17,"length2":16}]],"length":15685,"saved":false}
{"ts":1363318001003,"patch":[[{"diffs":[[0,"Close())"],[1," "],[0,"{\n\t\t\t\t$t"]],"start1":5384,"start2":5384,"length1":16,"length2":17}]],"length":15686,"saved":false}
{"ts":1363318012916,"patch":[[{"diffs":[[0,"minSection)\n"],[-1,"\t\t"],[0,"{\n\t\t\t$this->"]],"start1":7356,"start2":7356,"length1":26,"length2":24}]],"length":15684,"saved":false}
{"ts":1363318014398,"patch":[[{"diffs":[[0,"Section)"],[-1,"\n"],[1," "],[0,"{\n\t\t\t$th"]],"start1":7359,"start2":7359,"length1":17,"length2":17}]],"length":15684,"saved":false}
{"ts":1363318021984,"patch":[[{"diffs":[[0,"State())"],[-1,"\n\t\t"],[0,"{\n\t\t\tcas"]],"start1":7641,"start2":7641,"length1":19,"length2":16}]],"length":15681,"saved":false}
{"ts":1363318023899,"patch":[[{"diffs":[[0,"State())"],[1," "],[0,"{\n\t\t\tcas"]],"start1":7641,"start2":7641,"length1":16,"length2":17}]],"length":15682,"saved":false}
{"ts":1363318027998,"patch":[[{"diffs":[[0,"\t\t\t\t\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase TELNET_A"]],"start1":7901,"start2":7901,"length1":36,"length2":32}]],"length":15678,"saved":false}
{"ts":1363318031236,"patch":[[{"diffs":[[0," == '')\n"],[-1,"\t\t\t\t"],[0,"{\n\t\t\t\t\t$"]],"start1":7962,"start2":7962,"length1":20,"length2":16}]],"length":15674,"saved":false}
{"ts":1363318032551,"patch":[[{"diffs":[[0,"e == '')"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":7961,"start2":7961,"length1":17,"length2":17}]],"length":15674,"saved":false}
{"ts":1363318037903,"patch":[[{"diffs":[[0,"\t\t\t\t\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase TELNET_A"]],"start1":8170,"start2":8170,"length1":36,"length2":32}]],"length":15670,"saved":false}
{"ts":1363318044653,"patch":[[{"diffs":[[0,"($line))"],[-1,"\n\t\t\t\t"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":8279,"start2":8279,"length1":21,"length2":17}]],"length":15666,"saved":false}
{"ts":1363318048857,"patch":[[{"diffs":[[0,"break;\n\t\t\t\t}"],[1," "],[0,"\n\t\t\t\t$this->"]],"start1":8015,"start2":8015,"length1":24,"length2":25}]],"length":15667,"saved":false}
{"ts":1363318050650,"patch":[[{"diffs":[[0,"k;\n\t\t\t\t}"],[1,"\n               "],[0," \n\t\t\t\t$t"]],"start1":8019,"start2":8019,"length1":16,"length2":32}]],"length":15683,"saved":false}
{"ts":1363318058886,"patch":[[{"diffs":[[0,");\n\t\t\t\t}"],[-1,"\n\t\t\t\t"],[1," "],[0,"else\n\t\t\t"]],"start1":8664,"start2":8664,"length1":21,"length2":17}]],"length":15679,"saved":false}
{"ts":1363318061110,"patch":[[{"diffs":[[0,"\t\t} else"],[-1,"\n\t\t\t\t"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":8669,"start2":8669,"length1":21,"length2":17}]],"length":15675,"saved":false}
{"ts":1363318074485,"patch":[[{"diffs":[[0,"== $section)"],[1," {"],[0,"\n\t\t\treturn t"]],"start1":10178,"start2":10178,"length1":24,"length2":26}]],"length":15677,"saved":false}
{"ts":1363318077059,"patch":[[{"diffs":[[0,"n true;\n"],[1,"\t\t}\n"],[0,"\t\t\n\n\t\t//"]],"start1":10201,"start2":10201,"length1":16,"length2":20}]],"length":15681,"saved":false}
{"ts":1363318078724,"patch":[[{"diffs":[[0,"\t\tswitch"],[1," "],[0,"($sectio"]],"start1":10246,"start2":10246,"length1":16,"length2":17}]],"length":15682,"saved":false}
{"ts":1363318080983,"patch":[[{"diffs":[[0,"section)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tcas"]],"start1":10257,"start2":10257,"length1":19,"length2":17}]],"length":15680,"saved":false}
{"ts":1363318088686,"patch":[[{"diffs":[[0,"n false;"],[-1,"\n\t\t\t"],[0,"\t\n\t\t}\n\n\t"]],"start1":10638,"start2":10638,"length1":20,"length2":16}]],"length":15676,"saved":false}
{"ts":1363318095130,"patch":[[{"diffs":[[0,"== null)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$tl"]],"start1":11186,"start2":11186,"length1":19,"length2":17}]],"length":15674,"saved":false}
{"ts":1363318098911,"patch":[[{"diffs":[[0,"y($key))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$th"]],"start1":11402,"start2":11402,"length1":19,"length2":17}]],"length":15672,"saved":false}
{"ts":1363318107104,"patch":[[{"diffs":[[0,"h ($key)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tcas"]],"start1":11483,"start2":11483,"length1":19,"length2":17}]],"length":15670,"saved":false}
{"ts":1363318110873,"patch":[[{"diffs":[[0,"s');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase 'H' :\n\t\t"]],"start1":11539,"start2":11539,"length1":36,"length2":32}]],"length":15666,"saved":false}
{"ts":1363318113588,"patch":[[{"diffs":[[0,"s');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase 'P' :\n\t\t"]],"start1":11599,"start2":11599,"length1":36,"length2":32}]],"length":15662,"saved":false}
{"ts":1363318116211,"patch":[[{"diffs":[[0,"s');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase 'x' :\n\t\t"]],"start1":11661,"start2":11661,"length1":36,"length2":32}]],"length":15658,"saved":false}
{"ts":1363318118560,"patch":[[{"diffs":[[0,"return;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase "]],"start1":11718,"start2":11718,"length1":20,"length2":16}]],"length":15654,"saved":false}
{"ts":1363318122630,"patch":[[{"diffs":[[0,"r');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_CURL"]],"start1":11768,"start2":11768,"length1":36,"length2":32}]],"length":15650,"saved":false}
{"ts":1363318126208,"patch":[[{"diffs":[[0,"t');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_CURR"]],"start1":11834,"start2":11834,"length1":36,"length2":32}]],"length":15646,"saved":false}
{"ts":1363318130303,"patch":[[{"diffs":[[0,"t');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_CURU"]],"start1":11902,"start2":11902,"length1":36,"length2":32}]],"length":15642,"saved":false}
{"ts":1363318133035,"patch":[[{"diffs":[[0,"p');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_CURD"]],"start1":11964,"start2":11964,"length1":36,"length2":32}]],"length":15638,"saved":false}
{"ts":1363318137618,"patch":[[{"diffs":[[0,"n');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_CURL"]],"start1":12030,"start2":12030,"length1":36,"length2":32}]],"length":15634,"saved":false}
{"ts":1363318141012,"patch":[[{"diffs":[[0,"t');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_CURR"]],"start1":12106,"start2":12106,"length1":36,"length2":32}]],"length":15630,"saved":false}
{"ts":1363318145158,"patch":[[{"diffs":[[0,"t');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_CURU"]],"start1":12184,"start2":12184,"length1":36,"length2":32}]],"length":15626,"saved":false}
{"ts":1363318149656,"patch":[[{"diffs":[[0,"p');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_CURD"]],"start1":12256,"start2":12256,"length1":36,"length2":32}]],"length":15622,"saved":false}
{"ts":1363318152894,"patch":[[{"diffs":[[0,"n');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_HOME"]],"start1":12332,"start2":12332,"length1":36,"length2":32}]],"length":15618,"saved":false}
{"ts":1363318155058,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_END "]],"start1":12392,"start2":12392,"length1":36,"length2":32}]],"length":15614,"saved":false}
{"ts":1363318157966,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_PAGE"]],"start1":12450,"start2":12450,"length1":36,"length2":32}]],"length":15610,"saved":false}
{"ts":1363318160010,"patch":[[{"diffs":[[0,"p');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_PAGE"]],"start1":12511,"start2":12511,"length1":36,"length2":32}]],"length":15606,"saved":false}
{"ts":1363318161915,"patch":[[{"diffs":[[0,"n');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_INSE"]],"start1":12576,"start2":12576,"length1":36,"length2":32}]],"length":15602,"saved":false}
{"ts":1363318164229,"patch":[[{"diffs":[[0,"t');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_BS :"]],"start1":12636,"start2":12636,"length1":36,"length2":32}]],"length":15598,"saved":false}
{"ts":1363318166681,"patch":[[{"diffs":[[0,"e');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_TAB "]],"start1":12695,"start2":12695,"length1":36,"length2":32}]],"length":15594,"saved":false}
{"ts":1363318168669,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_SHIF"]],"start1":12753,"start2":12753,"length1":36,"length2":32}]],"length":15590,"saved":false}
{"ts":1363318170408,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_DELE"]],"start1":12822,"start2":12822,"length1":36,"length2":32}]],"length":15586,"saved":false}
{"ts":1363318172739,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_ESCA"]],"start1":12886,"start2":12886,"length1":36,"length2":32}]],"length":15582,"saved":false}
{"ts":1363318174727,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_F1 :"]],"start1":12950,"start2":12950,"length1":36,"length2":32}]],"length":15578,"saved":false}
{"ts":1363318177205,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_F2 :"]],"start1":13006,"start2":13006,"length1":36,"length2":32}]],"length":15574,"saved":false}
{"ts":1363318178910,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_F3 :"]],"start1":13062,"start2":13062,"length1":36,"length2":32}]],"length":15570,"saved":false}
{"ts":1363318180668,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_F4 :"]],"start1":13118,"start2":13118,"length1":36,"length2":32}]],"length":15566,"saved":false}
{"ts":1363318182301,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_F5 :"]],"start1":13174,"start2":13174,"length1":36,"length2":32}]],"length":15562,"saved":false}
{"ts":1363318183798,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_F6 :"]],"start1":13230,"start2":13230,"length1":36,"length2":32}]],"length":15558,"saved":false}
{"ts":1363318185338,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_F7 :"]],"start1":13286,"start2":13286,"length1":36,"length2":32},{"diffs":[[0,");\n\t\t\t\tbreak;\n\t\t"],[-1,"\t"],[0,"\n\t\t\tcase KEY_F8 "]],"start1":13344,"start2":13344,"length1":33,"length2":32}]],"length":15553,"saved":false}
{"ts":1363318186804,"patch":[[{"diffs":[[0,"\tbreak;\n"],[-1,"\t\t\n"],[0,"\t\t\tcase "]],"start1":13350,"start2":13350,"length1":19,"length2":16},{"diffs":[[0,");\n\t\t\t\tif ($"],[-1,"t"],[0,"his->getTTyp"]],"start1":13437,"start2":13437,"length1":25,"length2":24}]],"length":15549,"saved":false}
{"ts":1363318188185,"patch":[[{"diffs":[[0,";\n\t\t\t\tif"],[-1," ($"],[0,"his->get"]],"start1":13438,"start2":13438,"length1":19,"length2":16}]],"length":15546,"saved":false}
{"ts":1363318190114,"patch":[[{"diffs":[[0,";\n\t\t\t\tif"],[1," "],[0,"his->get"]],"start1":13438,"start2":13438,"length1":16,"length2":17}]],"length":15547,"saved":false}
{"ts":1363318191296,"patch":[[{"diffs":[[0,"\n\t\t\t\tif "],[1,"($"],[0,"his->get"]],"start1":13439,"start2":13439,"length1":16,"length2":18}]],"length":15549,"saved":false}
{"ts":1363318192867,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[1,"\n"],[0,"\t\t\tcase KEY_F8 :"]],"start1":13342,"start2":13342,"length1":32,"length2":33},{"diffs":[[0,"\t\t\tif ($"],[1,"t"],[0,"his->get"]],"start1":13442,"start2":13442,"length1":16,"length2":17}]],"length":15551,"saved":false}
{"ts":1363318203400,"patch":[[{"diffs":[[0,"\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase "]],"start1":13350,"start2":13350,"length1":17,"length2":16},{"diffs":[[0,"ype() + 1);\n"],[1,"                \n"],[0,"\t\t\t\tif ($thi"]],"start1":13428,"start2":13428,"length1":24,"length2":41}]],"length":15567,"saved":false}
{"ts":1363318206536,"patch":[[{"diffs":[[0,"YPE_NUM)"],[1," {"],[0,"\n\t\t\t\t\t$t"]],"start1":13495,"start2":13495,"length1":16,"length2":18}]],"length":15569,"saved":false}
{"ts":1363318208300,"patch":[[{"diffs":[[0,"etTType(0);\n"],[1,"\t\t\t\t}\n"],[0,"\t\t\t\t$this->u"]],"start1":13519,"start2":13519,"length1":24,"length2":30}]],"length":15575,"saved":false}
{"ts":1363318210221,"patch":[[{"diffs":[[0,"e(0);\n\t\t\t\t}\n"],[1,"                \n"],[0,"\t\t\t\t$this->u"]],"start1":13525,"start2":13525,"length1":24,"length2":41}]],"length":15592,"saved":false}
{"ts":1363318212928,"patch":[[{"diffs":[[0,")');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_F9 :"]],"start1":13653,"start2":13653,"length1":36,"length2":32}]],"length":15588,"saved":false}
{"ts":1363318215790,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_F10 "]],"start1":13709,"start2":13709,"length1":36,"length2":32}]],"length":15584,"saved":false}
{"ts":1363318217431,"patch":[[{"diffs":[[0,"y');\n\t\t\t\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase KEY_F11 "]],"start1":13767,"start2":13767,"length1":36,"length2":32}]],"length":15580,"saved":false}
{"ts":1363318284077,"patch":[[{"diffs":[[0,"lnet\n*/\n"],[1,"#Almost PST"],[0,"\nnamespa"]],"start1":76,"start2":76,"length1":16,"length2":27},{"diffs":[[0,"\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase "]],"start1":13844,"start2":13844,"length1":20,"length2":16},{"diffs":[[0,"\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tdefau"]],"start1":13902,"start2":13902,"length1":20,"length2":16},{"diffs":[[0,"$a = 0;\n"],[1,"        \n"],[0,"\t\twhile "]],"start1":15261,"start2":15261,"length1":16,"length2":25},{"diffs":[[0,"dex($a))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tif "]],"start1":15317,"start2":15317,"length1":19,"length2":17},{"diffs":[[0,"section)"],[-1,"\n\t\t\t"],[1," "],[0,"{\n\t\t\t\tif"]],"start1":15356,"start2":15356,"length1":20,"length2":17},{"diffs":[[0,"\t\t\t}"],[-1,"\n\t\t\telse\n\t\t\t"],[1," else "],[0,"{\n\t\t"]],"start1":15457,"start2":15457,"length1":20,"length2":14},{"diffs":[[0,"ED) > 0)"],[1," {"],[0,"\n\t\t\t\t\t$o"]],"start1":15517,"start2":15517,"length1":16,"length2":18},{"diffs":[[0,"ected();\n\t\t\t"],[-1,"}"],[1,"\t}\n\t\t\t}\n            "],[0,"\n\t\t\t$a++;\n\t\t"]],"start1":15551,"start2":15551,"length1":25,"length2":44}]],"length":15602,"saved":false}
{"ts":1363318284887,"patch":[[{"diffs":[[0,"most PST"],[1,"+"],[0,"\nnamespa"]],"start1":87,"start2":87,"length1":16,"length2":17}]],"length":15603,"saved":false}
{"ts":1363318286528,"patch":[[{"diffs":[[0,"t PS"],[-1,"T+"],[1,"R"],[0,"\nnam"]],"start1":90,"start2":90,"length1":10,"length2":9}]],"length":15602,"saved":false}

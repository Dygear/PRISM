{"ts":1363202440322,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n/**\n * PHPInSimMod - PHPParser Module\n * @package PRISM\n * @subpackage PHPParser\n*/\n\ndefine('PRISM_SESSION_TIMEOUT', 900);\t\t// how long a session is valid \n\nclass PHPParser\n{\n\tprivate static $scriptCache = array();\n\tprivate static $sessions = array();\n\t\n\tpublic static function parseFile(HttpResponse &$RESPONSE, $file, array $SERVER, array &$GET, array &$POST, array &$COOKIE, array &$FILES)\n\t{\n\t\tglobal $PRISM;\n\t\t\n\t\t// Restore session?\n\t\tif (isset($COOKIE['PrismSession']) && \n\t\t\tisset(self::$sessions[$COOKIE['PrismSession']]) &&\n\t\t\tself::$sessions[$COOKIE['PrismSession']][0] > time() &&\n\t\t\tself::$sessions[$COOKIE['PrismSession']][1] == $SERVER['REMOTE_ADDR'])\n\t\t{\n\t\t\t$_SESSION = self::$sessions[$COOKIE['PrismSession']][2];\n\t\t\t\n\t\t\t// Sessions only last for one request. We rewrite it later on if needed.\n\t\t\tunset(self::$sessions[$COOKIE['PrismSession']]);\n\t\t}\n\t\t\n\t\t// Change working dir to docRoot\n\t\tchdir($PRISM->http->getDocRoot());\n\t\t\n\t\t$prismScriptNameHash = md5($PRISM->http->getDocRoot().$file);\n\t\t$prismScriptMTime = filemtime($PRISM->http->getDocRoot().$file);\n\t\tclearstatcache();\n\n\t\t// Run script from cache?\n\t\tif (isset(self::$scriptCache[$prismScriptNameHash]) &&\n\t\t\tself::$scriptCache[$prismScriptNameHash][0] == $prismScriptMTime)\n\t\t{\n\t\t\tob_start();\n\t\t\teval(self::$scriptCache[$prismScriptNameHash][1]);\n\t\t\t$html = ob_get_contents();\n\t\t\tob_end_clean();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Validate the php file\n\t\t\t$parseResult = validatePHPFile($PRISM->http->getDocRoot().$file);\n\t\t\tif ($parseResult[0])\n\t\t\t{\n\t\t\t\t// Run the script from disk\n\t\t\t\t$prismPhpScript = preg_replace(array('/^<\\?(php)?/', '/\\?>$/'), '', file_get_contents($PRISM->http->getDocRoot().$file));\n\t\t\t\tob_start();\n\t\t\t\teval($prismPhpScript);\n\t\t\t\t$html = ob_get_contents();\n\t\t\t\tob_end_clean();\n\n\t\t\t\t// Cache the php file\n\t\t\t\tself::$scriptCache[$prismScriptNameHash] = array($prismScriptMTime, $prismPhpScript);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$eol = \"\\r\\n\";\n\t\t\t\t$html = '<html>'.$eol;\n\t\t\t\t$html .= '<head><title>Error parsing page</title></head>'.$eol;\n\t\t\t\t$html .= '<body bgcolor=\"white\">'.$eol;\n\t\t\t\t$html .= '<center><h4>'.implode(\"<br />\\r\\n\", $parseResult[1]).'</h4></center>'.$eol;\n\t\t\t\t$html .= '<hr><center>PRISM v'.PHPInSimMod::VERSION.'</center>'.$eol;\n\t\t\t\t$html .= '</body>'.$eol;\n\t\t\t\t$html .= '</html>'.$eol;\n\t\t\t\tunset(self::$scriptCache[$prismScriptNameHash]);\n\t\t\t}\n\t\t}\n\n\t\t// Should we store the session?\n\t\tif (isset($_SESSION) && $_SESSION != '')\n\t\t{\n\t\t\t$sessionID = sha1(createRandomString(128, RAND_BINARY).time());\n\t\t\tself::$sessions[$sessionID] = array(time() + PRISM_SESSION_TIMEOUT, $SERVER['REMOTE_ADDR'], $_SESSION);\n\t\t\t$RESPONSE->setCookie('PrismSession', $sessionID, time() + PRISM_SESSION_TIMEOUT, '/', $SERVER['SERVER_NAME']);\n\t\t}\n\t\telse if (isset($COOKIE['PrismSession']))\n\t\t{\n\t\t\t$RESPONSE->setCookie('PrismSession', '', 0, '/', $SERVER['SERVER_NAME']);\n\t\t}\n\t\tunset($_SESSION);\n\t\t\n\t\t// Restore the working dir\n\t\tchdir(ROOTPATH);\n\n\t\t// Use compression?\n\t\tif ($html != '' && isset($SERVER['HTTP_ACCEPT_ENCODING']))\n\t\t{\n\t\t\t$encoding = '';\n\t\t\tif (strpos($SERVER['HTTP_ACCEPT_ENCODING'], 'x-gzip') !== false) $encoding = 'x-gzip';\n\t\t\telse if (strpos($SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== false) $encoding = 'gzip';\n\t\t\t\n\t\t\tif ($encoding) {\n\t\t\t    $RESPONSE->addHeader('Content-Encoding: '.$encoding);\n\t\t\t    return gzencode ($html, 1);\n\t\t\t} else return $html;\n\t\t}\n\t\telse\n\t\t\treturn $html;\n\t}\n\t\n\tpublic static function cleanSessions()\n\t{\n\t\tforeach (self::$sessions as $k => $v)\n\t\t{\n\t\t\tif ($v[0] < time())\n\t\t\t\tunset(self::$sessions[$k]);\n\t\t}\n\t}\n}\n\n?>"]],"start1":0,"start2":0,"length1":0,"length2":3540}]],"length":3540}
{"contributors":[],"silentsave":true,"ts":1363208203385,"patch":[[{"diffs":[[0,"ser\n*/\n\n"],[1,"\n\n"],[0,"define('"]],"start1":83,"start2":83,"length1":16,"length2":18}]],"length":3542,"saved":false}
{"ts":1363208205532,"patch":[[{"diffs":[[0,"ser\n*/\n\n"],[1,"namespa"],[0,"\n\ndefine"]],"start1":83,"start2":83,"length1":16,"length2":23}]],"length":3549,"saved":false}
{"ts":1363208207289,"patch":[[{"diffs":[[0,"\nnamespa"],[1,"ce "],[0,"\n\ndefine"]],"start1":90,"start2":90,"length1":16,"length2":19}]],"length":3552,"saved":false}
{"ts":1363208209480,"patch":[[{"diffs":[[0,"mespace "],[1,"PRIS"],[0,"\n\ndefine"]],"start1":93,"start2":93,"length1":16,"length2":20}]],"length":3556,"saved":false}
{"ts":1363208211044,"patch":[[{"diffs":[[0,"ace PRIS"],[1,"M\\M"],[0,"\n\ndefine"]],"start1":97,"start2":97,"length1":16,"length2":19}]],"length":3559,"saved":false}
{"ts":1363208212590,"patch":[[{"diffs":[[0," PRISM\\M"],[1,"odul"],[0,"\n\ndefine"]],"start1":100,"start2":100,"length1":16,"length2":20}]],"length":3563,"saved":false}
{"ts":1363208213755,"patch":[[{"diffs":[[0,"SM\\Modul"],[1,"e"],[0,"\n\ndefine"]],"start1":104,"start2":104,"length1":16,"length2":17}]],"length":3564,"saved":false}
{"ts":1363208215120,"patch":[[{"diffs":[[0,"M\\Module"],[1,";"],[0,"\n\ndefine"]],"start1":105,"start2":105,"length1":16,"length2":17}]],"length":3565,"saved":false}
{"ts":1363210739485,"patch":[[{"diffs":[[0,"}\n}\n"],[-1,"\n?>"]],"start1":3558,"start2":3558,"length1":7,"length2":4}]],"length":3562,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363314210887,"patch":[[{"diffs":[[0,"n']) && "],[-1,"\n\t\t\t"],[0,"isset(se"]],"start1":501,"start2":501,"length1":20,"length2":16},{"diffs":[[0,"ssion']]) &&"],[-1,"\n\t\t\t"],[1," "],[0,"self::$sessi"]],"start1":547,"start2":547,"length1":28,"length2":25},{"diffs":[[0," > time() &&"],[-1,"\n\t\t\t"],[1," "],[0,"self::$sessi"]],"start1":603,"start2":603,"length1":28,"length2":25},{"diffs":[[0,"_ADDR'])"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$_S"]],"start1":678,"start2":678,"length1":19,"length2":17},{"diffs":[[0,"ash]) &&"],[-1,"\n\t\t\t"],[1," "],[0,"self::$s"]],"start1":1191,"start2":1191,"length1":20,"length2":17},{"diffs":[[0,"ptMTime)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tob_"]],"start1":1257,"start2":1257,"length1":19,"length2":17},{"diffs":[[0,"n();\n\t\t}"],[-1,"\n\t\t"],[1," "],[0,"else"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t// "]],"start1":1381,"start2":1381,"length1":26,"length2":22},{"diffs":[[0,"sult[0])"],[-1,"\n\t\t\t"],[1," "],[0,"{\n\t\t\t\t//"]],"start1":1509,"start2":1509,"length1":20,"length2":17},{"diffs":[[0,"\t\t\t}"],[-1,"\n\t\t\telse\n\t\t\t"],[1," else "],[0,"{\n\t\t"]],"start1":1889,"start2":1889,"length1":20,"length2":14},{"diffs":[[0,"N != '')"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$se"]],"start1":2412,"start2":2412,"length1":19,"length2":17},{"diffs":[[0,"NAME']);\n\t\t}"],[-1,"\n\t\t"],[1," "],[0,"else if (iss"]],"start1":2702,"start2":2702,"length1":27,"length2":25},{"diffs":[[0,"mSession']))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$RESPON"]],"start1":2743,"start2":2743,"length1":27,"length2":25},{"diffs":[[0,"]);\n\t\t}\n"],[1,"        \n"],[0,"\t\tunset("]],"start1":2831,"start2":2831,"length1":16,"length2":25},{"diffs":[[0,"DING']))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$en"]],"start1":2994,"start2":2994,"length1":19,"length2":17},{"diffs":[[0,"g = '';\n"],[1,"            \n"],[0,"\t\t\tif (s"]],"start1":3016,"start2":3016,"length1":16,"length2":29},{"diffs":[[0,"zip') !== false)"],[1," {\n               "],[0," $encoding = 'x-"]],"start1":3088,"start2":3088,"length1":32,"length2":50},{"diffs":[[0,"ip';\n\t\t\t"],[1,"} "],[0,"else if "]],"start1":3140,"start2":3140,"length1":16,"length2":18},{"diffs":[[0,"= false)"],[1," {\n               "],[0," $encodi"]],"start1":3209,"start2":3209,"length1":16,"length2":34},{"diffs":[[0,"'gzip';\n"],[1,"\t\t\t} else {\n    \t\t    # Nothing...   \n\t\t\t}\n"],[0,"\t\t\t\n\t\t\ti"]],"start1":3248,"start2":3248,"length1":16,"length2":59},{"diffs":[[0,"\t} else "],[1,"{\n                "],[0,"return $"]],"start1":3421,"start2":3421,"length1":16,"length2":34},{"diffs":[[0,";\n\t\t"],[1,"\t"],[0,"}\n\t\t"],[1,"} "],[0,"else"],[1," {"],[0,"\n\t\t\t"]],"start1":3459,"start2":3459,"length1":16,"length2":21},{"diffs":[[0," $html;\n"],[1,"\t\t}\n"],[0,"\t}\n\t\n\tpu"]],"start1":3486,"start2":3486,"length1":16,"length2":20},{"diffs":[[0,"k => $v)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tif "]],"start1":3577,"start2":3577,"length1":19,"length2":17},{"diffs":[[0," time())"],[1," {"],[0,"\n\t\t\t\tuns"]],"start1":3602,"start2":3602,"length1":16,"length2":18},{"diffs":[[0,"sions[$k]);\n"],[1,"\t\t\t}\n"],[0,"\t\t}\n\t}\n}\n"]],"start1":3633,"start2":3633,"length1":21,"length2":26}]],"length":3659,"saved":false}
{"ts":1363314222739,"patch":[[{"diffs":[[0,"rser\n*/\n"],[1,"# Almost PSR"],[0,"\nnamespa"]],"start1":82,"start2":82,"length1":16,"length2":28}]],"length":3671,"saved":false}

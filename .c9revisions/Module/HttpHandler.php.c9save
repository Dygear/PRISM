{"ts":1363202262352,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n/**\n * PHPInSimMod - Http Module\n * @package PRISM\n * @subpackage Http\n*/\n\nrequire_once(ROOTPATH . '/modules/prism_sectionhandler.php');\nrequire_once(ROOTPATH . '/modules/prism_phpparser.php');\n\ndefine('HTTP_AUTH_REALM', 'Prism administration');\t// Token used for http auth & digest\ndefine('HTTP_KEEP_ALIVE', 10);\t\t\t\t\t\t// Keep-alive timeout in seconds\ndefine('HTTP_MAX_REQUEST_SIZE', 2097152);\t\t\t// Max http request size in bytes (headers + data)\ndefine('HTTP_MAX_URI_LENGTH', 4096);\t\t\t\t// Max length of the uri in the first http header\ndefine('HTTP_MAX_CONN', 1024);\t\t\t\t\t\t// Max number of simultaneous http connections\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Experimentation showed it's best to keep this pretty high.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// FD_SETSIZE is usually 1024; the max connections allowed on a socket.\n\nclass HttpHandler extends SectionHandler\n{\n\tprivate $httpSock\t\t= NULL;\n\tprivate $httpClients\t= array();\n\tprivate $httpNumClients\t= 0;\n\n\tprivate $httpVars\t\t= array();\n\tpublic $cache\t\t\t= null;\n\tprivate $nonceCache\t\t= array();\n\t\n\tprivate $docRoot\t\t= '';\n\tprivate $logFile\t\t= '';\n\tprivate $siteDomain\t\t= '';\n\n\tpublic function __construct()\n\t{\n\t\t$this->iniFile = 'http.ini';\n\t}\n\t\n\tpublic function getHttpNumClients()\n\t{\n\t\treturn $this->httpNumClients;\n\t}\n\n\tpublic function &getHttpInfo()\n\t{\n\t\t$info = array();\n\t\tforeach ($this->httpClients as $k => $v)\n\t\t{\n\t\t\t$info[] = array(\n\t\t\t\t'ip' => $v->getRemoteIP(),\n\t\t\t\t'port' => $v->getRemotePort(),\n\t\t\t\t'lastActivity' => $v->getLastActivity(),\n\t\t\t);\n\t\t}\n\t\treturn $info;\n\t}\n\n\tpublic function getDocRoot()\n\t{\n\t\treturn $this->docRoot;\n\t}\n\t\n\tpublic function getLogFile()\n\t{\n\t\treturn $this->logFile;\n\t}\n\t\n\tpublic function getSiteDomain()\n\t{\n\t\treturn $this->siteDomain;\n\t}\n\t\n\tpublic function getHttpAuthPath()\n\t{\n\t\treturn $this->httpVars['httpAuthPath'];\n\t}\n\t\n\tpublic function getHttpAuthType()\n\t{\n\t\treturn $this->httpVars['httpAuthType'];\n\t}\n\t\n\tpublic function getNonceInfo(&$nonce)\n\t{\n\t\tif (!isset($this->nonceCache[$nonce]))\n\t\t\treturn false;\n\t\t\n\t\treturn array($this->nonceCache[$nonce][0], $this->nonceCache[$nonce][1], $this->nonceCache[$nonce][2]);\n\t}\n\t\n\tpublic function addNewNonce(&$nonce)\n\t{\n\t\t$opaque = createRandomString(16, RAND_HEX);\n\t\t$this->nonceCache[$nonce] = array(time(), 0, $opaque);\n\t\treturn $opaque;\n\t}\n\t\n\tpublic function incNonceCounter(&$nonce, &$nc)\n\t{\n\t\tif (!isset($this->nonceCache[$nonce]))\n\t\t\treturn false;\n\t\t\n\t\t$this->nonceCache[$nonce][0] = time();\n\t\t$this->nonceCache[$nonce][1] = $nc;\n\t\t\n\t\treturn true;\n\t}\n\t\n\tpublic function __destruct()\n\t{\n\t\t$this->close(true);\n\t}\n\t\n\tprivate function close($all)\n\t{\n\t\tif (is_resource($this->httpSock))\n\t\t\tfclose($this->httpSock);\n\t\t\n\t\tif (!$all)\n\t\t\treturn;\n\t\t\n\t\tfor ($k=0; $k<$this->httpNumClients; $k++)\n\t\t{\n\t\t\tarray_splice($this->httpClients, $k, 1);\n\t\t\t$k--;\n\t\t\t$this->httpNumClients--;\n\t\t}\n\t}\n\t\n\tpublic function initialise()\n\t{\n\t\tglobal $PRISM;\n\t\t\n\t\t$this->httpVars = array\n\t\t(\n\t\t\t'ip'\t\t\t=> '', \n\t\t\t'port'\t\t\t=> 0, \n\t\t\t'path'\t\t\t=> 'www-docs', \n\t\t\t'siteDomain'\t=> '', \n\t\t\t'httpAuthPath'\t=> '', \n\t\t\t'httpAuthType'\t=> 'Digest', \n\t\t\t'logFile'\t\t=> 'logs/http.log',\n\t\t);\n\t\t\n\t\tif ($this->loadIniFile($this->httpVars, false))\n\t\t{\n\t\t\tif ($PRISM->config->cvars['debugMode'] & PRISM_DEBUG_CORE)\n\t\t\t\tconsole('Loaded '.$this->iniFile);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t# We ask the client to manually input the connection details here.\n\t\t\trequire_once(ROOTPATH . '/modules/prism_interactive.php');\n\t\t\tInteractive::queryHttp($this->httpVars);\n\t\t\t\n\t\t\t# Then build a http.ini file based on these details provided.\n\t\t\t$extraInfo = <<<ININOTES\n;\n; Http listen details (for administration web pages).\n; 0.0.0.0 will bind the listen socket to all available network interfaces.\n; To limit the bind to one interface only, you can enter its IP address here.\n; If you do not want to use the http feature, you can comment or remove the lines,\n; or enter \"\" and 0 for the ip and port.\n;\n\nININOTES;\n\t\t\tif ($this->createIniFile('HTTP Configuration (web admin)', array('http' => &$this->httpVars), $extraInfo))\n\t\t\t\tconsole('Generated config/'.$this->iniFile);\n\t\t}\n\n\t\t// Set docRoot\n\t\tif (!$this->setDocRoot())\n\t\t\treturn false;\n\t\t\n\t\t// Set logFile\n\t\tif (!$this->setLogFile())\n\t\t\treturn false;\n\t\t\n\t\t// Setup http socket to listen on\n\t\tif (!$this->setupListenSocket())\n\t\t\treturn false;\n\t\t\n\t\t// Setup site domain\n\t\t$this->setupSiteDomain();\n\t\t\n\t\t// Validate httpAuthPath\n\t\tif (!$this->validateAuthPath())\n\t\t\treturn false;\n\t\t\n\t\t// Validate httpAuthType\n\t\tif ($this->httpVars['httpAuthType'] != 'Digest' & $this->httpVars['httpAuthType'] != 'Basic')\n\t\t{\n\t\t\tconsole('Invalid httpAuthType in '.$this->iniFile);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\tprivate function setupListenSocket()\n\t{\n\t\t$this->close(false);\n\t\t\n\t\tif ($this->httpVars['ip'] != '' && $this->httpVars['port'] > 0)\n\t\t{\n\t\t\t$this->httpSock = @stream_socket_server('tcp://'.$this->httpVars['ip'].':'.$this->httpVars['port'], $httpErrNo, $httpErrStr);\n\t\t\tif (!is_resource($this->httpSock) || $this->httpSock === FALSE || $httpErrNo)\n\t\t\t{\n\t\t\t\tconsole('Error opening http socket : '.$httpErrStr.' ('.$httpErrNo.')');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconsole('Listening for http requests on '.$this->httpVars['ip'].':'.$this->httpVars['port']);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tprivate function setDocRoot()\n\t{\n\t\t// Strip trailing slashes\n\t\t$this->httpVars['path'] = preg_replace('/(.*)([\\/\\\\\\]*)$/U', '\\\\1', $this->httpVars['path']);\n\t\t\n\t\tif ($this->httpVars['path'] == '')\n\t\t\t$this->httpVars['path'] = 'www-docs';\n\t\t\n\t\t// Store in docRoot\n\t\t$this->docRoot = \n\t\t\t($this->httpVars['path'][0] == '/' || (isset($this->httpVars['path'][1]) && $this->httpVars['path'][1] == ':')) ? \n\t\t\t$this->httpVars['path'] : \n\t\t\tROOTPATH.'/'.$this->httpVars['path'];\n\t\t\n\t\t// Check if it's valid\n\t\tif (!file_exists($this->docRoot))\n\t\t{\n\t\t\tconsole('The path to your web-root does not exist : '.$this->httpVars['path']);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\n\tprivate function setLogFile()\n\t{\n\t\t// Strip trailing slashes\n\t\t$this->httpVars['logFile'] = preg_replace('/(.*)([\\/\\\\\\]*)$/U', '\\\\1', $this->httpVars['logFile']);\n\t\t\n\t\tif ($this->httpVars['logFile'] == '')\n\t\t\t$this->httpVars['logFile'] = 'logs/http.log';\n\t\t\n\t\t// Store in logFile\n\t\t$this->logFile = \n\t\t\t($this->httpVars['logFile'][0] == '/' || (isset($this->httpVars['logFile'][1]) && $this->httpVars['logFile'][1] == ':')) ? \n\t\t\t$this->httpVars['logFile'] : \n\t\t\tROOTPATH.'/'.$this->httpVars['logFile'];\n\t\t\n\t\t// Check if its path is valid\n\t\t$logPath = pathinfo($this->logFile);\n\t\tif (!isset($logPath['filename']) || $logPath['filename'] == '' || !file_exists($logPath['dirname']))\n\t\t{\n\t\t\tconsole('The path to your log folder does not exist : '.$logPath);\n\t\t\treturn false;\n\t\t}\n\t\telse if (is_dir($this->logFile))\n\t\t{\n\t\t\tconsole('The path to your http log folder is a folder itself : '.$this->logFile);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\n\tprivate function setupSiteDomain()\n\t{\n\t\t$this->siteDomain = '';\n\t\t\n\t\t// Ignore site domain? (accept any incoming request, no matter what host the request contains)\n\t\tif ($this->httpVars['siteDomain'] == '')\n\t\t\treturn;\n\t\tif (!getIP($this->httpVars['siteDomain']))\n\t\t{\n\t\t\tconsole('Invalid siteDomain provided in '.$this->iniFile.' (it does not resolve). Ignoring this setting.');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t$this->siteDomain = $this->httpVars['siteDomain'];\n\t}\n\t\n\tprivate function validateAuthPath()\n\t{\n\t\tif ($this->httpVars['httpAuthPath'] == '')\n\t\t\treturn true;\n\t\tif ($this->httpVars['httpAuthPath'] == '/')\n\t\t{\n\t\t\t$this->httpVars['httpAuthPath'] = $this->docRoot.$this->httpVars['httpAuthPath'];\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t// Strip trailing slashes\n\t\t$this->httpVars['httpAuthPath'] = preg_replace('/(.+)([\\/\\\\\\]*)$/U', '\\\\1', $this->httpVars['httpAuthPath']);\n\t\t\n\t\t// Check relative or absolute\n\t\t$this->httpVars['httpAuthPath'] = \n\t\t\t($this->httpVars['httpAuthPath'][0] == '/' || (isset($this->httpVars['httpAuthPath'][1]) && $this->httpVars['httpAuthPath'][1] == ':')) ? \n\t\t\t$this->httpVars['httpAuthPath'] : \n\t\t\t$this->docRoot.'/'.$this->httpVars['httpAuthPath'];\n\t\t\n\t\t// Check if it's valid\n\t\tif (!file_exists($this->httpVars['httpAuthPath']))\n\t\t{\n\t\t\tconsole('httpAuthPath path does not exist : '.$this->httpVars['httpAuthPath']);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\tpublic function getSelectableSockets(array &$sockReads, array &$sockWrites)\n\t{\n\t\t// Add http sockets to sockReads\n\t\tif (is_resource($this->httpSock))\n\t\t\t$sockReads[] = $this->httpSock;\n\n\t\tfor ($k=0; $k<$this->httpNumClients; $k++)\n\t\t{\n\t\t\tif (is_resource($this->httpClients[$k]->getSocket()))\n\t\t\t{\n\t\t\t\t$sockReads[] = $this->httpClients[$k]->getSocket();\n\t\t\t\t\n\t\t\t\t// If write buffer was full, we must check to see when we can write again\n\t\t\t\tif ($this->httpClients[$k]->getSendQLen() > 0 || $this->httpClients[$k]->getSendFilePntr() > -1)\n\t\t\t\t\t$sockWrites[] = $this->httpClients[$k]->getSocket();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function checkTraffic(array &$sockReads, array &$sockWrites)\n\t{\n\t\t$activity = 0;\n\n\t\t// httpSock input (incoming http connection)\n\t\tif (in_array ($this->httpSock, $sockReads))\n\t\t{\n\t\t\t$activity++;\n\t\t\t\n\t\t\t// Accept the new connection\n\t\t\t$peerInfo = '';\n\t\t\t$sock = @stream_socket_accept ($this->httpSock, NULL, $peerInfo);\n\t\t\tif (is_resource($sock))\n\t\t\t{\n\t\t\t\tstream_set_blocking ($sock, 0);\n\t\t\t\t\n\t\t\t\t// Add new connection to httpClients array\n\t\t\t\t$exp = explode(':', $peerInfo);\n\t\t\t\t$this->httpClients[] = new HttpClient($this, $sock, $exp[0], $exp[1]);\n\t\t\t\t$this->httpNumClients++;\n\t\t\t\tconsole('HTTP Client '.$exp[0].':'.$exp[1].' connected.');\n\t\t\t}\n\t\t\tunset ($sock);\n\t\t}\n\t\t\n\t\t// httpClients input\n\t\tfor ($k=0; $k<$this->httpNumClients; $k++) {\n\t\t\t// Recover from a full write buffer?\n\t\t\tif (($this->httpClients[$k]->getSendQLen() > 0  || \n\t\t\t\t $this->httpClients[$k]->getSendFilePntr() > -1) &&\n\t\t\t\tin_array($this->httpClients[$k]->getSocket(), $sockWrites))\n\t\t\t{\n\t\t\t\t$activity++;\n\t\t\t\t\n\t\t\t\t// Flush the sendQ (bit by bit, not all at once - that could block the whole app)\n\t\t\t\tif ($this->httpClients[$k]->getSendQLen() > 0)\n\t\t\t\t\t$this->httpClients[$k]->flushSendQ();\n\t\t\t\telse\n\t\t\t\t\t$this->httpClients[$k]->writeFile();\n\t\t\t}\n\t\t\t\n\t\t\t// Did we receive something from a httpClient?\n\t\t\tif (!in_array($this->httpClients[$k]->getSocket(), $sockReads))\n\t\t\t\tcontinue;\n\n\t\t\t$activity++;\n\t\t\t\n\t\t\t$data = $this->httpClients[$k]->read();\n\t\t\t\n\t\t\t// Did the client hang up?\n\t\t\tif ($data == '')\n\t\t\t{\n\t\t\t\tconsole('Closed httpClient (client initiated) '.$this->httpClients[$k]->getRemoteIP().':'.$this->httpClients[$k]->getRemotePort());\n\t\t\t\tarray_splice ($this->httpClients, $k, 1);\n\t\t\t\t$k--;\n\t\t\t\t$this->httpNumClients--;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Ok we recieved some input from the http client.\n\t\t\t// Pass the data to the HttpClient so it can handle it.\n\t\t\tif (!$this->httpClients[$k]->handleInput($data, $errNo))\n\t\t\t{\n\t\t\t\t// Something went wrong - we can hang up now\n\t\t\t\tconsole('Closed httpClient ('.$errNo.' - '.HttpResponse::$responseCodes[$errNo].') '.$this->httpClients[$k]->getRemoteIP().':'.$this->httpClients[$k]->getRemotePort());\n\t\t\t\tarray_splice ($this->httpClients, $k, 1);\n\t\t\t\t$k--;\n\t\t\t\t$this->httpNumClients--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn $activity;\n\t}\n\n\tpublic function maintenance()\n\t{\n\t\tfor ($k=0; $k<$this->httpNumClients; $k++)\n\t\t{\n\t\t\tif ($this->httpClients[$k]->getLastActivity() < time() - HTTP_KEEP_ALIVE)\n\t\t\t{\n\t\t\t\tconsole('Closed httpClient (keep alive) '.$this->httpClients[$k]->getRemoteIP().':'.$this->httpClients[$k]->getRemotePort());\n\t\t\t\tarray_splice ($this->httpClients, $k, 1);\n\t\t\t\t$k--;\n\t\t\t\t$this->httpNumClients--;\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass HttpClient\n{\n\tprivate $http\t\t\t= null;\n\tprivate $socket\t\t\t= null;\n\tprivate $ip\t\t\t\t= '';\n\tprivate $port\t\t\t= 0;\n\tprivate $localIP\t\t= '';\n\tprivate $localPort\t\t= 0;\n\t\n\tprivate $lastActivity\t= 0;\n\t\n\t// send queue used for backlog, in case we can't send a reply in one go\n\tprivate $sendQ\t\t\t= '';\n\tprivate $sendQLen\t\t= 0;\n\t\n\tprivate $sendFile\t\t= null;\t\t\t\t// contains handle to file we're sending\n\tprivate $sendFilePntr\t= -1;\t\t\t\t// Points to where we are in the file\n\tprivate $sendFileSize\t= 0;\t\t\t\t// Points to where we are in the file\n\n\tprivate $sendWindow\t\t= STREAM_WRITE_BYTES;\t// dynamic window size\n\n\tprivate $httpRequest\t= null;\n\t\n\tpublic function __construct(HttpHandler &$http, &$sock, &$ip, &$port)\n\t{\n\t\t$this->http\t\t\t= $http;\n\t\t$this->socket\t\t= $sock;\n\t\t$this->ip\t\t\t= $ip;\n\t\t$this->port\t\t\t= $port;\n\t\t\n\t\t$localInfo = stream_socket_get_name($this->socket, false);\n\t\t$exp = explode(':', $localInfo);\n\t\t$this->localIP\t\t= $exp[0];\n\t\t$this->localPort\t= (int) $exp[1];\n\t\t\n\t\t$this->lastActivity\t= time();\n\t}\n\t\n\tpublic function __destruct()\n\t{\n\t\tif (is_resource($this->socket))\n\t\t\tfclose($this->socket);\n\t\t\n\t\tif ($this->sendFile)\n\t\t\t$this->writeFileReset();\n\t\tif ($this->sendQLen > 0)\n\t\t\t$this->sendQReset();\n\t}\n\t\n\tpublic function &getSocket()\n\t{\n\t\treturn $this->socket;\n\t}\n\t\n\tpublic function &getRemoteIP()\n\t{\n\t\treturn $this->ip;\n\t}\n\t\n\tpublic function &getRemotePort()\n\t{\n\t\treturn $this->port;\n\t}\n\t\n\tpublic function &getLastActivity()\n\t{\n\t\treturn $this->lastActivity;\n\t}\n\t\n\tpublic function write($data, $sendQPacket = FALSE)\n\t{\n\t\t$bytes = 0;\n\t\t$dataLen = strlen($data);\n\t\tif ($dataLen == 0)\n\t\t\treturn 0;\n\t\t\n\t\tif (!is_resource($this->socket))\n\t\t\treturn $bytes;\n\t\n\t\tif ($sendQPacket == TRUE)\n\t\t{\n\t\t\t// This packet came from the sendQ. We just try to send this and don't bother too much about error checking.\n\t\t\t// That's done from the sendQ flushing code.\n\t\t\t$bytes = @fwrite($this->socket, $data);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ($this->sendQLen == 0)\n\t\t\t{\n\t\t\t\t// It's Ok to send packet\n\t\t\t\t$bytes = @fwrite($this->socket, $data);\n\t\t\t\t$this->lastActivity = time();\n\t\t\n\t\t\t\tif (!$bytes || $bytes != $dataLen)\n\t\t\t\t{\n\t\t\t\t\t// Could not send everything in one go - send the remainder to sendQ\n\t\t\t\t\t$this->addPacketToSendQ (substr($data, $bytes));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Remote is lagged\n\t\t\t\t$this->addPacketToSendQ($data);\n\t\t\t}\n\t\t}\n\t\n\t\treturn $bytes;\n\t}\n\t\n\tpublic function &getSendQLen()\n\t{\n\t\treturn $this->sendQLen;\n\t}\n\t\n\tpublic function addPacketToSendQ($data)\n\t{\n\t\t$this->sendQ\t\t\t.= $data;\n\t\t$this->sendQLen\t\t\t+= strlen($data);\n\t}\n\t\n\tpublic function flushSendQ()\n\t{\n\t\t// Send chunk of data\n\t\t$bytes = $this->write(substr($this->sendQ, 0, $this->sendWindow), TRUE);\n\t\t\n\t\t// Dynamic window sizing\n\t\tif ($bytes == $this->sendWindow)\n\t\t\t$this->sendWindow += STREAM_WRITE_BYTES;\n\t\telse\n\t\t{\n\t\t\t$this->sendWindow -= STREAM_WRITE_BYTES;\n\t\t\tif ($this->sendWindow < STREAM_WRITE_BYTES)\n\t\t\t\t$this->sendWindow = STREAM_WRITE_BYTES;\n\t\t}\n\n\t\t// Update the sendQ\n\t\t$this->sendQ = substr($this->sendQ, $bytes);\n\t\t$this->sendQLen -= $bytes;\n\n\t\t// Cleanup / reset timers\n\t\tif ($this->sendQLen == 0)\n\t\t{\n\t\t\t// All done flushing - reset queue variables\n\t\t\t$this->sendQReset();\n\t\t} \n\t\telse if ($bytes > 0)\n\t\t{\n\t\t\t// Set when the last packet was flushed\n\t\t\t$this->lastActivity\t\t= time();\n\t\t}\n\t\t//console('Bytes sent : '.$bytes.' - Bytes left : '.$this->sendQLen);\n\t}\n\t\n\tpublic function sendQReset()\n\t{\n\t\t$this->sendQ\t\t\t= '';\n\t\t$this->sendQLen\t\t\t= 0;\n\t\t$this->lastActivity\t\t= time();\n\t}\n\t\n\tpublic function &getSendFilePntr()\n\t{\n\t\treturn $this->sendFilePntr;\n\t}\n\t\n\tpublic function writeFile($fileName = '', $startOffset = 0)\n\t{\n\t\tif ($fileName != '' && $this->sendFile == null)\n\t\t{\n\t\t\t$this->sendFile = fopen($fileName, 'rb');\n\t\t\tif (!$this->sendFile)\n\t\t\t\treturn false;\n\t\t\t$this->sendFilePntr = (int) $startOffset;\n\t\t\tfseek($this->sendFile, $this->sendFilePntr);\n\t\t\t$this->sendFileSize = filesize($fileName);\n\t\t\t$this->sendWindow\t+= STREAM_WRITE_BYTES;\n\t\t}\n\t\t\n\t\t$bytes = @fwrite($this->socket, fread($this->sendFile, $this->sendWindow));\n\t\t$this->sendFilePntr += $bytes;\n\t\tfseek($this->sendFile, $this->sendFilePntr);\n\t\t$this->lastActivity = time();\n\t\t\n\t\t// Dynamic window sizing\n\t\tif ($bytes == $this->sendWindow)\n\t\t\t$this->sendWindow += STREAM_WRITE_BYTES;\n\t\telse\n\t\t{\n\t\t\t$this->sendWindow -= STREAM_WRITE_BYTES;\n\t\t\tif ($this->sendWindow < STREAM_WRITE_BYTES)\n\t\t\t\t$this->sendWindow = STREAM_WRITE_BYTES;\n\t\t}\n\t\t\n\t\t//console('BYTES : '.$bytes.' - PNTR : '.$this->sendFilePntr);\n\t\t// Done?\n\t\tif ($this->sendFilePntr >= $this->sendFileSize)\n\t\t\t$this->writeFileReset();\n\t}\n\t\n\tprivate function writeFileReset()\n\t{\n\t\t@fclose($this->sendFile);\n\t\t$this->sendFile = null;\n\t\t$this->sendFileSize = 0;\n\t\t$this->sendFilePntr = -1;\n\t}\n\n\tprivate function createErrorPage($errNo, $errStr = '', $appendPadding = false)\n\t{\n\t\t$eol = \"\\r\\n\";\n\t\t$out = '<html>'.$eol;\n\t\t$out .= '<head><title>'.$errNo.' '.HttpResponse::$responseCodes[$errNo].'</title></head>'.$eol;\n\t\t$out .= '<body bgcolor=\"white\">'.$eol;\n\t\t$out .= '<center><h1>'.$errNo.' '.(($errStr != '') ? $errStr : HttpResponse::$responseCodes[$errNo]).'</h1></center>'.$eol;\n\t\t$out .= '<hr><center>PRISM v'.PHPInSimMod::VERSION.'</center>'.$eol;\n\t\t$out .= '</body>'.$eol;\n\t\t$out .= '</html>'.$eol;\n\t\t\n\t\tif ($appendPadding)\n\t\t{\n\t\t\tfor ($a=0; $a<6; $a++)\n\t\t\t\t$out .= '<!-- a padding to disable MSIE and Chrome friendly error page -->'.$eol;\n\t\t}\n\t\treturn $out;\n\t}\n\t\n\tpublic function read()\n\t{\n\t\t$this->lastActivity\t= time();\n\t\treturn fread($this->socket, STREAM_READ_BYTES);\n\t}\n\t\n\tpublic function handleInput(&$data, &$errNo)\n\t{\n\t\t// What is this? we're getting input while we're sending a reply?\n\t\tif ($this->sendFile)\n\t\t{\n\t\t\t$this->writeFileReset();\n\t\t\t$this->httpRequest = null;\n\t\t}\n\t\telse if ($this->sendQLen > 0)\n\t\t{\n\t\t\t$this->sendQReset();\n\t\t\t$this->httpRequest = null;\n\t\t}\n\n\t\tif (!$this->httpRequest)\n\t\t\t$this->httpRequest = new HttpRequest();\n\n\t\t// Pass the incoming data to the HttpRequest class, so it can handle it.\t\t\n\t\tif (!$this->httpRequest->handleInput($data))\n\t\t{\n\t\t\t// An error was encountered while receiving the requst.\n\t\t\t// Send reply (unless 444, a special 'direct reject' code) and return false to close this connection.\n\t\t\tif ($this->httpRequest->errNo != 444)\n\t\t\t{\n\t\t\t\t$r = new HttpResponse('1.1', $this->httpRequest->errNo);\n\t\t\t\t$r->addBody($this->createErrorPage($this->httpRequest->errNo, $this->httpRequest->errStr));\n\t\t\t\t\n\t\t\t\tif ($this->httpRequest->errNo == 405)\n\t\t\t\t{\n\t\t\t\t\t$r->addHeader('Allow: GET, POST, HEAD');\n\t\t\t\t\t$r->addHeader('Access-Control-Allow-Methods: GET, POST, HEAD');\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t$this->write($r->getHeaders());\n\t\t\t\t$this->write($r->getBody());\n\n\t\t\t\t$this->logRequest($r->getResponseCode(), (($r->getHeader('Content-Length')) ? $r->getHeader('Content-Length') : 0));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$this->logRequest(444, 0);\n\t\t\t}\n\t\t\t$errNo = $this->httpRequest->errNo;\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// If we have no headers, or we are busy with receiving.\n\t\t// Just return and wait for more data.\n\t\tif (!$this->httpRequest->hasHeaders || \t\t\t// We're still receiving headers\n\t\t\t$this->httpRequest->isReceiving) \t\t\t// We're still receiving the body of a request\n\t\t\treturn true;\t\t\t\t\t\t\t\t// Return true to just wait and try again later\n\t\t\n\t\t// At this point we have a fully qualified and parsed HttpRequest\n\t\t// The HttpRequest object contains all info about the headers / GET / POST / COOKIE / FILES\n\t\t// Just finalise it by adding some extra client info.\n\t\t$this->httpRequest->SERVER['REMOTE_ADDR']\t\t\t= $this->ip;\n\t\t$this->httpRequest->SERVER['REMOTE_PORT']\t\t\t= $this->port;\n\t\t$this->httpRequest->SERVER['SERVER_ADDR']\t\t\t= $this->localIP;\n\t\t$this->httpRequest->SERVER['SERVER_PORT']\t\t\t= $this->localPort;\n\t\t$exp = explode(':', $this->httpRequest->headers['Host']);\n\t\t$this->httpRequest->SERVER['SERVER_NAME']\t\t\t= $exp[0];\n\t\t$this->httpRequest->SERVER['HTTP_HOST']\t\t\t\t= $this->httpRequest->headers['Host'];\n\t\t$this->httpRequest->SERVER['HTTP_USER_AGENT']\t\t= isset($this->httpRequest->headers['User-Agent']) ? $this->httpRequest->headers['User-Agent'] : '';\n\t\t$this->httpRequest->SERVER['HTTP_ACCEPT']\t\t\t= isset($this->httpRequest->headers['Accept']) ? $this->httpRequest->headers['Accept'] : '';\n\t\t$this->httpRequest->SERVER['HTTP_ACCEPT_LANGUAGE']\t= isset($this->httpRequest->headers['Accept-Language']) ? $this->httpRequest->headers['Accept-Language'] : '';\n\t\t$this->httpRequest->SERVER['HTTP_ACCEPT_ENCODING']\t= isset($this->httpRequest->headers['Accept-Encoding']) ? $this->httpRequest->headers['Accept-Encoding'] : '';\n\t\t$this->httpRequest->SERVER['HTTP_ACCEPT_CHARSET']\t= isset($this->httpRequest->headers['Accept-Charset']) ? $this->httpRequest->headers['Accept-Charset'] : '';\n\t\t$this->httpRequest->SERVER['HTTP_CONNECTION']\t\t= isset($this->httpRequest->headers['Connection']) ? $this->httpRequest->headers['Connection'] : '';\n\t\t$this->httpRequest->SERVER['HTTP_KEEP_ALIVE']\t\t= isset($this->httpRequest->headers['Keep-Alive']) ? $this->httpRequest->headers['Keep-Alive'] : '';\n\t\tif (isset($this->httpRequest->headers['Referer']))\n\t\t\t$this->httpRequest->SERVER['HTTP_REFERER']\t\t= $this->httpRequest->headers['Referer'];\n\t\tif (isset($this->httpRequest->headers['Range']))\n\t\t\t$this->httpRequest->SERVER['HTTP_RANGE']\t\t= $this->httpRequest->headers['Range'];\n\t\tif (isset($this->httpRequest->headers['Cookie']))\n\t\t\t$this->httpRequest->SERVER['HTTP_COOKIE']= $this->httpRequest->headers['Cookie'];\n\t\tif (isset($this->httpRequest->headers['Authorization']))\n\t\t\t$this->httpRequest->SERVER['HTTP_AUTHORIZATION']= $this->httpRequest->headers['Authorization'];\n\t\t$this->httpRequest->SERVER['REQUEST_TIME']\t\t\t= time();\n\t\t\n\t\t// Check if we have to match siteDomain\n\t\tif ($this->http->getSiteDomain() != '' &&\n\t\t\t$this->http->getSiteDomain() != $this->httpRequest->SERVER['SERVER_NAME'])\n\t\t{\n\t\t\t$r = new HttpResponse($this->httpRequest->SERVER['httpVersion'], 404);\n\t\t\t$r->addBody($this->createErrorPage(404));\n\t\t\t$this->write($r->getHeaders());\n\t\t\t$this->write($r->getBody());\n\t\t\t$errNo = 404;\n\t\t\t$this->logRequest($r->getResponseCode(), (($r->getHeader('Content-Length')) ? $r->getHeader('Content-Length') : 0));\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// HTTP Authorisation?\n\t\tif ($this->http->getHttpAuthPath() != '')\n\t\t{\n\t\t\t$scriptPath = pathinfo($this->httpRequest->SERVER['SCRIPT_NAME'], PATHINFO_DIRNAME);\n\t\t\t\n\t\t\t// Check if path must be auth'd and if HTTP_AUTHORIZATION header exists and if so, validate it\n\t\t\tif (isDirInDir($this->http->getHttpAuthPath(), $this->http->getDocRoot().$scriptPath) &&\n\t\t\t\t(!isset($this->httpRequest->SERVER['HTTP_AUTHORIZATION']) ||\n\t\t\t\t !$this->validateAuthorization()))\n\t\t\t{\n\t\t\t\t// Not validated - send 401 Unauthorized\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\t$nonce = createRandomString(17, RAND_HEX);\n\t\t\t\t\tif (!$this->http->getNonceInfo($nonce))\n\t\t\t\t\t\tbreak;\n\t\t\t\t} while(true);\n\t\t\t\t$opaque = $this->http->addNewNonce($nonce);\n\t\t\t\t\n\t\t\t\t$r = new HttpResponse($this->httpRequest->SERVER['httpVersion'], 401);\n\t\t\t\tif ($this->http->getHttpAuthType() == 'Digest')\n\t\t\t\t\t$r->addHeader('WWW-Authenticate: Digest realm=\"'.HTTP_AUTH_REALM.'\", qop=\"auth\", nonce=\"'.$nonce.'\", opaque=\"'.$opaque.'\"');\n\t\t\t\telse\n\t\t\t\t\t$r->addHeader('WWW-Authenticate: Basic realm=\"'.HTTP_AUTH_REALM.'\"');\n\t\t\t\t$r->addBody($this->createErrorPage(401, '', true));\n\t\t\t\t$this->write($r->getHeaders());\n\t\t\t\t$this->write($r->getBody());\n\t\t\t\t$errNo = 401;\n\t\t\t\t$this->logRequest($r->getResponseCode(), (($r->getHeader('Content-Length')) ? $r->getHeader('Content-Length') : 0));\n\t\t\t\t\n\t\t\t\t$this->httpRequest = null;\n\t\t\t\treturn true;\t\t// we return true this time because we may stay connected\n\t\t\t}\n\t\t}\n\t\t\n\t\t//var_dump($this->httpRequest->headers);\n\t\t//var_dump($this->httpRequest->SERVER);\n\t\t//var_dump($this->httpRequest->GET);\n\t\t//var_dump($this->httpRequest->POST);\n\t\t//var_dump($this->httpRequest->COOKIE);\n\t\t\n\t\t// Rewrite script name? (keep it internal - don't rewrite SERVER header\n\t\t$scriptName = ($this->httpRequest->SERVER['SCRIPT_NAME'] == '/') ? '/index.php' : $this->httpRequest->SERVER['SCRIPT_NAME'];\n\t\t\n\t\tif (file_exists($this->http->getDocRoot().$scriptName))\n\t\t{\n\t\t\t// Should we serve a file or pass the request to PHPParser for page generation?\n\t\t\tif (preg_match('/^.*\\.php$/', $scriptName))\n\t\t\t{\n\t\t\t\tif ($this->httpRequest->SERVER['REQUEST_METHOD'] == 'HEAD')\n\t\t\t\t{\n\t\t\t\t\t$r = new HttpResponse($this->httpRequest->SERVER['httpVersion'], 200);\n\t\t\t\t\t$this->write($r->getHeaders());\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// 'Parse' the php file\n\t\t\t\t\t$r = new HttpResponse($this->httpRequest->SERVER['httpVersion'], 200);\n\t\t\t\t\t$html = PHPParser::parseFile(\n\t\t\t\t\t\t$r,\n\t\t\t\t\t\t$scriptName,\n\t\t\t\t\t\t$this->httpRequest->SERVER,\n\t\t\t\t\t\t$this->httpRequest->GET,\n\t\t\t\t\t\t$this->httpRequest->POST,\n\t\t\t\t\t\t$this->httpRequest->COOKIE,\n\t\t\t\t\t\t$this->httpRequest->FILES\n\t\t\t\t\t);\n\t\t\n\t\t\t\t\t$r->addBody($html);\n\t\t\t\t\t\n\t\t\t\t\t$this->write($r->getHeaders());\n\t\t\t\t\t$this->write($r->getBody());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (is_dir($this->http->getDocRoot().$this->httpRequest->SERVER['SCRIPT_NAME']))\n\t\t\t{\n\t\t\t\t// 403 - not allowed to view folder contents\n\t\t\t\t$r = new HttpResponse($this->httpRequest->SERVER['httpVersion'], 403);\n\t\t\t\t$r->addBody($this->createErrorPage(403));\n\t\n\t\t\t\t$this->write($r->getHeaders());\n\t\t\t\t$this->write($r->getBody());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Send a file\n\t\t\t\tif ($this->httpRequest->SERVER['REQUEST_METHOD'] == 'HEAD')\n\t\t\t\t{\n\t\t\t\t\t$r = new HttpResponse($this->httpRequest->SERVER['httpVersion'], 200);\n\t\t\t\t\t$this->write($r->getHeaders());\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$r = $this->serveFile();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// 404\n\t\t\t$r = new HttpResponse($this->httpRequest->SERVER['httpVersion'], 404);\n\t\t\t$r->addBody($this->createErrorPage(404));\n\n\t\t\t$this->write($r->getHeaders());\n\t\t\t$this->write($r->getBody());\n\t\t}\n\t\t\n\t\t// log line\n\t\t$this->logRequest($r->getResponseCode(), (($r->getHeader('Content-Length')) ? $r->getHeader('Content-Length') : 0));\n\t\t\n\t\t// Reset httpRequest\n\t\t$this->httpRequest = null;\n\n\t\treturn true;\n\t}\n\t\n\tprivate function &serveFile()\n\t{\n\t\t// Serve file - we can do this using the writeFile() method, which is memory friendly\n\t\t$r = new HttpResponse($this->httpRequest->SERVER['httpVersion'], 200);\n\t\t\n\t\t// Cache?\n\t\t$useCache = false;\n\t\t$scriptnameHash = md5($this->http->getDocRoot().$this->httpRequest->SERVER['SCRIPT_NAME']);\n\t\tif (isset($this->httpRequest->headers['Cache-Control']) || isset($this->httpRequest->headers['Pragma']))\n\t\t{\n\t\t\t$ifModifiedSince =\n\t\t\t\tisset($this->httpRequest->headers['If-Modified-Since']) ?\n\t\t\t\t(int) strtotime($this->httpRequest->headers['If-Modified-Since']) :\n\t\t\t\t0;\n\t\t\t$cacheControl = \n\t\t\t\tisset($this->httpRequest->headers['Cache-Control']) ?\n\t\t\t\t$this->httpRequest->parseHeaderValue($this->httpRequest->headers['Cache-Control']) :\n\t\t\t\tarray();\n\t\t\t$pragma = \n\t\t\t\tisset($this->httpRequest->headers['Pragma']) ?\n\t\t\t\t$this->httpRequest->parseHeaderValue($this->httpRequest->headers['Pragma']) :\n\t\t\t\tarray();\n\t\t\t\n\t\t\t// Detect 'If-Modified-Since' (weak) cache validator (http1.1)\n\t\t\tif ($ifModifiedSince > 0)\n\t\t\t{\n\t\t\t\tif (isset($this->http->cache[$scriptnameHash]))\n\t\t\t\t{\n\t\t\t\t\tif ($this->http->cache[$scriptnameHash] == $ifModifiedSince)\n\t\t\t\t\t{\n\t\t\t\t\t\t// File has not been changed - tell the browser to use the cache (send a 304)\n\t\t\t\t\t\t$useCache = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$scriptMTime = filemtime($this->http->getDocRoot().$this->httpRequest->SERVER['SCRIPT_NAME']);\n\t\t\t\t\t$this->http->cache[$scriptnameHash] = $scriptMTime;\n\t\t\t\t\tif ($scriptMTime == $ifModifiedSince)\n\t\t\t\t\t{\n\t\t\t\t\t\t// File has not been changed - tell the browser to use the cache (send a 304)\n\t\t\t\t\t\t$useCache = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Otherwise detect 'Cache-Control' or 'Pragma' (strong) validators (http1.0/http1.1)\n\t\t\telse if ((isset($cacheControl['max-age']) && $cacheControl['max-age'] == 0) &&\n\t\t\t\t\t\t$cacheControl != 'no-cache' &&\n\t\t\t\t\t\t$pragma != 'no-cache' &&\n\t\t\t\t\t\tisset($this->http->cache[$scriptnameHash]))\n\t\t\t{\n\t\t\t\t$scriptMTime = filemtime($this->http->getDocRoot().$this->httpRequest->SERVER['SCRIPT_NAME']);\n\t\t\t\tif ($this->http->cache[$scriptnameHash] == $scriptMTime)\n\t\t\t\t{\n\t\t\t\t\t// File has not been changed - tell the browser to use the cache (send a 304)\n\t\t\t\t\t$useCache = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// File has been updated - store new mtime in cache\n\t\t\t\t\t$this->http->cache[$scriptnameHash] = $scriptMTime;\n\t\t\t\t}\n\t\t\t\tclearstatcache();\n\t\t\t}\n\t\t}\n\n\t\tif ($useCache)\n\t\t{\t\t\t\t\n\t\t\t$r->setResponseCode(304);\n\t\t\t$this->write($r->getHeaders());\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$scriptMTime = filemtime($this->http->getDocRoot().$this->httpRequest->SERVER['SCRIPT_NAME']);\n\n\t\t\t$r->addHeader('Content-Type: '.$this->getMimeType());\n\t\t\t$r->addHeader('Last-Modified: '.date('r', $scriptMTime));\n\t\t\t\n\t\t\tif (isset($this->httpRequest->SERVER['HTTP_RANGE']))\n\t\t\t{\n\t\t\t\tconsole('HTTP_RANGE HEADER : '.$this->httpRequest->SERVER['HTTP_RANGE']);\n\t\t\t    $exp = explode('=', $this->httpRequest->SERVER['HTTP_RANGE']);\n\t\t\t    $startByte = (int) substr($exp[1], 0, -1);\n\n\t\t\t\t$r->addHeader('Content-Length: '.(filesize($this->http->getDocRoot().$this->httpRequest->SERVER['SCRIPT_NAME']) - $startByte));\n\t\t\t\t$this->write($r->getHeaders());\n\t\t\t\t$this->writeFile($this->http->getDocRoot().$this->httpRequest->SERVER['SCRIPT_NAME'], $startByte);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$r->addHeader('Content-Length: '.filesize($this->http->getDocRoot().$this->httpRequest->SERVER['SCRIPT_NAME']));\n\t\t\t\t$this->write($r->getHeaders());\n\t\t\t\t$this->writeFile($this->http->getDocRoot().$this->httpRequest->SERVER['SCRIPT_NAME']);\n\t\t\t}\n\t\t\t\n\t\t\t// Store the filemtime in $cache\n\t\t\tif (!isset($this->http->cache[$scriptnameHash]))\n\t\t\t{\n\t\t\t\t$this->http->cache[$scriptnameHash] = $scriptMTime;\n\t\t\t}\n\t\t\tclearstatcache();\n\t\t}\n\t\t\n\t\treturn $r;\n\t}\n\n\tprivate function validateAuthorization()\n\t{\n\t\tglobal $PRISM;\n\n\t\t$matches = array();\n\t\tif (preg_match('/^Digest (.*)$/', $this->httpRequest->SERVER['HTTP_AUTHORIZATION'], $matches))\n\t\t{\n\t\t\t// Digest method\n\t\t\t$info = array();\n\t\t\t$infoTmp = $this->httpRequest->parseHeaderValue($matches[1]);\n\t\t\tforeach ($infoTmp as $a => $b)\n\t\t\t{\n\t\t\t\tforeach ($b as $k => $v)\n\t\t\t\t\t$info[$k] = preg_replace('/\"?(.*)\"?/U', '\\\\1', $v);\n\t\t\t}\n\t\t\t\n\t\t\t// Check that all values are provided\n\t\t\tif (!isset($info['username']) ||\n\t\t\t\t!isset($info['realm']) ||\n\t\t\t\t!isset($info['nonce']) ||\n\t\t\t\t!isset($info['uri']) ||\n\t\t\t\t!isset($info['response']) ||\n\t\t\t\t!isset($info['opaque']) ||\n\t\t\t\t!isset($info['qop']) ||\n\t\t\t\t!isset($info['nc']) ||\n\t\t\t\t!isset($info['cnonce']))\n\t\t\t\treturn false;\n\n\t\t\t//  Check that nonce exists and nc is not reused AND that opaque value matches\n\t\t\tif (!($nonceInfo = $this->http->getNonceInfo($info['nonce'])))\n\t\t\t\treturn false;\n\t\t\tif ($nonceInfo[1] >= $info['nc'])\n\t\t\t\treturn false;\n\t\t\tif (!isset($nonceInfo[2]))\n\t\t\t\treturn false;\n\t\t\tif ($nonceInfo[2] != $info['opaque'])\n\t\t\t\treturn false;\t\t\n\t\t\t\t\t\t\n\t\t\t// Do the digest check\n\t\t\tif (!($ha1 = $PRISM->admins->getRealmDigest($info['username'])))\n\t\t\t\treturn false;\n\t\t\t$ha2 = md5($this->httpRequest->SERVER['REQUEST_METHOD'].':'.$info['uri']);\n\t\t\t$response = md5($ha1.':'.$info['nonce'].':'.$info['nc'].':'.$info['cnonce'].':'.$info['qop'].':'.$ha2);\n\t\t\tif ($response != $info['response'])\n\t\t\t\treturn false;\n\t\t\t\n\t\t\t// Validated!\n\t\t\t$this->http->incNonceCounter($info['nonce'], $info['nc']);\n\t\t\t$this->httpRequest->SERVER['PHP_AUTH_USER']\t= $info['username'];\n\t\t}\n\t\telse if (preg_match('/^Basic (.*)$/', $this->httpRequest->SERVER['HTTP_AUTHORIZATION'], $matches))\n\t\t{\n\t\t\t// Basic method\n\t\t\t$auth = explode(':', base64_decode($matches[1]), 2);\n\t\t\tif (count($auth) != 2 || !$PRISM->admins->isPasswordCorrect($auth[0], $auth[1]))\n\t\t\t\treturn false;\n\t\t\t\n\t\t\t// Validated!\n\t\t\t$this->httpRequest->SERVER['PHP_AUTH_USER']\t= $auth[0];\n\t\t\t$this->httpRequest->SERVER['PHP_AUTH_PW']\t= $auth[1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Unknown or no authorisation provided\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\t\n\tprivate function getMimeType()\n\t{\n\t\t$pathInfo = pathinfo($this->httpRequest->SERVER['SCRIPT_NAME']);\n\t\t\n\t\t$mimeType = 'application/octet-stream';\n\t\tswitch(strtolower($pathInfo['extension']))\n\t\t{\n\t\t\tcase 'txt' :\n\t\t\t\t$mimeType = 'text/plain';\n\t\t\t\tbreak;\n\n\t\t\tcase 'html' :\n\t\t\tcase 'htm' :\n\t\t\tcase 'shtml' :\n\t\t\t\t$mimeType = 'text/html';\n\t\t\t\tbreak;\n\n\t\t\tcase 'css' :\n\t\t\t\t$mimeType = 'text/css';\n\t\t\t\tbreak;\n\n\t\t\tcase 'xml' :\n\t\t\t\t$mimeType = 'text/xml';\n\t\t\t\tbreak;\n\n\t\t\tcase 'gif' :\n\t\t\t\t$mimeType = 'image/gif';\n\t\t\t\tbreak;\n\n\t\t\tcase 'jpeg' :\n\t\t\tcase 'jpg' :\n\t\t\t\t$mimeType = 'image/jpeg';\n\t\t\t\tbreak;\n\n\t\t\tcase 'png' :\n\t\t\t\t$mimeType = 'image/png';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tif' :\n\t\t\tcase 'tiff' :\n\t\t\t\t$mimeType = 'image/tiff';\n\t\t\t\tbreak;\n\n\t\t\tcase 'wbmp' :\n\t\t\t\t$mimeType = 'image/vnd.wap.wbmp';\n\t\t\t\tbreak;\n\n\t\t\tcase 'bmp' :\n\t\t\t\t$mimeType = 'image/x-ms-bmp';\n\t\t\t\tbreak;\n\n\t\t\tcase 'svg' :\n\t\t\t\t$mimeType = 'image/svg+xml';\n\t\t\t\tbreak;\n\n\t\t\tcase 'ico' :\n\t\t\t\t$mimeType = 'image/x-icon';\n\t\t\t\tbreak;\n\n\t\t\tcase 'js' :\n\t\t\t\t$mimeType = 'application/x-javascript';\n\t\t\t\tbreak;\n\n\t\t\tcase 'atom' :\n\t\t\t\t$mimeType = 'application/atom+xml';\n\t\t\t\tbreak;\n\n\t\t\tcase 'rss' :\n\t\t\t\t$mimeType = 'application/rss+xml';\n\t\t\t\tbreak;\n\t\t}\n\t\treturn $mimeType;\n\t}\n\t\n\tprivate function logRequest($code, $size = 0)\n\t{\n\t\tif ($this->http->getLogFile() == '')\n\t\t\treturn;\n\t\t\n\t\t$logLine =\n\t\t\t$this->ip.' '.\n\t\t\t'- '.\n\t\t\t((isset($this->httpRequest->SERVER['PHP_AUTH_USER'])) ? str_replace(' ', '_', $this->httpRequest->SERVER['PHP_AUTH_USER']) : '-').' '.\n\t\t\t'['.date('d/M/Y:H:i:s O').'] '.\n\t\t\t'\"'.$this->httpRequest->requestLine.'\" '.\n\t\t\t$code.' '.\n\t\t\t$size.' '.\n\t\t\t'\"'.((isset($this->httpRequest->SERVER['HTTP_REFERER'])) ? $this->httpRequest->SERVER['HTTP_REFERER'] : '-').'\" '.\n\t\t\t'\"'.((isset($this->httpRequest->SERVER['HTTP_USER_AGENT'])) ? $this->httpRequest->SERVER['HTTP_USER_AGENT'] : '-').'\" '.\n\t\t\t'\"-\"';\n\t\tconsole($logLine);\n\t\tfile_put_contents($this->http->getLogFile(), $logLine.\"\\r\\n\", FILE_APPEND);\n\t}\n}\n\nclass HttpRequest\n{\n\tprivate $rawInput\t\t= '';\n\t\n\tpublic $isReceiving\t\t= false;\n\tpublic $hasRequestUri\t= false;\n\tpublic $requestLine\t\t= '';\n\tpublic $hasHeaders\t\t= false;\n\t\n\tpublic $errNo\t\t\t= 0;\n\tpublic $errStr\t\t\t= '';\n\t\n\tpublic $headers\t\t\t= array();\t\t// This will hold all of the request headers from the clients browser.\n\tprivate $tmpFiles\t\t= array();\n\t\n\tpublic $SERVER\t\t\t= array();\n\tpublic $GET\t\t\t\t= array();\t\t// With these arrays we try to recreate php's global vars a bit.\n\tpublic $POST\t\t\t= array();\n\tpublic $FILES\t\t\t= array();\n\tpublic $COOKIE\t\t\t= array();\n\t\n\tpublic function __construct()\n\t{\n\n\t}\n\t\n\tpublic function __destruct()\n\t{\n\t\t// tmpFiles cleanup\n\t\tforeach ($this->tmpFiles as $v)\n\t\t\tunlink($v);\n\t}\n\n\tpublic function handleInput(&$data)\n\t{\n\t\t// We need to buffer the input - no idea how much data will \n\t\t// be coming in until we have received all the headers.\n\t\t// Normally though all headers should come in unfragmented, but don't rely on that.\n\t\t$this->rawInput .= $data;\n\t\tif (strlen($this->rawInput) > HTTP_MAX_REQUEST_SIZE)\n\t\t{\n\t\t\t$this->errNo = 413;\n\t\t\t$this->errStr = 'You tried to send more than '.HTTP_MAX_REQUEST_SIZE.' bytes to the server, which it doesn\\'t like.';\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if we have header lines in the buffer, for as long as !$this->hasHeaders\n\t\tif (!$this->hasHeaders)\n\t\t{\n\t\t\tif (!$this->parseHeaders())\n\t\t\t{\n\t\t\t\tif ($this->errNo == 0)\n\t\t\t\t\t$this->errNo = 400;\n\t\t\t\treturn false;\t\t\t\t// returns false is something went wrong (bad headers)\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If we have headers then we can now figure out if we have received all there is,\n\t\t// or if there is more to come. If there is, just return true and wait for more.\n\t\tif ($this->hasHeaders)\n\t\t{\n\t\t\t// With a GET there will be no extra data. With a POST however ...\n\t\t\tif ($this->SERVER['REQUEST_METHOD'] == 'POST')\n\t\t\t{\n\t\t\t\t// Check if we have enough and proper data to read the POST\n\t\t\t\tif (!isset($this->headers['Content-Length']))\n\t\t\t\t{\n\t\t\t\t\t$this->errNo = 411;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t$contentType = isset($this->headers['Content-Type']) ? $this->parseContentType($this->headers['Content-Type']) : '';\n\t\t\t\tif (!$contentType || \n\t\t\t\t\t($contentType['mediaType'] != 'application/x-www-form-urlencoded' &&\n\t\t\t\t\t $contentType['mediaType'] != 'multipart/form-data'))\n\t\t\t\t{\n\t\t\t\t\t$this->errNo = 415;\n\t\t\t\t\t$this->errStr = 'No Content-Type was provided that I can handle. At the moment I only like application/x-www-form-urlencoded and multipart/form-data.';\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Should we expect more data to come in?\n\t\t\t\tif ((int) $this->headers['Content-Length'] > strlen($this->rawInput))\n\t\t\t\t{\n\t\t\t\t\t// We have not yet received all the POST data, so I'll return and wait.\n\t\t\t\t\t$this->isReceiving = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// At this point we have the whole POST body\n\t\t\t\t$this->isReceiving = false;\n\t\t\t\t\n\t\t\t\t// Parse POST variables\n\t\t\t\tif ($contentType['mediaType'] == 'application/x-www-form-urlencoded')\n\t\t\t\t\t$this->parsePOSTurlenc(substr($this->rawInput, 0, $this->headers['Content-Length']));\n\t\t\t\telse if ($contentType['mediaType'] == 'multipart/form-data')\n\t\t\t\t{\n\t\t\t\t\tif (!$this->parsePOSTformdata($this->rawInput, $contentType['boundary'][1]))\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->errNo = 400;\n\t\t\t\t\t\t$this->errStr = 'Bad Request - Problems parsing body data';\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Cleanup rawInput\n\t\t\t\t$this->rawInput = substr($this->rawInput, $this->headers['Content-Length']);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$this->isReceiving = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// At this point we have received the entire request. So finally let's parse the (remaining) user variables.\n\t\t\t// Parse GET variables\n\t\t\t$this->parseGET();\n\n\t\t\t// Parse cookie values\n\t\t\t$this->parseCOOKIE();\n\t\t\t\n\t\t\t// At this point we have parsed the entire request. We are done.\n\t\t\t// Because isReceiving is now false, the HttpClient::handleInput function will \n\t\t\t// serve the request using the variables from this class HttpRequest.\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\tprivate function parseHeaders()\n\t{\n\t\t// Loop through each individual header line\n\t\tdo\n\t\t{\n\t\t\t// Do we have a header line?\n\t\t\t$pos = strpos($this->rawInput, \"\\r\\n\");\n\t\t\tif ($pos === false)\n\t\t\t{\n\t\t\t\t// Extra (garbage) input error checking here\n\t\t\t\tif (!$this->hasRequestUri)\n\t\t\t\t{\n\t\t\t\t\t$len = strlen($this->rawInput);\n\t\t\t\t\tif ($len > HTTP_MAX_URI_LENGTH)\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->errNo = 414;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telse if ($len > 3 && !preg_match('/^(GET|POST|HEAD).*$/', $this->rawInput))\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->errNo = 444;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Otherwise just return and wait for more data\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if ($pos === 0)\n\t\t\t{\n\t\t\t\t// This cannot possibly be the end of headers, if we don't even have a request uri (or host header)\n\t\t\t\tif (!$this->hasRequestUri || !isset($this->headers['Host']))\n\t\t\t\t{\n\t\t\t\t\t$this->errNo = 444;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// This should be end of headers\n\t\t\t\t$this->hasHeaders = true;\n\t\t\t\t$this->rawInput = substr($this->rawInput, 2);\t\t// remove second \\r\\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\t$header = substr($this->rawInput, 0, $pos);\n\t\t\t$this->rawInput = substr($this->rawInput, $pos+2);\t\t// +2 to include \\r\\n\n\n\t\t\t// Do we have a request line already? If not, try to parse this header line as a request line\n\t\t\tif (!$this->hasRequestUri)\n\t\t\t{\n\t\t\t\t// Read the first header (the request line)\n\t\t\t\tif (!$this->parseRequestLine($header))\n\t\t\t\t{\n\t\t\t\t\tif ($this->errNo == 0)\n\t\t\t\t\t\t$this->errNo = 400;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t$this->hasRequestUri = true;\n\t\t\t}\n\t\t\telse if (!$this->hasHeaders)\n\t\t\t{\n\t\t\t\tif (strpos($header, ':') === false)\n\t\t\t\t{\n\t\t\t\t\t$this->errNo = 400;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Parse regular header line\n\t\t\t\t$exp = explode(':', $header, 2);\n\t\t\t\tif (count($exp) == 2)\n\t\t\t\t\t$this->headers[trim($exp[0])] = trim($exp[1]);\n\t\t\t}\n\t\t} while (true);\n\t\treturn true;\n\t}\n\t\n\tprivate function parseSubHeaders(&$headers)\n\t{\n\t\t$parsed = array();\n\t\t\n\t\t// Split header lines\n\t\t$lines = explode(\"\\r\\n\", $headers);\n\t\t\n\t\tforeach ($lines as $header)\n\t\t{\n\t\t\t$exp = explode(':', $header, 2);\n\t\t\tif (count($exp) == 2)\n\t\t\t\t$parsed[trim($exp[0])] = $this->parseHeaderValue(trim($exp[1]));\n\t\t}\n\t\t\n\t\treturn $parsed;\n\t}\n\t\n\tpublic function parseHeaderValue($header, $level = 0)\n\t{\n//\t\timage/png,image/*;q=0.8,*/*;q=0.5\n//\t\timage/png,\n//\t\t          image/*;q=0.8,\n//\t\t                        */*;q=0.5\n\t\t\n\t\t// Split by ...\n\t\tswitch($level)\n\t\t{\n\t\t\tcase 0 :\t\t\t// ,\n\t\t\t\t$items = explode(',', $header);\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase 1 :\t\t\t// ;\n\t\t\t\t$items = explode(';', $header);\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase 2 :\t\t\t// =\n\t\t\t\t$items = explode('=', $header);\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif ($level == 2)\n\t\t{\n\t\t\tif (count($items) == 1)\n\t\t\t\treturn $header;\n\t\t\telse\n\t\t\t\treturn array(trim($items[0]) => $items[1]);\n\t\t}\n\t\tif (count($items) == 1)\n\t\t\treturn $this->parseHeaderValue($header, $level + 1);\n\n\t\t$parsed = array();\n\t\t\n\t\tforeach ($items as $k => $v)\n\t\t{\n\t\t\t$parsed[$k] = $this->parseHeaderValue($v, $level + 1);\n\t\t}\n\t\t\n\t\treturn $parsed;\n\t}\n\n\tpublic function parseContentType(&$header)\n\t{\n\t\tif ($header == '')\n\t\t\treturn false;\n\t\t\n\t\t// Split?\n\t\t$parsed = array();\n\t\t$exp = explode(';', $header);\n\t\t$parsed['mediaType']\t= $exp[0];\n\t\t$parsed['boundary']\t\t= isset($exp[1]) ? explode('=', $exp[1]) : false;\n\t\t\n\t\treturn $parsed;\n\t}\n\t\n\tprivate function parseRequestLine($line)\n\t{\n\t\t$this->requestLine = $line;\n\n\t\t$exp = explode(' ', $line);\n\t\tif (count($exp) != 3)\n\t\t{\n\t\t\t$this->errNo = 444;\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// check the request command\n\t\tif ($exp[0] != 'GET' && $exp[0] != 'POST' && $exp[0] != 'HEAD')\n\t\t{\n\t\t\t$this->errNo = 444;\n\t\t\treturn false;\n\t\t}\n\t\t$this->SERVER['REQUEST_METHOD'] = $exp[0];\n\t\t\n\t\t// Check the request uri\n\t\t$this->SERVER['REQUEST_URI'] = $exp[1];\n\t\tif (($uri = parse_url($this->SERVER['REQUEST_URI'])) === false)\n\t\t\treturn false;\n\t\t\t\n\t\t// Path sanitation\n\t\t$uri['path'] = filter_var(trim($uri['path']), FILTER_UNSAFE_RAW, FILTER_FLAG_STRIP_LOW);\n\t\tif (!isset($uri['path'][0]) || $uri['path'][0] != '/')\n\t\t\treturn false;\n\t\t$this->SERVER['SCRIPT_NAME'] = $uri['path'];\n\t\t\n\t\t// Set the query string - all chars allowed in there\n\t\t$this->SERVER['QUERY_STRING'] = isset($uri['query']) ? $uri['query'] : '';\n\t\t\n\t\t// Check for user trying to go below webroot\n\t\t$exp2 = explode('/', $this->SERVER['SCRIPT_NAME']);\n\t\tforeach ($exp2 as $v)\n\t\t{\n\t\t\tif (trim($v) == '..')\n\t\t\t{\n\t\t\t\t// Ooops the user probably tried something nasty (reach a file outside of our www folder)\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Check the HTTP protocol version\n\t\t$this->SERVER['SERVER_PROTOCOL'] = $exp[2];\n\t\t$httpexp = explode('/', $exp[2]);\n\t\tif ($httpexp[0] != 'HTTP' || ($httpexp[1] != '1.0' && $httpexp[1] != '1.1'))\n\t\t\treturn false;\n\t\t$this->SERVER['httpVersion'] = $httpexp[1];\n\n\t\treturn true;\n\t}\n\t\n\tprivate function parseGET()\n\t{\n\t\t$exp = explode('&', $this->SERVER['QUERY_STRING']);\n\t\tforeach ($exp as $v)\n\t\t{\n\t\t\tif ($v == '')\n\t\t\t\tcontinue;\n\t\t\t$exp2 = explode('=', $v, 2);\n\t\t\t$this->GET[urldecode($exp2[0])] = isset($exp2[1]) ? urldecode($exp2[1]) : '';\n\t\t}\n\t}\n\t\n\tprivate function parsePOSTurlenc($raw)\n\t{\n\t\t$exp = explode('&', $raw);\n\t\tforeach ($exp as $v)\n\t\t{\n\t\t\t$exp2 = explode('=', $v);\n\t\t\t$key = urldecode($exp2[0]);\n\t\t\t$value = urldecode($exp2[1]);\n\t\t\t\n\t\t\tif (preg_match('/^(.*)\\[(.*)\\]$/', $key, $matches))\n\t\t\t{\n\t\t\t\tif (!isset($this->POST[$matches[1]]))\n\t\t\t\t\t$this->POST[$matches[1]] = array();\n\n\t\t\t\tif ($matches[2] == '')\n\t\t\t\t\t$this->POST[$matches[1]][] = $value;\n\t\t\t\telse\n\t\t\t\t\t$this->POST[$matches[1]][$matches[2]] = $value;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$this->POST[$key] = $value;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate function parsePOSTformdata($raw, $boundary)\n\t{\n\t\t// Check if the raw data at least begins and ends with the boundary\n\t\t$bLen = strlen($boundary);\n\t\tif (substr($raw, 0, ($bLen + 2)) != '--'.$boundary ||\n\t\t\ttrim(substr($raw, -($bLen + 2))) != substr($boundary, 2).'--')\n\t\t\treturn false;\n\n\t\t// Split into separate parts\n\t\t$parts = explode('--'.$boundary, $raw);\n\t\t\n\t\t// Always remove the first and last entries, as they are bogus\n\t\tarray_shift($parts);\n\t\tarray_pop($parts);\n\t\t\n\t\tforeach ($parts as $part)\n\t\t{\n\t\t\t// Split part headers & data\n\t\t\t$exp = explode(\"\\r\\n\\r\\n\", substr($part, 2, -2), 2);\n\t\t\t$headers = $this->parseSubHeaders($exp[0]);\n\n\t\t\t$key = preg_replace('/^\"(.*)\"$/', '\\\\1', $headers['Content-Disposition'][1]['name']);\n\t\t\t$value = $exp[1];\n\n\t\t\t$contentType = '';\n\t\t\tif (isset($headers['Content-Disposition'][2]['filename']))\n\t\t\t\t$fileName = preg_replace('/^\"(.*)\"$/', '\\\\1', $headers['Content-Disposition'][2]['filename']);\n\t\t\tif (isset($fileName) && isset($headers['Content-Type']))\n\t\t\t\t$contentType = $headers['Content-Type'];\n\t\t\t\n\t\t\tif (isset($fileName))\n\t\t\t{\n\t\t\t\tif (!$fileName)\n\t\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t\t$fileError = UPLOAD_ERR_OK;\n\t\t\t\t\n\t\t\t\t// Store the uploaded file in a temp place\n\t\t\t\t$tmpFileName = tempnam(sys_get_temp_dir(), 'Prism');\n\t\t\t\tif (!@file_put_contents($tmpFileName, $value))\n\t\t\t\t\t$fileError = UPLOAD_ERR_CANT_WRITE;\n\t\t\t\telse\n\t\t\t\t\t$this->tmpFiles[] = $tmpFileName;\n\t\t\t\t\n\t\t\t\t// Fill $FILES with details on the file\n\t\t\t\tif (preg_match('/^(.*)\\[(.*)\\]$/', $key, $matches))\n\t\t\t\t{\n\t\t\t\t\t// Create entry array if not yet exists\n\t\t\t\t\tif (!isset($this->FILES[$matches[1]]))\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->FILES[$matches[1]] = array(\n\t\t\t\t\t\t\t'name'\t\t=> array(),\n\t\t\t\t\t\t\t'tmp_name'\t=> array(),\n\t\t\t\t\t\t\t'type'\t\t=> array(),\n\t\t\t\t\t\t\t'size'\t\t=> array(),\n\t\t\t\t\t\t\t'error'\t\t=> array(),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Fill in the values\n\t\t\t\t\tif ($matches[2] == '')\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->FILES[$matches[1]]['name'][]\t\t= $fileName;\n\t\t\t\t\t\t$this->FILES[$matches[1]]['tmp_name'][]\t= $tmpFileName;\n\t\t\t\t\t\t$this->FILES[$matches[1]]['type'][]\t\t= $contentType;\n\t\t\t\t\t\t$this->FILES[$matches[1]]['size'][]\t\t= strlen($value);\n\t\t\t\t\t\t$this->FILES[$matches[1]]['error'][]\t= $fileError;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->FILES[$matches[1]]['name'][$matches[2]]\t\t= $fileName;\n\t\t\t\t\t\t$this->FILES[$matches[1]]['tmp_name'][$matches[2]]\t= $tmpFileName;\n\t\t\t\t\t\t$this->FILES[$matches[1]]['type'][$matches[2]]\t\t= $contentType;\n\t\t\t\t\t\t$this->FILES[$matches[1]]['size'][$matches[2]]\t\t= strlen($value);\n\t\t\t\t\t\t$this->FILES[$matches[1]]['error'][$matches[2]]\t\t= $fileError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$this->FILES[$key] = array(\n\t\t\t\t\t\t'name'\t\t=> $fileName,\n\t\t\t\t\t\t'tmp_name'\t=> $tmpFileName,\n\t\t\t\t\t\t'type'\t\t=> $contentType,\n\t\t\t\t\t\t'size'\t\t=> strlen($value),\n\t\t\t\t\t\t'error'\t\t=> $fileError,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (preg_match('/^(.*)\\[(.*)\\]$/', $key, $matches))\n\t\t\t\t{\n\t\t\t\t\tif (!isset($this->POST[$matches[1]]))\n\t\t\t\t\t\t$this->POST[$matches[1]] = array();\n\t\n\t\t\t\t\tif ($matches[2] == '')\n\t\t\t\t\t\t$this->POST[$matches[1]][] = $value;\n\t\t\t\t\telse\n\t\t\t\t\t\t$this->POST[$matches[1]][$matches[2]] = $value;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$this->POST[$key] = $value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t//var_dump($this->POST);\n\t\treturn true;\n\t}\n\t\n\tprivate function parseCOOKIE()\n\t{\n\t\tif (!isset($this->headers['Cookie']))\n\t\t\treturn;\n\t\t\n\t\t$exp = explode(';', $this->headers['Cookie']);\n\t\tforeach ($exp as $v)\n\t\t{\n\t\t\t$exp2 = explode('=', $v);\n\t\t\t$this->COOKIE[urldecode(ltrim($exp2[0]))] = urldecode($exp2[1]);\n\t\t}\n\t}\n}\n\nclass HttpResponse\n{\n\tstatic $responseCodes\t= array\n\t\t(\n\t\t\t200 => 'OK',\n\t\t\t204 => 'No Content',\n\t\t\t206 => 'Partial Content',\n\t\t\t301 => 'Moved Permanently',\n\t\t\t302 => 'Found',\n\t\t\t304 => 'Not Modified',\n\t\t\t307 => 'Temporary Redirect',\n\t\t\t400 => 'Bad Request',\n\t\t\t401 => 'Unauthorized',\n\t\t\t403 => 'Forbidden',\n\t\t\t404 => 'File Not Found',\n\t\t\t405 => 'Method Not Allowed',\n\t\t\t408 => 'Request Timeout',\n\t\t\t411 => 'Length Required',\n\t\t\t413 => 'Request Entity Too Large',\n\t\t\t414 => 'Request-URI Too Long',\n\t\t\t415 => 'Unsupported Media Type',\n\t\t\t416 => 'Requested Range Not Satisfiable',\n\t\t\t444 => 'Garbage Request Rejected',\n\t\t);\n\n\tprivate $responseCode\t= 200;\n\tprivate $httpVersion\t= '1.1';\n\tprivate $headers\t\t= array\n\t\t(\n\t\t\t'Server'\t\t=> '',\n\t\t\t'Date'\t\t\t=> '',\n\t\t\t'Content-Type'\t=> 'text/html',\n\t\t);\n\tprivate $cookies\t\t= array();\n\tprivate $body\t\t\t= '';\n\tprivate $bodyLen\t\t= 0;\n\t\t\n\tpublic function __construct($httpVersion = '1.1', $code = 200)\n\t{\n\t\t$this->httpVersion = $httpVersion;\n\t\t$this->setResponseCode($code);\n\t\t$this->headers['Server'] = 'PRISM/'.PHPInSimMod::VERSION;\n\t}\n\t\n\tpublic function setResponseCode($code)\n\t{\n\t\t$this->responseCode = (int) $code;\n\t}\n\t\n\tpublic function getResponseCode()\n\t{\n\t\treturn $this->responseCode;\n\t}\n\t\n\tpublic function addHeader($header)\n\t{\n\t\t// Parse the header (validate it)\n\t\t$exp = explode(':', $header, 2);\n\t\tif (count($exp) != 2)\n\t\t\treturn false;\n\t\t\n\t\t$exp[0] = trim($exp[0]);\n\t\t$exp[1] = trim($exp[1]);\n\t\t// Check for duplicate (can't do that the easy way because i want to do a case insensitive check)\n\t\tforeach ($this->headers as $k => $v)\n\t\t{\n\t\t\tif (strtolower($exp[0]) == strtolower($k))\n\t\t\t{\n\t\t\t\tunset($this->headers[$k]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Store the header\n\t\t$this->headers[$exp[0]] = $exp[1];\n\t\t\n\t\treturn true;\n\t}\n\t\n\tpublic function getHeader($key)\n\t{\n\t\treturn isset($this->headers[$key]) ? $this->headers[$key] : false;\n\t}\n\t\n\tpublic function getHeaders()\n\t{\n\t\t$this->finaliseHeaders();\n\t\t\n\t\t$headers = 'HTTP/'.$this->httpVersion.' '.$this->responseCode.' '.self::$responseCodes[$this->responseCode].\"\\r\\n\";\n\t\tforeach ($this->headers as $k => $v)\n\t\t{\n\t\t\t$headers .= $k.': '.$v.\"\\r\\n\";\n\t\t}\n\n\t\tforeach ($this->cookies as $k => $v)\n\t\t\t$headers .= 'Set-Cookie: '.urlencode($k).'='.urlencode($v[0]).'; expires='.date('l, d-M-y H:i:s T', (int) $v[1]).'; path='.$v[2].'; domain='.$v[3].(($v[4]) ? '; secure' : '').\"\\r\\n\";\n\n\t\treturn $headers.\"\\r\\n\";\n\t}\n\t\n\tprivate function finaliseHeaders()\n\t{\n\t\t// Adjust the response code for a redirect?\n\t\tif (isset($this->headers['Location']))\n\t\t\t$this->responseCode = 302;\n\n\t\t// Set server-side headers\n\t\t$this->headers['Date']\t\t\t\t\t= date('r');\n\t\t$this->headers['Accept-Ranges']\t\t\t= 'bytes';\n\t\t\n\t\tif (!isset($this->headers['Content-Length']) && \n\t\t\t$this->responseCode != 304)\n\t\t{\n\t\t\t$this->headers['Content-Length']\t= $this->bodyLen;\n\t\t}\n\t\t\n\t\tif ($this->responseCode == 200 || \n\t\t\t$this->responseCode == 302 || \n\t\t\t$this->responseCode == 404)\n\t\t{\n\t\t\t$this->headers['Connection']\t\t= 'Keep-Alive';\n\t\t\t$this->headers['Keep-Alive']\t\t= 'timeout='.HTTP_KEEP_ALIVE;\n\t\t}\n\t}\n\t\n\tpublic function addBody($data)\n\t{\n\t\t$this->body .= $data;\n\t\t$this->bodyLen += strlen($data);\n\t}\n\t\n\tpublic function &getBody()\n\t{\n\t\treturn $this->body;\n\t}\n\t\n\tpublic function setCookie($name, $value, $expire, $path, $domain, $secure = false, $httponly = false)\n\t{\n\t\t// Some value sanitation here, because it's user-input.\n\t\t$expire = (int) $expire;\n\t\tif ($path[0] != '/')\n\t\t\t$path = '/'.$path;\n\t\t\n\t\t$this->cookies[$name] = array($value, $expire, $path, $domain, $secure, $httponly);\n\t}\n}\n\n?>"]],"start1":0,"start2":0,"length1":0,"length2":49539}]],"length":49539}
{"contributors":[],"silentsave":true,"ts":1363202199028,"patch":[[{"diffs":[[0,"ttp\n*/\n\n"],[1,"\n"],[0,"require_"]],"start1":73,"start2":73,"length1":16,"length2":17}]],"length":49540,"saved":false}
{"ts":1363202200500,"patch":[[{"diffs":[[0,"ttp\n*/\n\n"],[1,"name\n"],[0,"\nrequire"]],"start1":73,"start2":73,"length1":16,"length2":21}]],"length":49545,"saved":false}
{"ts":1363202202568,"patch":[[{"diffs":[[0,"*/\n\nname"],[1,"space "],[0,"\n\nrequir"]],"start1":77,"start2":77,"length1":16,"length2":22}]],"length":49551,"saved":false}
{"ts":1363202204783,"patch":[[{"diffs":[[0,"mespace "],[1,"PRISM"],[0,"\n\nrequir"]],"start1":83,"start2":83,"length1":16,"length2":21}]],"length":49556,"saved":false}
{"ts":1363202208073,"patch":[[{"diffs":[[0,"ce PRISM"],[1,"\\Module\\"],[0,"\n\nrequir"]],"start1":88,"start2":88,"length1":16,"length2":24}]],"length":49564,"saved":false}
{"ts":1363202210995,"patch":[[{"diffs":[[0,"\\Module\\"],[1,"H"],[0,"\n\nrequir"]],"start1":96,"start2":96,"length1":16,"length2":17}]],"length":49565,"saved":false}
{"ts":1363202212618,"patch":[[{"diffs":[[0,"Module\\H"],[1,"ttp"],[0,"\n\nrequir"]],"start1":97,"start2":97,"length1":16,"length2":19}]],"length":49568,"saved":false}
{"ts":1363202214565,"patch":[[{"diffs":[[0,"ule\\Http"],[1,"Handler;"],[0,"\n\nrequir"]],"start1":100,"start2":100,"length1":16,"length2":24}]],"length":49576,"saved":false}
{"ts":1363202223170,"patch":[[{"diffs":[[0,"ndler;\n\n"],[1,"//"],[0,"require_"]],"start1":110,"start2":110,"length1":16,"length2":18}]],"length":49578,"saved":false}
{"ts":1363202225029,"patch":[[{"diffs":[[0,".php');\n"],[1,"//"],[0,"require_"]],"start1":174,"start2":174,"length1":16,"length2":18}]],"length":49580,"saved":false}
{"ts":1363202227996,"patch":[[{"diffs":[[0,"ndler;\n\n"],[1,"\n"],[0,"//requir"]],"start1":110,"start2":110,"length1":16,"length2":17}]],"length":49581,"saved":false}
{"ts":1363202229912,"patch":[[{"diffs":[[0,"dler;\n\n\n"],[1,"\n"],[0,"//requir"]],"start1":111,"start2":111,"length1":16,"length2":17}]],"length":49582,"saved":false}
{"ts":1363202231167,"patch":[[{"diffs":[[0,"dler;\n\n\n"],[-1,"\n"],[0,"//requir"]],"start1":111,"start2":111,"length1":17,"length2":16}]],"length":49581,"saved":false}
{"ts":1363202235211,"patch":[[{"diffs":[[0,"ndler;\n\n"],[1,"use "],[0,"\n//requi"]],"start1":110,"start2":110,"length1":16,"length2":20}]],"length":49585,"saved":false}
{"ts":1363202238781,"patch":[[{"diffs":[[0,"r;\n\nuse "],[1,"PRISM\\Module\\"],[0,"\n//requi"]],"start1":114,"start2":114,"length1":16,"length2":29}]],"length":49598,"saved":false}
{"ts":1363202241826,"patch":[[{"diffs":[[0,"\\Module\\"],[1,"Se"],[0,"\n//requi"]],"start1":127,"start2":127,"length1":16,"length2":18}]],"length":49600,"saved":false}
{"ts":1363202243508,"patch":[[{"diffs":[[0,"odule\\Se"],[1,"ctionH"],[0,"\n//requi"]],"start1":129,"start2":129,"length1":16,"length2":22}]],"length":49606,"saved":false}
{"ts":1363202245329,"patch":[[{"diffs":[[0,"SectionH"],[1,"andler;"],[0,"\n//requi"]],"start1":135,"start2":135,"length1":16,"length2":23}]],"length":49613,"saved":false}
{"ts":1363202247026,"patch":[[{"diffs":[[0,"andler;\n"],[1,"use\n"],[0,"//requir"]],"start1":143,"start2":143,"length1":16,"length2":20}]],"length":49617,"saved":false}
{"ts":1363202249701,"patch":[[{"diffs":[[0,"ler;\nuse"],[1," PRISM\\"],[0,"\n//requi"]],"start1":146,"start2":146,"length1":16,"length2":23}]],"length":49624,"saved":false}
{"ts":1363202251896,"patch":[[{"diffs":[[0,"e PRISM\\"],[1,"Module\\"],[0,"\n//requi"]],"start1":153,"start2":153,"length1":16,"length2":23}]],"length":49631,"saved":false}
{"ts":1363202254766,"patch":[[{"diffs":[[0,"\\Module\\"],[1,"Ph"],[0,"\n//requi"]],"start1":160,"start2":160,"length1":16,"length2":18}]],"length":49633,"saved":false}
{"ts":1363202255904,"patch":[[{"diffs":[[0,"odule\\Ph"],[1,"P"],[0,"\n//requi"]],"start1":162,"start2":162,"length1":16,"length2":17}]],"length":49634,"saved":false}
{"ts":1363202258315,"patch":[[{"diffs":[[0,"odule\\Ph"],[-1,"P"],[1,"p"],[0,"\n//requi"]],"start1":162,"start2":162,"length1":17,"length2":17}]],"length":49634,"saved":false}
{"ts":1363202260839,"patch":[[{"diffs":[[0,"dule\\Php"],[1,"Parser;"],[0,"\n//requi"]],"start1":163,"start2":163,"length1":16,"length2":23}]],"length":49641,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363207343755,"patch":[[{"diffs":[[0,"ttp\n*/\n\n"],[1,"namespace PRISM\\Module\\HttpHandler;\n\nuse PRISM\\Module\\SectionHandler,\n    PRISM\\Module\\PhpParser;\n//"],[0,"require_"]],"start1":73,"start2":73,"length1":16,"length2":116},{"diffs":[[0,".php');\n"],[1,"//"],[0,"require_"]],"start1":235,"start2":235,"length1":16,"length2":18}]],"length":49641,"saved":false}
{"ts":1363207456639,"patch":[[{"diffs":[[0,"dule"],[-1,"\\HttpHandler"],[0,";\n\nu"]],"start1":99,"start2":99,"length1":20,"length2":8}]],"length":49629,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363211013610,"patch":[[{"diffs":[[0,"dler"],[-1,",\n   "],[1,"\nuse"],[0," PRI"]],"start1":133,"start2":133,"length1":13,"length2":12}]],"length":49628,"saved":false}
{"contributors":[],"silentsave":true,"ts":1363304647554,"patch":[[{"diffs":[[0,"as $k => $v)"],[-1,"\n\t\t"],[0,"{\n\t\t\t$info[]"]],"start1":1411,"start2":1411,"length1":27,"length2":24}]],"length":49625,"saved":false}
{"ts":1363304648750,"patch":[[{"diffs":[[0,"k => $v)"],[1," "],[0,"{\n\t\t\t$in"]],"start1":1415,"start2":1415,"length1":16,"length2":17}]],"length":49626,"saved":false}
{"ts":1363304661909,"patch":[[{"diffs":[[0,"eCache[$nonce]))"],[1," {"],[0,"\n\t\t\treturn false"]],"start1":2018,"start2":2018,"length1":32,"length2":34}]],"length":49628,"saved":false}
{"ts":1363304666113,"patch":[[{"diffs":[[0,"\t\treturn false;\n"],[1,"\t\t}\n"],[0,"\t\t\n\t\treturn arra"]],"start1":2038,"start2":2038,"length1":32,"length2":36}]],"length":49632,"saved":false}
{"ts":1363304674299,"patch":[[{"diffs":[[0,"nonce]))"],[1,"{"],[0,"\n\t\t\tretu"]],"start1":2422,"start2":2422,"length1":16,"length2":17}]],"length":49633,"saved":false}
{"ts":1363304676014,"patch":[[{"diffs":[[0,"nonce]))"],[1," "],[0,"{\n\t\t\tret"]],"start1":2422,"start2":2422,"length1":16,"length2":17}]],"length":49634,"saved":false}
{"ts":1363304680993,"patch":[[{"diffs":[[0,"rn false;\n\t\t"],[1,"}\n        "],[0,"\n\t\t$this->no"]],"start1":2440,"start2":2440,"length1":24,"length2":34}]],"length":49644,"saved":false}
{"ts":1363304692299,"patch":[[{"diffs":[[0,"->httpSock))"],[1," {"],[0,"\n\t\t\tfclose($"]],"start1":2681,"start2":2681,"length1":24,"length2":26}]],"length":49646,"saved":false}
{"ts":1363304695570,"patch":[[{"diffs":[[0,"ttpSock);\n\t\t"],[1,"}"],[0,"\n\t\tif (!$all"]],"start1":2714,"start2":2714,"length1":24,"length2":25}]],"length":49647,"saved":false}
{"ts":1363304696845,"patch":[[{"diffs":[[0,"pSock);\n\t\t}\n"],[1,"        \n"],[0,"\t\tif (!$all)"]],"start1":2716,"start2":2716,"length1":24,"length2":33}]],"length":49656,"saved":false}
{"ts":1363304703459,"patch":[[{"diffs":[[0," (!$all)"],[1," {"],[0,"\n\t\t\tretu"]],"start1":2741,"start2":2741,"length1":16,"length2":18}]],"length":49658,"saved":false}
{"ts":1363304705446,"patch":[[{"diffs":[[0,"\n\t\t\treturn;\n"],[1,"\t\t}\n"],[0,"\t\t\n\t\tfor ($k"]],"start1":2751,"start2":2751,"length1":24,"length2":28}]],"length":49662,"saved":false}
{"ts":1363304710700,"patch":[[{"diffs":[[0,"ients; $k++)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tarray_s"]],"start1":2802,"start2":2802,"length1":27,"length2":25}]],"length":49660,"saved":false}
{"ts":1363304732426,"patch":[[{"diffs":[[0," false))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tif "]],"start1":3220,"start2":3220,"length1":19,"length2":17}]],"length":49658,"saved":false}
{"ts":1363304736391,"patch":[[{"diffs":[[0,"UG_CORE)"],[1," {"],[0,"\n\t\t\t\tcon"]],"start1":3284,"start2":3284,"length1":16,"length2":18}]],"length":49660,"saved":false}
{"ts":1363304738724,"patch":[[{"diffs":[[0,"->iniFile);\n"],[1,"                \n"],[0,"\t\t}\n\t\telse\n\t"]],"start1":3322,"start2":3322,"length1":24,"length2":41}]],"length":49677,"saved":false}
{"ts":1363304739823,"patch":[[{"diffs":[[0,"iFile);\n"],[-1,"                "],[1,"\t\t\t}"],[0,"\n\t\t}\n\t\te"]],"start1":3326,"start2":3326,"length1":32,"length2":20}]],"length":49665,"saved":false}
{"ts":1363304743658,"patch":[[{"diffs":[[0,"File);\n\t\t\t}\n\t\t}\n"],[-1,"\t\t"],[0,"else\n\t\t{\n\t\t\t# We"]],"start1":3327,"start2":3327,"length1":34,"length2":32}]],"length":49663,"saved":false}
{"ts":1363304745170,"patch":[[{"diffs":[[0,"\t\t\t}\n\t\t}"],[-1,"\n"],[1," "],[0,"else\n\t\t{"]],"start1":3334,"start2":3334,"length1":17,"length2":17}]],"length":49663,"saved":false}
{"ts":1363304748103,"patch":[[{"diffs":[[0,"\t\t}\n\t\t} else"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t# We as"]],"start1":3335,"start2":3335,"length1":27,"length2":25}]],"length":49661,"saved":false}
{"ts":1363304757023,"patch":[[{"diffs":[[0,"raInfo))"],[1," {"],[0,"\n\t\t\t\tcon"]],"start1":4070,"start2":4070,"length1":16,"length2":18}]],"length":49663,"saved":false}
{"ts":1363304760721,"patch":[[{"diffs":[[0,"iFile);\n"],[1,"                \n"],[0,"\t\t}\n\n\t\t/"]],"start1":4122,"start2":4122,"length1":16,"length2":33}]],"length":49680,"saved":false}
{"ts":1363304761884,"patch":[[{"diffs":[[0,"iFile);\n"],[-1,"                "],[1,"\t\t\t}"],[0,"\n\t\t}\n\n\t\t"]],"start1":4122,"start2":4122,"length1":32,"length2":20}]],"length":49668,"saved":false}
{"ts":1363304773504,"patch":[[{"diffs":[[0,"etDocRoot())"],[1," {"],[0,"\n\t\t\treturn f"]],"start1":4172,"start2":4172,"length1":24,"length2":26}]],"length":49670,"saved":false}
{"ts":1363304775363,"patch":[[{"diffs":[[0,"\t\treturn false;\n"],[1,"\t\t}\n"],[0,"\t\t\n\t\t// Set logF"]],"start1":4188,"start2":4188,"length1":32,"length2":36}]],"length":49674,"saved":false}
{"ts":1363304779466,"patch":[[{"diffs":[[0,"gFile())"],[1," {"],[0,"\n\t\t\tretu"]],"start1":4247,"start2":4247,"length1":16,"length2":18}]],"length":49676,"saved":false}
{"ts":1363304781473,"patch":[[{"diffs":[[0,"\t\treturn false;\n"],[1,"\t\t}\n"],[0,"\t\t\n\t\t// Setup ht"]],"start1":4259,"start2":4259,"length1":32,"length2":36}]],"length":49680,"saved":false}
{"ts":1363304785193,"patch":[[{"diffs":[[0,"ocket())"],[1," {"],[0,"\n\t\t\tretu"]],"start1":4344,"start2":4344,"length1":16,"length2":18}]],"length":49682,"saved":false}
{"ts":1363304789614,"patch":[[{"diffs":[[0,"rn false;\n\t\t"],[1,"}\n        "],[0,"\n\t\t// Setup "]],"start1":4362,"start2":4362,"length1":24,"length2":34}]],"length":49692,"saved":false}
{"ts":1363304792862,"patch":[[{"diffs":[[0,"hPath())"],[1,"{"],[0,"\n\t\t\tretu"]],"start1":4491,"start2":4491,"length1":16,"length2":17}]],"length":49693,"saved":false}
{"ts":1363304794868,"patch":[[{"diffs":[[0,"\t\treturn false;\n"],[1,"\t\t}\n"],[0,"\t\t\n\t\t// Validate"]],"start1":4502,"start2":4502,"length1":32,"length2":36}]],"length":49697,"saved":false}
{"ts":1363304800897,"patch":[[{"diffs":[[0,"Basic')\n"],[-1,"\t\t"],[1," "],[0,"{\n\t\t\tcon"]],"start1":4640,"start2":4640,"length1":18,"length2":17}]],"length":49696,"saved":false}
{"ts":1363304802619,"patch":[[{"diffs":[[0,"'Basic')"],[-1,"\n "],[0,"{\n\t\t\tcon"]],"start1":4639,"start2":4639,"length1":18,"length2":16}]],"length":49694,"saved":false}
{"ts":1363304804052,"patch":[[{"diffs":[[0,"'Basic')"],[1," "],[0,"{\n\t\t\tcon"]],"start1":4639,"start2":4639,"length1":16,"length2":17}]],"length":49695,"saved":false}
{"ts":1363304813685,"patch":[[{"diffs":[[0,"'port'] > 0)"],[-1,"\n\t\t"],[0,"{\n\t\t\t$this->"]],"start1":4869,"start2":4869,"length1":27,"length2":24}]],"length":49692,"saved":false}
{"ts":1363304814797,"patch":[[{"diffs":[[0,"t'] > 0)"],[1," "],[0,"{\n\t\t\t$th"]],"start1":4873,"start2":4873,"length1":16,"length2":17}]],"length":49693,"saved":false}
{"ts":1363304817512,"patch":[[{"diffs":[[0,"pErrNo)\n"],[-1,"\t\t\t"],[0,"{\n\t\t\t\tco"]],"start1":5086,"start2":5086,"length1":19,"length2":16}]],"length":49690,"saved":false}
{"ts":1363304819041,"patch":[[{"diffs":[[0,"tpErrNo)"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\tco"]],"start1":5085,"start2":5085,"length1":17,"length2":17}]],"length":49690,"saved":false}
{"ts":1363304822452,"patch":[[{"diffs":[[0,"rrStr);\n"],[1,"            \n"],[0,"\t\t\tif (!"]],"start1":5005,"start2":5005,"length1":16,"length2":29}]],"length":49703,"saved":false}
{"ts":1363304828726,"patch":[[{"diffs":[[0," false;\n\t\t\t}"],[-1,"\n\t\t\t"],[0,"else\n\t\t\t{\n\t\t"]],"start1":5196,"start2":5196,"length1":28,"length2":24}]],"length":49699,"saved":false}
{"ts":1363304829860,"patch":[[{"diffs":[[0,"se;\n\t\t\t}"],[1," "],[0,"else\n\t\t\t"]],"start1":5200,"start2":5200,"length1":16,"length2":17}]],"length":49700,"saved":false}
{"ts":1363304833107,"patch":[[{"diffs":[[0,"e;\n\t\t\t} else"],[-1,"\n"],[0,"\t\t\t{\n\t\t\t\tcon"]],"start1":5201,"start2":5201,"length1":25,"length2":24}]],"length":49699,"saved":false}
{"ts":1363304834549,"patch":[[{"diffs":[[0,"\t\t} else"],[-1,"\t\t\t"],[1," "],[0,"{\n\t\t\t\tco"]],"start1":5205,"start2":5205,"length1":19,"length2":17}]],"length":49697,"saved":false}
{"ts":1363304838934,"patch":[[{"diffs":[[0,");\n\t\t\t}\n\t\t}\n"],[1,"        \n"],[0,"\t\treturn tru"]],"start1":5311,"start2":5311,"length1":24,"length2":33}]],"length":49706,"saved":false}
{"ts":1363304995543,"patch":[[{"diffs":[[0,"ocRoot))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tcon"]],"start1":5880,"start2":5880,"length1":19,"length2":17}]],"length":49704,"saved":false}
{"ts":1363304999796,"patch":[[{"diffs":[[0,"s['path'] == '')"],[1," {"],[0,"\n\t\t\t$this->httpV"]],"start1":5533,"start2":5533,"length1":32,"length2":34}]],"length":49706,"saved":false}
{"ts":1363305002395,"patch":[[{"diffs":[[0,"'www-docs';\n"],[1,"            \n"],[0,"\t\t\n\t\t// Stor"]],"start1":5581,"start2":5581,"length1":24,"length2":37}]],"length":49719,"saved":false}
{"ts":1363305003522,"patch":[[{"diffs":[[0,"-docs';\n"],[-1,"            "],[1,"\t\t}"],[0,"\n\t\t\n\t\t//"]],"start1":5585,"start2":5585,"length1":28,"length2":19}]],"length":49710,"saved":false}
{"ts":1363305018545,"patch":[[{"diffs":[[0,"ile'] == '')"],[1," {"],[0,"\n\t\t\t$this->h"]],"start1":6217,"start2":6217,"length1":24,"length2":26}]],"length":49712,"saved":false}
{"ts":1363305020494,"patch":[[{"diffs":[[0,"ttp.log'"],[1,"\n            }"],[0,";\n\t\t\n\t\t/"]],"start1":6271,"start2":6271,"length1":16,"length2":30}]],"length":49726,"saved":false}
{"ts":1363305022821,"patch":[[{"diffs":[[0,"og'\n"],[-1,"            }"],[0,";\n\t\t"]],"start1":6276,"start2":6276,"length1":21,"length2":8}]],"length":49713,"saved":false}
{"ts":1363305023976,"patch":[[{"diffs":[[0,"ttp.log'"],[-1,"\n"],[0,";\n\t\t\n\t\t/"]],"start1":6271,"start2":6271,"length1":17,"length2":16}]],"length":49712,"saved":false}
{"ts":1363305026844,"patch":[[{"diffs":[[0,"p.log';\n"],[1,"\t\t}\n"],[0,"\t\t\n\t\t// "]],"start1":6273,"start2":6273,"length1":16,"length2":20}]],"length":49716,"saved":false}
{"ts":1363305034328,"patch":[[{"diffs":[[0,"'dirname']))"],[-1,"\n\t\t"],[0,"{\n\t\t\tconsole"]],"start1":6698,"start2":6698,"length1":27,"length2":24}]],"length":49713,"saved":false}
{"ts":1363305035754,"patch":[[{"diffs":[[0,"name']))"],[1," "],[0,"{\n\t\t\tcon"]],"start1":6702,"start2":6702,"length1":16,"length2":17}]],"length":49714,"saved":false}
{"ts":1363305038162,"patch":[[{"diffs":[[0,"n false;\n\t\t}"],[-1,"\n\t\t"],[0,"else if (is_"]],"start1":6791,"start2":6791,"length1":27,"length2":24}]],"length":49711,"saved":false}
{"ts":1363305039383,"patch":[[{"diffs":[[0,"lse;\n\t\t}"],[1," "],[0,"else if "]],"start1":6795,"start2":6795,"length1":16,"length2":17}]],"length":49712,"saved":false}
{"ts":1363305041858,"patch":[[{"diffs":[[0,"ogFile))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tcon"]],"start1":6828,"start2":6828,"length1":19,"length2":17}]],"length":49710,"saved":false}
{"ts":1363305060833,"patch":[[{"diffs":[[0,"->logFile);\n"],[1,"        \n"],[0,"\t\tif (!isset"]],"start1":6596,"start2":6596,"length1":24,"length2":33}]],"length":49719,"saved":false}
{"ts":1363305079082,"patch":[[{"diffs":[[0,"eDomain'] == '')"],[1," {"],[0,"\n\t\t\treturn;\n\t\tif"]],"start1":7167,"start2":7167,"length1":32,"length2":34}]],"length":49721,"saved":false}
{"ts":1363305082835,"patch":[[{"diffs":[[0,"return;\n"],[1,"\t\t}\n        \n"],[0,"\t\tif (!g"]],"start1":7189,"start2":7189,"length1":16,"length2":29}]],"length":49734,"saved":false}
{"ts":1363305087240,"patch":[[{"diffs":[[0,"teDomain']))"],[-1,"\n\t\t"],[0,"{\n\t\t\tconsole"]],"start1":7242,"start2":7242,"length1":27,"length2":24}]],"length":49731,"saved":false}
{"ts":1363305088849,"patch":[[{"diffs":[[0,"main']))"],[1," "],[0,"{\n\t\t\tcon"]],"start1":7246,"start2":7246,"length1":16,"length2":17}]],"length":49732,"saved":false}
{"ts":1363305092464,"patch":[[{"diffs":[[0,"ath'] == '')"],[1," {"],[0,"\n\t\t\treturn t"]],"start1":7516,"start2":7516,"length1":24,"length2":26}]],"length":49734,"saved":false}
{"ts":1363305095856,"patch":[[{"diffs":[[0,"n true;\n"],[1,"\t\t}\n"],[0,"\t\tif ($t"]],"start1":7539,"start2":7539,"length1":16,"length2":20}]],"length":49738,"saved":false}
{"ts":1363305103116,"patch":[[{"diffs":[[0,"n true;\n\t\t}\n"],[1,"        \n"],[0,"\t\tif ($this-"]],"start1":7539,"start2":7539,"length1":24,"length2":33}]],"length":49747,"saved":false}
{"ts":1363305110396,"patch":[[{"diffs":[[0," == '/')"],[-1,"\n\t\t"],[0,"{\n\t\t\t$th"]],"start1":7597,"start2":7597,"length1":19,"length2":16}]],"length":49744,"saved":false}
{"ts":1363305112445,"patch":[[{"diffs":[[0," == '/')"],[1," "],[0,"{\n\t\t\t$th"]],"start1":7597,"start2":7597,"length1":16,"length2":17}]],"length":49745,"saved":false}
{"ts":1363305115351,"patch":[[{"diffs":[[0,"ain'];\n\t}\n\t\n"],[1,"    \n"],[0,"\tprivate fun"]],"start1":7432,"start2":7432,"length1":24,"length2":29}]],"length":49750,"saved":false}
{"ts":1363305118441,"patch":[[{"diffs":[[0,"}\n\t\n    "],[1,"# What the fuck"],[0,"\n\tprivat"]],"start1":7440,"start2":7440,"length1":16,"length2":31}]],"length":49765,"saved":false}
{"ts":1363305119939,"patch":[[{"diffs":[[0,"the fuck"],[1,"? "],[0,"\n\tprivat"]],"start1":7455,"start2":7455,"length1":16,"length2":18}]],"length":49767,"saved":false}
{"ts":1363305125106,"patch":[[{"diffs":[[0,"e fuck? "],[1,"Should this be "],[0,"\n\tprivat"]],"start1":7457,"start2":7457,"length1":16,"length2":31}]],"length":49782,"saved":false}
{"ts":1363305126327,"patch":[[{"diffs":[[0,"this be "],[1,"IF"],[0,"\n\tprivat"]],"start1":7472,"start2":7472,"length1":16,"length2":18}]],"length":49784,"saved":false}
{"ts":1363305128962,"patch":[[{"diffs":[[0,"is be IF"],[1,"/EL"],[0,"\n\tprivat"]],"start1":7474,"start2":7474,"length1":16,"length2":19}]],"length":49787,"saved":false}
{"ts":1363305130761,"patch":[[{"diffs":[[0,"be IF/EL"],[1,"IF or S"],[0,"\n\tprivat"]],"start1":7477,"start2":7477,"length1":16,"length2":23}]],"length":49794,"saved":false}
{"ts":1363305132555,"patch":[[{"diffs":[[0,"LIF or S"],[1,"WITCH/CASE"],[0,"\n\tprivat"]],"start1":7484,"start2":7484,"length1":16,"length2":26}]],"length":49804,"saved":false}
{"ts":1363305133702,"patch":[[{"diffs":[[0,"TCH/CASE"],[1,"?"],[0,"\n\tprivat"]],"start1":7494,"start2":7494,"length1":16,"length2":17}]],"length":49805,"saved":false}
{"ts":1363305144928,"patch":[[{"diffs":[[0,"AuthPath']))"],[-1,"\n\t\t"],[0,"{\n\t\t\tconsole"]],"start1":8291,"start2":8291,"length1":27,"length2":24}]],"length":49802,"saved":false}
{"ts":1363305146156,"patch":[[{"diffs":[[0,"Path']))"],[1," "],[0,"{\n\t\t\tcon"]],"start1":8295,"start2":8295,"length1":16,"length2":17}]],"length":49803,"saved":false}
{"ts":1363305154471,"patch":[[{"diffs":[[0,"->httpSock))"],[1," {"],[0,"\n\t\t\t$sockRea"]],"start1":8571,"start2":8571,"length1":24,"length2":26}]],"length":49805,"saved":false}
{"ts":1363305156026,"patch":[[{"diffs":[[0,"ttpSock;"],[1,"\n\t\t}"],[0,"\n\n\t\tfor "]],"start1":8612,"start2":8612,"length1":16,"length2":20}]],"length":49809,"saved":false}
{"ts":1363305159911,"patch":[[{"diffs":[[0,"umClients; $k++)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tif (is_reso"]],"start1":8654,"start2":8654,"length1":35,"length2":33}]],"length":49807,"saved":false}
{"ts":1363305164423,"patch":[[{"diffs":[[0,"etSocket()))"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\t$sockR"]],"start1":8717,"start2":8717,"length1":28,"length2":24}]],"length":49803,"saved":false}
{"ts":1363305165889,"patch":[[{"diffs":[[0,"cket()))"],[1," "],[0,"{\n\t\t\t\t$s"]],"start1":8721,"start2":8721,"length1":16,"length2":17}]],"length":49804,"saved":false}
{"ts":1363305169897,"patch":[[{"diffs":[[0,"() > -1)"],[1," {"],[0,"\n\t\t\t\t\t$s"]],"start1":8963,"start2":8963,"length1":16,"length2":18}]],"length":49806,"saved":false}
{"ts":1363305172039,"patch":[[{"diffs":[[0,"etSocket();\n"],[1,"\t\t\t\t}\n"],[0,"\t\t\t}\n\t\t}\n\t}\n"]],"start1":9020,"start2":9020,"length1":24,"length2":30}]],"length":49812,"saved":false}
{"ts":1363305182454,"patch":[[{"diffs":[[0,"kReads))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$ac"]],"start1":9225,"start2":9225,"length1":19,"length2":17}]],"length":49810,"saved":false}
{"ts":1363305186554,"patch":[[{"diffs":[[0,"($sock))"],[-1,"\n\t\t\t"],[1," "],[0,"{\n\t\t\t\tst"]],"start1":9394,"start2":9394,"length1":20,"length2":17}]],"length":49807,"saved":false}
{"ts":1363305197302,"patch":[[{"diffs":[[0,"rInfo);\n"],[1,"            \n"],[0,"\t\t\tif (i"]],"start1":9368,"start2":9368,"length1":16,"length2":29}]],"length":49820,"saved":false}
{"ts":1363305213597,"patch":[[{"diffs":[[0," 0  || \n"],[-1,"\t\t\t\t "],[0,"$this->h"]],"start1":9896,"start2":9896,"length1":21,"length2":16}]],"length":49815,"saved":false}
{"ts":1363305215694,"patch":[[{"diffs":[[0,"> 0  || "],[-1,"\n"],[0,"$this->h"]],"start1":9895,"start2":9895,"length1":17,"length2":16}]],"length":49814,"saved":false}
{"ts":1363305220016,"patch":[[{"diffs":[[0," -1) &&\n"],[-1,"\t\t\t\t"],[0,"in_array"]],"start1":9946,"start2":9946,"length1":20,"length2":16}]],"length":49810,"saved":false}
{"ts":1363305221227,"patch":[[{"diffs":[[0,"> -1) &&"],[-1,"\n"],[0,"in_array"]],"start1":9945,"start2":9945,"length1":17,"length2":16}]],"length":49809,"saved":false}
{"ts":1363305222517,"patch":[[{"diffs":[[0,"> -1) &&"],[1," "],[0,"in_array"]],"start1":9945,"start2":9945,"length1":16,"length2":17}]],"length":49810,"saved":false}
{"ts":1363305225753,"patch":[[{"diffs":[[0,"ockWrites))\n"],[-1,"\t\t\t"],[0,"{\n\t\t\t\t$activ"]],"start1":10002,"start2":10002,"length1":27,"length2":24}]],"length":49807,"saved":false}
{"ts":1363305227391,"patch":[[{"diffs":[[0,"Writes))"],[-1,"\n"],[0,"{\n\t\t\t\t$a"]],"start1":10005,"start2":10005,"length1":17,"length2":16}]],"length":49806,"saved":false}
{"ts":1363305228577,"patch":[[{"diffs":[[0,"Writes))"],[1," "],[0,"{\n\t\t\t\t$a"]],"start1":10005,"start2":10005,"length1":16,"length2":17}]],"length":49807,"saved":false}
{"ts":1363305245646,"patch":[[{"diffs":[[0,"dQLen() > 0)"],[1," {"],[0,"\n\t\t\t\t\t$this-"]],"start1":10162,"start2":10162,"length1":24,"length2":26}]],"length":49809,"saved":false}
{"ts":1363305247894,"patch":[[{"diffs":[[0,"ushSendQ();\n"],[1,"\t\t\t\t}\n"],[0,"\t\t\t\telse\n\t\t\t"]],"start1":10208,"start2":10208,"length1":24,"length2":30}]],"length":49815,"saved":false}
{"ts":1363305250700,"patch":[[{"diffs":[[0,"shSendQ();\n\t\t\t\t}"],[-1,"\n\t\t\t"],[0,"\telse\n\t\t\t\t\t$this"]],"start1":10209,"start2":10209,"length1":36,"length2":32}]],"length":49811,"saved":false}
{"ts":1363305252148,"patch":[[{"diffs":[[0,");\n\t\t\t\t}"],[-1,"\t"],[1," "],[0,"else\n\t\t\t"]],"start1":10217,"start2":10217,"length1":17,"length2":17}]],"length":49811,"saved":false}
{"ts":1363305256633,"patch":[[{"diffs":[[0,";\n\t\t\t\t} else"],[1," {"],[0,"\n\t\t\t\t\t$this-"]],"start1":10218,"start2":10218,"length1":24,"length2":26}]],"length":49813,"saved":false}
{"ts":1363305264699,"patch":[[{"diffs":[[0,"riteFile();\n"],[1,"                    \n"],[0,"\t\t\t}\n\t\t\t\n\t\t\t"]],"start1":10263,"start2":10263,"length1":24,"length2":45}]],"length":49834,"saved":false}
{"ts":1363305266257,"patch":[[{"diffs":[[0,"File();\n"],[-1,"                    "],[1,"\t\t\t\t}"],[0,"\n\t\t\t}\n\t\t"]],"start1":10267,"start2":10267,"length1":36,"length2":21}]],"length":49819,"saved":false}
{"ts":1363305272980,"patch":[[{"diffs":[[0,"kReads))"],[1," {"],[0,"\n\t\t\t\tcon"]],"start1":10398,"start2":10398,"length1":16,"length2":18}]],"length":49821,"saved":false}
{"ts":1363305275109,"patch":[[{"diffs":[[0,"ontinue;"],[1,"\n\t\t\t}"],[0,"\n\n\t\t\t$ac"]],"start1":10414,"start2":10414,"length1":16,"length2":21}]],"length":49826,"saved":false}
{"ts":1363305282751,"patch":[[{"diffs":[[0," == '')\n"],[-1,"\t\t\t"],[0,"{\n\t\t\t\tco"]],"start1":10538,"start2":10538,"length1":19,"length2":16}]],"length":49823,"saved":false}
{"ts":1363305284435,"patch":[[{"diffs":[[0,"a == '')"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\tco"]],"start1":10537,"start2":10537,"length1":17,"length2":17}]],"length":49823,"saved":false}
{"ts":1363305298226,"patch":[[{"diffs":[[0,"s; $k++)"],[-1,"\n\t\t"],[0,"{\n\t\t\tif "]],"start1":11394,"start2":11394,"length1":19,"length2":16}]],"length":49820,"saved":false}
{"ts":1363305299757,"patch":[[{"diffs":[[0,"s; $k++)"],[1," "],[0,"{\n\t\t\tif "]],"start1":11394,"start2":11394,"length1":16,"length2":17}]],"length":49821,"saved":false}
{"ts":1363305303816,"patch":[[{"diffs":[[0,"P_ALIVE)"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\tco"]],"start1":11473,"start2":11473,"length1":20,"length2":16}]],"length":49817,"saved":false}
{"ts":1363305305382,"patch":[[{"diffs":[[0,"P_ALIVE)"],[1," "],[0,"{\n\t\t\t\tco"]],"start1":11473,"start2":11473,"length1":16,"length2":17}]],"length":49818,"saved":false}
{"ts":1363305346052,"patch":[[{"diffs":[[0,"is->socket))"],[1," {"],[0,"\n\t\t\tfclose($"]],"start1":12777,"start2":12777,"length1":24,"length2":26}]],"length":49820,"saved":false}
{"ts":1363305348322,"patch":[[{"diffs":[[0,"ocket);\n"],[1,"\t\t}\n"],[0,"\t\t\n\t\tif "]],"start1":12810,"start2":12810,"length1":16,"length2":20}]],"length":49824,"saved":false}
{"ts":1363305351706,"patch":[[{"diffs":[[0,"s->sendFile)"],[1," {"],[0,"\n\t\t\t$this->w"]],"start1":12835,"start2":12835,"length1":24,"length2":26}]],"length":49826,"saved":false}
{"ts":1363305355055,"patch":[[{"diffs":[[0,"ileReset();\n"],[1,"\t\t}\n"],[0,"\t\tif ($this-"]],"start1":12866,"start2":12866,"length1":24,"length2":28}]],"length":49830,"saved":false}
{"ts":1363305358443,"patch":[[{"diffs":[[0,"endQLen > 0)"],[1," {"],[0,"\n\t\t\t$this->s"]],"start1":12896,"start2":12896,"length1":24,"length2":26}]],"length":49832,"saved":false}
{"ts":1363305360728,"patch":[[{"diffs":[[0,"ndQReset();\n"],[1,"\t\t}\n"],[0,"\t}\n\t\n\tpublic"]],"start1":12923,"start2":12923,"length1":24,"length2":28}]],"length":49836,"saved":false}
{"ts":1363305362365,"patch":[[{"diffs":[[0,"eset();\n\t\t}\n"],[1,"        \n"],[0,"\t\tif ($this-"]],"start1":12870,"start2":12870,"length1":24,"length2":33}]],"length":49845,"saved":false}
{"ts":1363305380835,"patch":[[{"diffs":[[0,"ataLen == 0)"],[1," {"],[0,"\n\t\t\treturn 0"]],"start1":13318,"start2":13318,"length1":24,"length2":26}]],"length":49847,"saved":false}
{"ts":1363305382143,"patch":[[{"diffs":[[0,"\t\treturn 0;\n"],[1,"\t\t}\n"],[0,"\t\t\n\t\tif (!is"]],"start1":13334,"start2":13334,"length1":24,"length2":28}]],"length":49851,"saved":false}
{"ts":1363305384861,"patch":[[{"diffs":[[0,"socket))"],[1," {"],[0,"\n\t\t\tretu"]],"start1":13379,"start2":13379,"length1":16,"length2":18}]],"length":49853,"saved":false}
{"ts":1363305386183,"patch":[[{"diffs":[[0,"$bytes;\n"],[1,"\t\t}\n"],[0,"\t\n\t\tif ("]],"start1":13400,"start2":13400,"length1":16,"length2":20}]],"length":49857,"saved":false}
{"ts":1363305390104,"patch":[[{"diffs":[[0,"== TRUE)"],[-1,"\n\t\t"],[0,"{\n\t\t\t// "]],"start1":13433,"start2":13433,"length1":19,"length2":16}]],"length":49854,"saved":false}
{"ts":1363305391168,"patch":[[{"diffs":[[0,"== TRUE)"],[1," "],[0,"{\n\t\t\t// "]],"start1":13433,"start2":13433,"length1":16,"length2":17}]],"length":49855,"saved":false}
{"ts":1363305395088,"patch":[[{"diffs":[[0," $data);\n\t\t}"],[-1,"\n\t\t"],[1," "],[0,"else\n\t\t{\n\t\t\t"]],"start1":13638,"start2":13638,"length1":27,"length2":25}]],"length":49853,"saved":false}
{"ts":1363305397524,"patch":[[{"diffs":[[0,"a);\n\t\t} else"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tif ($th"]],"start1":13643,"start2":13643,"length1":27,"length2":25}]],"length":49851,"saved":false}
{"ts":1363305400455,"patch":[[{"diffs":[[0,"dQLen == 0)\n"],[-1,"\t\t\t"],[0,"{\n\t\t\t\t// It'"]],"start1":13675,"start2":13675,"length1":27,"length2":24}]],"length":49848,"saved":false}
{"ts":1363305401814,"patch":[[{"diffs":[[0,"en == 0)"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\t//"]],"start1":13678,"start2":13678,"length1":17,"length2":17}]],"length":49848,"saved":false}
{"ts":1363305406493,"patch":[[{"diffs":[[0,"ataLen)\n"],[-1,"\t\t\t\t"],[0,"{\n\t\t\t\t\t/"]],"start1":13831,"start2":13831,"length1":20,"length2":16}]],"length":49844,"saved":false}
{"ts":1363305407700,"patch":[[{"diffs":[[0,"dataLen)"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\t\t/"]],"start1":13830,"start2":13830,"length1":17,"length2":17}]],"length":49844,"saved":false}
{"ts":1363305412979,"patch":[[{"diffs":[[0,"es));\n\t\t\t\t}\n\t\t\t}"],[-1,"\n\t\t\t"],[0,"else\n\t\t\t{\n\t\t\t\t//"]],"start1":13963,"start2":13963,"length1":36,"length2":32}]],"length":49840,"saved":false}
{"ts":1363305414570,"patch":[[{"diffs":[[0,"\t\t}\n\t\t\t}"],[1," "],[0,"else\n\t\t\t"]],"start1":13971,"start2":13971,"length1":16,"length2":17}]],"length":49841,"saved":false}
{"ts":1363305417127,"patch":[[{"diffs":[[0,"\t}\n\t\t\t} else"],[-1,"\n\t\t\t"],[1," "],[0,"{\n\t\t\t\t// Rem"]],"start1":13972,"start2":13972,"length1":28,"length2":25}]],"length":49838,"saved":false}
{"ts":1363305434179,"patch":[[{"diffs":[[0,"his->sendWindow)"],[1," {"],[0,"\n\t\t\t$this->sendW"]],"start1":14440,"start2":14440,"length1":32,"length2":34}]],"length":49840,"saved":false}
{"ts":1363305436689,"patch":[[{"diffs":[[0,"AM_WRITE_BYTES;\n"],[1,"\t\t}\n"],[0,"\t\telse\n\t\t{\n\t\t\t$t"]],"start1":14487,"start2":14487,"length1":32,"length2":36}]],"length":49844,"saved":false}
{"ts":1363305440009,"patch":[[{"diffs":[[0,"E_BYTES;\n\t\t}"],[-1,"\n\t\t"],[0,"else\n\t\t{\n\t\t\t"]],"start1":14494,"start2":14494,"length1":27,"length2":24}]],"length":49841,"saved":false}
{"ts":1363305441217,"patch":[[{"diffs":[[0,"TES;\n\t\t}"],[1," "],[0,"else\n\t\t{"]],"start1":14498,"start2":14498,"length1":16,"length2":17}]],"length":49842,"saved":false}
{"ts":1363305443493,"patch":[[{"diffs":[[0,"ES;\n\t\t} else"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$this->"]],"start1":14499,"start2":14499,"length1":27,"length2":25}]],"length":49840,"saved":false}
{"ts":1363305446710,"patch":[[{"diffs":[[0,"EAM_WRITE_BYTES)"],[1," {"],[0,"\n\t\t\t\t$this->send"]],"start1":14588,"start2":14588,"length1":32,"length2":34}]],"length":49842,"saved":false}
{"ts":1363305448822,"patch":[[{"diffs":[[0,"RITE_BYTES;\n"],[1,"\t\t\t}\n"],[0,"\t\t}\n\n\t\t// Up"]],"start1":14639,"start2":14639,"length1":24,"length2":29}]],"length":49847,"saved":false}
{"ts":1363305453718,"patch":[[{"diffs":[[0,"en == 0)"],[-1,"\n\t\t"],[0,"{\n\t\t\t// "]],"start1":14807,"start2":14807,"length1":19,"length2":16}]],"length":49844,"saved":false}
{"ts":1363305454931,"patch":[[{"diffs":[[0,"en == 0)"],[1," "],[0,"{\n\t\t\t// "]],"start1":14807,"start2":14807,"length1":16,"length2":17}]],"length":49845,"saved":false}
{"ts":1363305458629,"patch":[[{"diffs":[[0,"();\n\t\t} "],[-1,"\n\t\t"],[0,"else if "]],"start1":14886,"start2":14886,"length1":19,"length2":16}]],"length":49842,"saved":false}
{"ts":1363305461889,"patch":[[{"diffs":[[0,"($bytes > 0)"],[-1,"\n\t\t"],[0,"{\n\t\t\t// Set "]],"start1":14902,"start2":14902,"length1":27,"length2":24}]],"length":49839,"saved":false}
{"ts":1363305463090,"patch":[[{"diffs":[[0,"tes > 0)"],[1," "],[0,"{\n\t\t\t// "]],"start1":14906,"start2":14906,"length1":16,"length2":17}]],"length":49840,"saved":false}
{"ts":1363305475163,"patch":[[{"diffs":[[0,"== null)"],[-1,"\n\t\t"],[0,"{\n\t\t\t$th"]],"start1":15373,"start2":15373,"length1":19,"length2":16}]],"length":49837,"saved":false}
{"ts":1363305476429,"patch":[[{"diffs":[[0,"== null)"],[1," "],[0,"{\n\t\t\t$th"]],"start1":15373,"start2":15373,"length1":16,"length2":17}]],"length":49838,"saved":false}
{"ts":1363305479163,"patch":[[{"diffs":[[0," 'rb');\n"],[1,"            \n"],[0,"\t\t\tif (!"]],"start1":15421,"start2":15421,"length1":16,"length2":29}]],"length":49851,"saved":false}
{"ts":1363305481126,"patch":[[{"diffs":[[0,"endFile)"],[1," {"],[0,"\n\t\t\t\tret"]],"start1":15458,"start2":15458,"length1":16,"length2":18}]],"length":49853,"saved":false}
{"ts":1363305483574,"patch":[[{"diffs":[[0,"turn false;\n"],[1,"\t\t\t}\n"],[0,"\t\t\t$this->se"]],"start1":15475,"start2":15475,"length1":24,"length2":29}]],"length":49858,"saved":false}
{"ts":1363305485233,"patch":[[{"diffs":[[0,"false;\n\t\t\t}\n"],[1,"            \n"],[0,"\t\t\t$this->se"]],"start1":15480,"start2":15480,"length1":24,"length2":37}]],"length":49871,"saved":false}
{"ts":1363305490462,"patch":[[{"diffs":[[0,"dWindow)"],[1," {"],[0,"\n\t\t\t$thi"]],"start1":15941,"start2":15941,"length1":16,"length2":18}]],"length":49873,"saved":false}
{"ts":1363305493171,"patch":[[{"diffs":[[0,"_BYTES;\n"],[1,"\t\t}\n"],[0,"\t\telse\n\t"]],"start1":15988,"start2":15988,"length1":16,"length2":20}]],"length":49877,"saved":false}
{"ts":1363305601158,"patch":[[{"diffs":[[0,"E_BYTES;\n\t\t}"],[-1,"\n\t\t"],[0,"else\n\t\t{\n\t\t\t"]],"start1":15987,"start2":15987,"length1":27,"length2":24}]],"length":49874,"saved":false}
{"ts":1363305602436,"patch":[[{"diffs":[[0,"TES;\n\t\t}"],[1," "],[0,"else\n\t\t{"]],"start1":15991,"start2":15991,"length1":16,"length2":17}]],"length":49875,"saved":false}
{"ts":1363305605694,"patch":[[{"diffs":[[0,"ES;\n\t\t} else"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$this->"]],"start1":15992,"start2":15992,"length1":27,"length2":25}]],"length":49873,"saved":false}
{"ts":1363305612735,"patch":[[{"diffs":[[0,"AM_WRITE_BYTES;\n"],[1,"            \n"],[0,"\t\t\tif ($this->se"]],"start1":16035,"start2":16035,"length1":32,"length2":45}]],"length":49886,"saved":false}
{"ts":1363305615280,"patch":[[{"diffs":[[0,"E_BYTES)"],[1," "],[0,"\n\t\t\t\t$th"]],"start1":16102,"start2":16102,"length1":16,"length2":17}]],"length":49887,"saved":false}
{"ts":1363305616856,"patch":[[{"diffs":[[0,"_BYTES) "],[1,"{"],[0,"\n\t\t\t\t$th"]],"start1":16103,"start2":16103,"length1":16,"length2":17}]],"length":49888,"saved":false}
{"ts":1363305619036,"patch":[[{"diffs":[[0,"AM_WRITE_BYTES;\n"],[1,"\t\t\t}\n"],[0,"\t\t}\n\t\t\n\t\t//conso"]],"start1":16141,"start2":16141,"length1":32,"length2":37}]],"length":49893,"saved":false}
{"ts":1363305623545,"patch":[[{"diffs":[[0,"ileSize)"],[1," {"],[0,"\n\t\t\t$thi"]],"start1":16286,"start2":16286,"length1":16,"length2":18}]],"length":49895,"saved":false}
{"ts":1363305626261,"patch":[[{"diffs":[[0,"ileReset();\n"],[1,"\t\t}\n"],[0,"\t}\n\t\n\tprivat"]],"start1":16313,"start2":16313,"length1":24,"length2":28}]],"length":49899,"saved":false}
{"ts":1363305636557,"patch":[[{"diffs":[[0,"adding)\n"],[-1,"\t"],[0,"\t{\n\t\t\tfo"]],"start1":17014,"start2":17014,"length1":17,"length2":16}]],"length":49898,"saved":false}
{"ts":1363305637899,"patch":[[{"diffs":[[0,"Padding)"],[-1,"\n\t"],[0,"{\n\t\t\tfor"]],"start1":17013,"start2":17013,"length1":18,"length2":16}]],"length":49896,"saved":false}
{"ts":1363305639322,"patch":[[{"diffs":[[0,"Padding)"],[1," "],[0,"{\n\t\t\tfor"]],"start1":17013,"start2":17013,"length1":16,"length2":17}]],"length":49897,"saved":false}
{"ts":1363305641243,"patch":[[{"diffs":[[0,"'.$eol;\n\t\t}\n"],[1,"        \n"],[0,"\t\treturn $ou"]],"start1":17128,"start2":17128,"length1":24,"length2":33}]],"length":49906,"saved":false}
{"ts":1363305644204,"patch":[[{"diffs":[[0,"6; $a++)"],[1," {"],[0,"\n\t\t\t\t$ou"]],"start1":17041,"start2":17041,"length1":16,"length2":18}]],"length":49908,"saved":false}
{"ts":1363305647330,"patch":[[{"diffs":[[0,"'.$eol;\n"],[1,"\t\t\t}\n"],[0,"\t\t}\n    "]],"start1":17130,"start2":17130,"length1":16,"length2":21}]],"length":49913,"saved":false}
{"ts":1363307099446,"patch":[[{"diffs":[[0,"ndFile)\n"],[-1,"\t\t"],[0,"{\n\t\t\t$th"]],"start1":17422,"start2":17422,"length1":18,"length2":16}]],"length":49911,"saved":false}
{"ts":1363307100920,"patch":[[{"diffs":[[0,"endFile)"],[-1,"\n"],[1," "],[0,"{\n\t\t\t$th"]],"start1":17421,"start2":17421,"length1":17,"length2":17}]],"length":49911,"saved":false}
{"ts":1363307105769,"patch":[[{"diffs":[[0," = null;\n\t\t}"],[-1,"\n\t\t"],[0,"else if ($th"]],"start1":17481,"start2":17481,"length1":27,"length2":24}]],"length":49908,"saved":false}
{"ts":1363307107372,"patch":[[{"diffs":[[0,"ull;\n\t\t}"],[1," "],[0,"else if "]],"start1":17485,"start2":17485,"length1":16,"length2":17}]],"length":49909,"saved":false}
{"ts":1363307109702,"patch":[[{"diffs":[[0,"Len > 0)"],[-1,"\n\t\t"],[0,"{\n\t\t\t$th"]],"start1":17515,"start2":17515,"length1":19,"length2":16}]],"length":49906,"saved":false}
{"ts":1363307111327,"patch":[[{"diffs":[[0,"Len > 0)"],[1," "],[0,"{\n\t\t\t$th"]],"start1":17515,"start2":17515,"length1":16,"length2":17}]],"length":49907,"saved":false}
{"ts":1363307114269,"patch":[[{"diffs":[[0,"Request)"],[1," {"],[0,"\n\t\t\t$thi"]],"start1":17603,"start2":17603,"length1":16,"length2":18}]],"length":49909,"saved":false}
{"ts":1363307116616,"patch":[[{"diffs":[[0,"quest();"],[1,"\n\t\t}"],[0,"\n\n\t\t// P"]],"start1":17648,"start2":17648,"length1":16,"length2":20}]],"length":49913,"saved":false}
{"ts":1363307122502,"patch":[[{"diffs":[[0,"($data))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t// "]],"start1":17777,"start2":17777,"length1":19,"length2":17}]],"length":49911,"saved":false}
{"ts":1363307125887,"patch":[[{"diffs":[[0,"= 444)\n\t"],[-1,"\t\t{"],[0,"\n\t\t\t\t$r "]],"start1":17986,"start2":17986,"length1":19,"length2":16}]],"length":49908,"saved":false}
{"ts":1363307127526,"patch":[[{"diffs":[[0,"!= 444)\n"],[-1,"\t\n"],[0,"\t\t\t\t$r ="]],"start1":17985,"start2":17985,"length1":18,"length2":16}]],"length":49906,"saved":false}
{"ts":1363307130009,"patch":[[{"diffs":[[0," != 444)"],[1," {"],[0,"\n\t\t\t\t$r "]],"start1":17984,"start2":17984,"length1":16,"length2":18}]],"length":49908,"saved":false}
{"ts":1363307133129,"patch":[[{"diffs":[[0," == 405)"],[-1,"\n\t\t\t\t"],[0,"{\n\t\t\t\t\t$"]],"start1":18190,"start2":18190,"length1":21,"length2":16}]],"length":49903,"saved":false}
{"ts":1363307134851,"patch":[[{"diffs":[[0," == 405)"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":18190,"start2":18190,"length1":16,"length2":17}]],"length":49904,"saved":false}
{"ts":1363307141857,"patch":[[{"diffs":[[0,"th') : 0));\n\t\t\t}"],[-1,"\n\t\t\t"],[1," "],[0,"else\n\t\t\t{\n\t\t\t\t$t"]],"start1":18507,"start2":18507,"length1":36,"length2":33}]],"length":49901,"saved":false}
{"ts":1363307143849,"patch":[[{"diffs":[[0,");\n\t\t\t} else"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\t$this-"]],"start1":18516,"start2":18516,"length1":28,"length2":24}]],"length":49897,"saved":false}
{"ts":1363307145716,"patch":[[{"diffs":[[0,"\t\t} else"],[1," "],[0,"{\n\t\t\t\t$t"]],"start1":18520,"start2":18520,"length1":16,"length2":17}]],"length":49898,"saved":false}
{"ts":1363307147766,"patch":[[{"diffs":[[0,");\n\t\t\t}\n"],[1,"            \n"],[0,"\t\t\t$errN"]],"start1":18559,"start2":18559,"length1":16,"length2":29}]],"length":49911,"saved":false}
{"ts":1363307167878,"patch":[[{"diffs":[[0," \t\t\t"],[-1,"// We're still receiving headers"],[0,"\n\t\t\t"]],"start1":18783,"start2":18783,"length1":40,"length2":8}]],"length":49879,"saved":false}
{"ts":1363307171138,"patch":[[{"diffs":[[0,") \t\t\t// "],[1,"// We're still receiving headers"],[0,"We're st"]],"start1":18822,"start2":18822,"length1":16,"length2":48}]],"length":49911,"saved":false}
{"ts":1363307172958,"patch":[[{"diffs":[[0," headers"],[1," or "],[0,"We're st"]],"start1":18854,"start2":18854,"length1":16,"length2":20}]],"length":49915,"saved":false}
{"ts":1363307178469,"patch":[[{"diffs":[[0," || \t\t\t\n"],[-1,"\t\t\t"],[0,"$this->h"]],"start1":18780,"start2":18780,"length1":19,"length2":16}]],"length":49912,"saved":false}
{"ts":1363307180109,"patch":[[{"diffs":[[0,"s || \t\t\t"],[-1,"\n"],[0,"$this->h"]],"start1":18779,"start2":18779,"length1":17,"length2":16}]],"length":49911,"saved":false}
{"ts":1363307181353,"patch":[[{"diffs":[[0,"ers || \t"],[-1,"\t\t"],[0,"$this->h"]],"start1":18777,"start2":18777,"length1":18,"length2":16}]],"length":49909,"saved":false}
{"ts":1363307183587,"patch":[[{"diffs":[[0,"ders || "],[-1,"\t"],[0,"$this->h"]],"start1":18776,"start2":18776,"length1":17,"length2":16}]],"length":49908,"saved":false}
{"ts":1363307191258,"patch":[[{"diffs":[[0,"g) \t"],[-1,"\t\t// // We're still receiving headers or We're still receiving the body of a request"],[0,"\n\t\t\t"]],"start1":18814,"start2":18814,"length1":92,"length2":8}]],"length":49824,"saved":false}
{"ts":1363307192911,"patch":[[{"diffs":[[0,"ing)"],[-1," \t"],[0,"\n\t\t\t"]],"start1":18812,"start2":18812,"length1":10,"length2":8}]],"length":49822,"saved":false}
{"ts":1363307194293,"patch":[[{"diffs":[[0,"e data.\n"],[1,"        \n"],[0,"\t\tif (!$"]],"start1":18735,"start2":18735,"length1":16,"length2":25}]],"length":49831,"saved":false}
{"ts":1363307195970,"patch":[[{"diffs":[[0,"e data.\n        "],[1,"// // We're still receiving headers or We're still receiving the body of a request"],[0,"\n\t\tif (!$this->h"]],"start1":18735,"start2":18735,"length1":32,"length2":114}]],"length":49913,"saved":false}
{"ts":1363307200391,"patch":[[{"diffs":[[0,"    "],[-1," // //"],[0," We'"]],"start1":18746,"start2":18746,"length1":14,"length2":8}]],"length":49907,"saved":false}
{"ts":1363307201743,"patch":[[{"diffs":[[0,"\n       "],[1," #"],[0," We're s"]],"start1":18742,"start2":18742,"length1":16,"length2":18}]],"length":49909,"saved":false}
{"ts":1363307208871,"patch":[[{"diffs":[[0,"ders or "],[-1,"We're still receiving "],[0,"the body"]],"start1":18778,"start2":18778,"length1":38,"length2":16}]],"length":49887,"saved":false}
{"ts":1363307215103,"patch":[[{"diffs":[[0,"ceiving)"],[1," {"],[0,"\n\t\t\tretu"]],"start1":18873,"start2":18873,"length1":16,"length2":18}]],"length":49889,"saved":false}
{"ts":1363307217829,"patch":[[{"diffs":[[0,"n later\n"],[1,"            \n"],[0,"\t\t\n\t\t// "]],"start1":18947,"start2":18947,"length1":16,"length2":29}]],"length":49902,"saved":false}
{"ts":1363307220039,"patch":[[{"diffs":[[0,"n later\n"],[-1,"            "],[1,"\t\t}"],[0,"\n\t\t\n\t\t//"]],"start1":18947,"start2":18947,"length1":28,"length2":19}]],"length":49893,"saved":false}
{"ts":1363307239906,"patch":[[{"diffs":[[0,"'Referer']))"],[1," {"],[0,"\n\t\t\t$this->h"]],"start1":20749,"start2":20749,"length1":24,"length2":26}]],"length":49895,"saved":false}
{"ts":1363307242691,"patch":[[{"diffs":[[0,"'Referer'];\n"],[1,"\t\t}\n"],[0,"\t\tif (isset("]],"start1":20841,"start2":20841,"length1":24,"length2":28}]],"length":49899,"saved":false}
{"ts":1363307244181,"patch":[[{"diffs":[[0,"erer'];\n\t\t}\n"],[1,"        \n"],[0,"\t\tif (isset("]],"start1":20845,"start2":20845,"length1":24,"length2":33}]],"length":49908,"saved":false}
{"ts":1363307248881,"patch":[[{"diffs":[[0,"e'] : '';\n\t\t"],[1,"\n        "],[0,"if (isset($t"]],"start1":20699,"start2":20699,"length1":24,"length2":33}]],"length":49917,"saved":false}
{"ts":1363307251552,"patch":[[{"diffs":[[0,"s['Range']))"],[1," {"],[0,"\n\t\t\t$this->h"]],"start1":20913,"start2":20913,"length1":24,"length2":26}]],"length":49919,"saved":false}
{"ts":1363307255632,"patch":[[{"diffs":[[0,"s['Range'];\n"],[1,"\t\t}\n"],[0,"\t\tif (isset("]],"start1":21001,"start2":21001,"length1":24,"length2":28}]],"length":49923,"saved":false}
{"ts":1363307257273,"patch":[[{"diffs":[[0,"ange'];\n\t\t}\n"],[1,"        \n"],[0,"\t\tif (isset("]],"start1":21005,"start2":21005,"length1":24,"length2":33}]],"length":49932,"saved":false}
{"ts":1363307261459,"patch":[[{"diffs":[[0,"['Cookie']))"],[1,"{"],[0,"\n\t\t\t$this->h"]],"start1":21065,"start2":21065,"length1":24,"length2":25}]],"length":49933,"saved":false}
{"ts":1363307267295,"patch":[[{"diffs":[[0,"okie']))"],[1," "],[0,"{\n\t\t\t$th"]],"start1":21069,"start2":21069,"length1":16,"length2":17}]],"length":49934,"saved":false}
{"ts":1363307269344,"patch":[[{"diffs":[[0,"okie'];\n"],[1,"\t\t}\n"],[0,"\t\tif (is"]],"start1":21157,"start2":21157,"length1":16,"length2":20}]],"length":49938,"saved":false}
{"ts":1363307270996,"patch":[[{"diffs":[[0,"okie'];\n\t\t}\n"],[1,"        \n"],[0,"\t\tif (isset("]],"start1":21157,"start2":21157,"length1":24,"length2":33}]],"length":49947,"saved":false}
{"ts":1363307273368,"patch":[[{"diffs":[[0,"uthorization']))"],[1,"{"],[0,"\n\t\t\t$this->httpR"]],"start1":21220,"start2":21220,"length1":32,"length2":33}]],"length":49948,"saved":false}
{"ts":1363307275829,"patch":[[{"diffs":[[0,"tion']))"],[1," "],[0,"{\n\t\t\t$th"]],"start1":21228,"start2":21228,"length1":16,"length2":17}]],"length":49949,"saved":false}
{"ts":1363307278094,"patch":[[{"diffs":[[0,"rization'];\n"],[1,"\t\t}\n"],[0,"\t\t$this->htt"]],"start1":21326,"start2":21326,"length1":24,"length2":28}]],"length":49953,"saved":false}
{"ts":1363307279963,"patch":[[{"diffs":[[0,"tion'];\n\t\t}\n"],[1,"        \n"],[0,"\t\t$this->htt"]],"start1":21330,"start2":21330,"length1":24,"length2":33}]],"length":49962,"saved":false}
{"ts":1363307288479,"patch":[[{"diffs":[[0,"= '' &&\n"],[-1,"\t\t\t"],[0,"$this->h"]],"start1":21489,"start2":21489,"length1":19,"length2":16}]],"length":49959,"saved":false}
{"ts":1363307289946,"patch":[[{"diffs":[[0,"!= '' &&"],[-1,"\n"],[0,"$this->h"]],"start1":21488,"start2":21488,"length1":17,"length2":16}]],"length":49958,"saved":false}
{"ts":1363307291450,"patch":[[{"diffs":[[0,"!= '' &&"],[1," "],[0,"$this->h"]],"start1":21488,"start2":21488,"length1":16,"length2":17}]],"length":49959,"saved":false}
{"ts":1363307294636,"patch":[[{"diffs":[[0,"_NAME'])"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$r "]],"start1":21563,"start2":21563,"length1":19,"length2":17}]],"length":49957,"saved":false}
{"ts":1363307304244,"patch":[[{"diffs":[[0,") != '')"],[-1,"\n\t\t"],[0,"{\n\t\t\t$sc"]],"start1":21981,"start2":21981,"length1":19,"length2":16}]],"length":49954,"saved":false}
{"ts":1363307305679,"patch":[[{"diffs":[[0,") != '')"],[1," "],[0,"{\n\t\t\t$sc"]],"start1":21981,"start2":21981,"length1":16,"length2":17}]],"length":49955,"saved":false}
{"ts":1363307316166,"patch":[[{"diffs":[[0,") ||"],[-1,"\n\t\t\t\t "],[0,"!$th"]],"start1":22334,"start2":22334,"length1":14,"length2":8}]],"length":49949,"saved":false}
{"ts":1363307317643,"patch":[[{"diffs":[[0,"ON']) ||"],[1," "],[0,"!$this->"]],"start1":22330,"start2":22330,"length1":16,"length2":17}]],"length":49950,"saved":false}
{"ts":1363307321591,"patch":[[{"diffs":[[0,"ath) &&\n"],[-1,"\t\t\t"],[0,"\t(!isset"]],"start1":22266,"start2":22266,"length1":19,"length2":16}]],"length":49947,"saved":false}
{"ts":1363307323078,"patch":[[{"diffs":[[0,"Path) &&"],[-1,"\n\t"],[0,"(!isset("]],"start1":22265,"start2":22265,"length1":18,"length2":16}]],"length":49945,"saved":false}
{"ts":1363307324996,"patch":[[{"diffs":[[0,"Path) &&"],[1," "],[0,"(!isset("]],"start1":22265,"start2":22265,"length1":16,"length2":17}]],"length":49946,"saved":false}
{"ts":1363307328069,"patch":[[{"diffs":[[0,"tion()))"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\t//"]],"start1":22360,"start2":22360,"length1":20,"length2":16}]],"length":49942,"saved":false}
{"ts":1363307330826,"patch":[[{"diffs":[[0,"tion()))"],[1," "],[0,"{\n\t\t\t\t//"]],"start1":22360,"start2":22360,"length1":16,"length2":17}]],"length":49943,"saved":false}
{"ts":1363307339025,"patch":[[{"diffs":[[0,"d\n\t\t\t\tdo"],[-1,"\n\t\t\t\t"],[0,"{\n\t\t\t\t\t$"]],"start1":22414,"start2":22414,"length1":21,"length2":16}]],"length":49938,"saved":false}
{"ts":1363307340857,"patch":[[{"diffs":[[0,"d\n\t\t\t\tdo"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":22414,"start2":22414,"length1":16,"length2":17}]],"length":49939,"saved":false}
{"ts":1363307347053,"patch":[[{"diffs":[[0,"hile(true);\n"],[1,"                \n"],[0,"\t\t\t\t$opaque "]],"start1":22538,"start2":22538,"length1":24,"length2":41}]],"length":49956,"saved":false}
{"ts":1363307350073,"patch":[[{"diffs":[[0,"$nonce))"],[1," {"],[0,"\n\t\t\t\t\t\tb"]],"start1":22509,"start2":22509,"length1":16,"length2":18}]],"length":49958,"saved":false}
{"ts":1363307352030,"patch":[[{"diffs":[[0,"\tbreak;\n"],[1,"                        \n"],[0,"\t\t\t\t} wh"]],"start1":22525,"start2":22525,"length1":16,"length2":41}]],"length":49983,"saved":false}
{"ts":1363307354150,"patch":[[{"diffs":[[0,"ak;\n"],[-1,"                        "],[1,"\t\t\t\t\t}"],[0,"\n\t\t\t"]],"start1":22529,"start2":22529,"length1":32,"length2":14}]],"length":49965,"saved":false}
{"ts":1363307359073,"patch":[[{"diffs":[[0,"D_HEX);\n"],[1,"                    \n"],[0,"\t\t\t\t\tif "]],"start1":22465,"start2":22465,"length1":16,"length2":37}]],"length":49986,"saved":false}
{"ts":1363307382386,"patch":[[{"diffs":[[0,"on'], 401);\n"],[1,"                \n"],[0,"\t\t\t\tif ($thi"]],"start1":22713,"start2":22713,"length1":24,"length2":41}]],"length":50003,"saved":false}
{"ts":1363307385516,"patch":[[{"diffs":[[0,"Digest')"],[1," {"],[0,"\n\t\t\t\t\t$r"]],"start1":22785,"start2":22785,"length1":16,"length2":18}]],"length":50005,"saved":false}
{"ts":1363307388499,"patch":[[{"diffs":[[0,"e.'\"');\n\t\t\t\t"],[1,"} "],[0,"else\n\t\t\t\t\t$r"]],"start1":22918,"start2":22918,"length1":24,"length2":26}]],"length":50007,"saved":false}
{"ts":1363307390652,"patch":[[{"diffs":[[0,";\n\t\t\t\t} else"],[1," {"],[0,"\n\t\t\t\t\t$r->ad"]],"start1":22924,"start2":22924,"length1":24,"length2":26}]],"length":50009,"saved":false}
{"ts":1363307394368,"patch":[[{"diffs":[[0,"REALM.'\"');\n"],[1,"\t\t\t\t}\n                \n"],[0,"\t\t\t\t$r->addB"]],"start1":23002,"start2":23002,"length1":24,"length2":47}]],"length":50032,"saved":false}
{"ts":1363307402502,"patch":[[{"diffs":[[0,"tName))\n"],[-1,"\t\t"],[0,"{\n\t\t\t// "]],"start1":23888,"start2":23888,"length1":18,"length2":16}]],"length":50030,"saved":false}
{"ts":1363307403938,"patch":[[{"diffs":[[0,"ptName))"],[-1,"\n"],[1," "],[0,"{\n\t\t\t// "]],"start1":23887,"start2":23887,"length1":17,"length2":17}]],"length":50030,"saved":false}
{"ts":1363307407608,"patch":[[{"diffs":[[0,"scriptName))"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\tif ($t"]],"start1":24015,"start2":24015,"length1":28,"length2":24}]],"length":50026,"saved":false}
{"ts":1363307409112,"patch":[[{"diffs":[[0,"ptName))"],[1," "],[0,"{\n\t\t\t\tif"]],"start1":24019,"start2":24019,"length1":16,"length2":17}]],"length":50027,"saved":false}
{"ts":1363307411793,"patch":[[{"diffs":[[0,"OD'] == 'HEAD')\n"],[-1,"\t\t\t"],[0,"\t{\n\t\t\t\t\t$r = new"]],"start1":24078,"start2":24078,"length1":35,"length2":32}]],"length":50024,"saved":false}
{"ts":1363307413208,"patch":[[{"diffs":[[0," 'HEAD')"],[-1,"\n\t"],[0,"{\n\t\t\t\t\t$"]],"start1":24085,"start2":24085,"length1":18,"length2":16}]],"length":50022,"saved":false}
{"ts":1363307414647,"patch":[[{"diffs":[[0," 'HEAD')"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":24085,"start2":24085,"length1":16,"length2":17}]],"length":50023,"saved":false}
{"ts":1363307419755,"patch":[[{"diffs":[[0,"eaders());\n\t\t\t\t}"],[-1,"\n\t\t\t\t"],[0,"else\n\t\t\t\t{\n\t\t\t\t\t"]],"start1":24198,"start2":24198,"length1":37,"length2":32}]],"length":50018,"saved":false}
{"ts":1363307421939,"patch":[[{"diffs":[[0,");\n\t\t\t\t}"],[1," "],[0,"else\n\t\t\t"]],"start1":24206,"start2":24206,"length1":16,"length2":17}]],"length":50019,"saved":false}
{"ts":1363307425076,"patch":[[{"diffs":[[0,";\n\t\t\t\t} else"],[-1,"\n\t\t\t\t"],[1," "],[0,"{\n\t\t\t\t\t// 'P"]],"start1":24207,"start2":24207,"length1":29,"length2":25}]],"length":50015,"saved":false}
{"ts":1363307441714,"patch":[[{"diffs":[[0,";\n\t\t\t\t}\n\t\t\t}"],[-1,"\n\t\t\t"],[0,"else if (is_"]],"start1":24665,"start2":24665,"length1":28,"length2":24}]],"length":50011,"saved":false}
{"ts":1363307443339,"patch":[[{"diffs":[[0,"\t\t}\n\t\t\t}"],[1," "],[0,"else if "]],"start1":24669,"start2":24669,"length1":16,"length2":17}]],"length":50012,"saved":false}
{"ts":1363307446711,"patch":[[{"diffs":[[0,"IPT_NAME']))"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\t// 403"]],"start1":24751,"start2":24751,"length1":28,"length2":24}]],"length":50008,"saved":false}
{"ts":1363307448092,"patch":[[{"diffs":[[0,"NAME']))"],[1," "],[0,"{\n\t\t\t\t//"]],"start1":24755,"start2":24755,"length1":16,"length2":17}]],"length":50009,"saved":false}
{"ts":1363307454207,"patch":[[{"diffs":[[0,"ody());\n\t\t\t}"],[-1,"\n\t\t\t"],[0,"else\n\t\t\t{\n\t\t"]],"start1":24999,"start2":24999,"length1":28,"length2":24}]],"length":50005,"saved":false}
{"ts":1363307456222,"patch":[[{"diffs":[[0,"));\n\t\t\t}"],[1," "],[0,"else\n\t\t\t"]],"start1":25003,"start2":25003,"length1":16,"length2":17}]],"length":50006,"saved":false}
{"ts":1363307458241,"patch":[[{"diffs":[[0,");\n\t\t\t} else"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\t// Sen"]],"start1":25004,"start2":25004,"length1":28,"length2":24}]],"length":50002,"saved":false}
{"ts":1363307459894,"patch":[[{"diffs":[[0,"\t\t} else"],[1," "],[0,"{\n\t\t\t\t//"]],"start1":25008,"start2":25008,"length1":16,"length2":17}]],"length":50003,"saved":false}
{"ts":1363307463004,"patch":[[{"diffs":[[0,"'HEAD')\n"],[-1,"\t\t\t\t"],[0,"{\n\t\t\t\t\t$"]],"start1":25094,"start2":25094,"length1":20,"length2":16}]],"length":49999,"saved":false}
{"ts":1363307464644,"patch":[[{"diffs":[[0," 'HEAD')"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":25093,"start2":25093,"length1":17,"length2":17}]],"length":49999,"saved":false}
{"ts":1363307530477,"patch":[[{"diffs":[[0,"rs());\n\t\t\t\t}"],[-1,"\n\t\t\t\telse\n\t\t\t\t"],[1," else "],[0,"{\n\t\t\t\t\t$r = "]],"start1":25210,"start2":25210,"length1":38,"length2":30},{"diffs":[[0,"\t\t}\n\t\t\t}\n\t\t}"],[-1,"\n\t\t"],[1," "],[0,"else"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t// 404\n"]],"start1":25262,"start2":25262,"length1":34,"length2":30},{"diffs":[[0,"['Pragma']))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$ifModi"]],"start1":26114,"start2":26114,"length1":27,"length2":25},{"diffs":[[0,"\n\t\t\t\t0;\n"],[1,"    \n"],[0,"\t\t\t$cach"]],"start1":26284,"start2":26284,"length1":16,"length2":21}]],"length":49990,"saved":false}
{"ts":1363307531902,"patch":[[{"diffs":[[0,"\n\t\t\t\t0;\n"],[-1,"    \n"],[0,"\t\t\t$cach"]],"start1":26284,"start2":26284,"length1":21,"length2":16}]],"length":49985,"saved":false}
{"ts":1363307536168,"patch":[[{"diffs":[[0,"PT_NAME']);\n"],[1,"        \n"],[0,"\t\tif (isset("]],"start1":26008,"start2":26008,"length1":24,"length2":33}]],"length":49994,"saved":false}
{"ts":1363307543144,"patch":[[{"diffs":[[0,"nce > 0)"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\tif"]],"start1":26731,"start2":26731,"length1":20,"length2":16}]],"length":49990,"saved":false}
{"ts":1363307544644,"patch":[[{"diffs":[[0,"nce > 0)"],[1," "],[0,"{\n\t\t\t\tif"]],"start1":26731,"start2":26731,"length1":16,"length2":17}]],"length":49991,"saved":false}
{"ts":1363307548209,"patch":[[{"diffs":[[0,"eHash]))"],[-1,"\n\t\t\t\t"],[0,"{\n\t\t\t\t\ti"]],"start1":26785,"start2":26785,"length1":21,"length2":16}]],"length":49986,"saved":false}
{"ts":1363307549862,"patch":[[{"diffs":[[0,"eHash]))"],[1," "],[0,"{\n\t\t\t\t\ti"]],"start1":26785,"start2":26785,"length1":16,"length2":17}]],"length":49987,"saved":false}
{"ts":1363307552473,"patch":[[{"diffs":[[0,"fModifiedSince)\n"],[-1,"\t\t\t\t\t"],[0,"{\n\t\t\t\t\t\t// File "]],"start1":26846,"start2":26846,"length1":37,"length2":32}]],"length":49982,"saved":false}
{"ts":1363307553936,"patch":[[{"diffs":[[0,"edSince)"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\t\t\t"]],"start1":26853,"start2":26853,"length1":17,"length2":17}]],"length":49982,"saved":false}
{"ts":1363307560057,"patch":[[{"diffs":[[0,"ue;\n\t\t\t\t\t}\n\t\t\t\t}"],[-1,"\n\t\t\t\t"],[0,"else\n\t\t\t\t{\n\t\t\t\t\t"]],"start1":26968,"start2":26968,"length1":37,"length2":32}]],"length":49977,"saved":false}
{"ts":1363307562227,"patch":[[{"diffs":[[0,"\t}\n\t\t\t\t}"],[1," "],[0,"else\n\t\t\t"]],"start1":26976,"start2":26976,"length1":16,"length2":17}]],"length":49978,"saved":false}
{"ts":1363307563969,"patch":[[{"diffs":[[0,"}\n\t\t\t\t} else"],[-1,"\n\t\t\t\t"],[0,"{\n\t\t\t\t\t$scri"]],"start1":26977,"start2":26977,"length1":29,"length2":24}]],"length":49973,"saved":false}
{"ts":1363307565414,"patch":[[{"diffs":[[0,"\t\t} else"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":26981,"start2":26981,"length1":16,"length2":17}]],"length":49974,"saved":false}
{"ts":1363307568723,"patch":[[{"diffs":[[0,"dSince)\n"],[-1,"\t\t\t\t\t"],[0,"{\n\t\t\t\t\t\t"]],"start1":27184,"start2":27184,"length1":21,"length2":16}]],"length":49969,"saved":false}
{"ts":1363307570157,"patch":[[{"diffs":[[0,"edSince)"],[-1,"\n"],[0,"{\n\t\t\t\t\t\t"]],"start1":27183,"start2":27183,"length1":17,"length2":16}]],"length":49968,"saved":false}
{"ts":1363307571663,"patch":[[{"diffs":[[0,"edSince)"],[1," "],[0,"{\n\t\t\t\t\t\t"]],"start1":27183,"start2":27183,"length1":16,"length2":17}]],"length":49969,"saved":false}
{"ts":1363307586421,"patch":[[{"diffs":[[0,"= 0) &&\n"],[-1,"\t\t\t\t\t\t"],[0,"$cacheCo"]],"start1":27483,"start2":27483,"length1":22,"length2":16}]],"length":49963,"saved":false}
{"ts":1363307587976,"patch":[[{"diffs":[[0," == 0) &"],[-1,"&\n"],[0,"$cacheCo"]],"start1":27481,"start2":27481,"length1":18,"length2":16}]],"length":49961,"saved":false}
{"ts":1363307591156,"patch":[[{"diffs":[[0,"] == 0) "],[1,"&"],[0,"&$cacheC"]],"start1":27480,"start2":27480,"length1":16,"length2":17}]],"length":49962,"saved":false}
{"ts":1363307592787,"patch":[[{"diffs":[[0," == 0) &"],[-1,"&"],[1," "],[0,"$cacheCo"]],"start1":27481,"start2":27481,"length1":17,"length2":17}]],"length":49962,"saved":false}
{"ts":1363307595079,"patch":[[{"diffs":[[0," == 0) &"],[1,"&"],[0," $cacheC"]],"start1":27481,"start2":27481,"length1":16,"length2":17}]],"length":49963,"saved":false}
{"ts":1363307602092,"patch":[[{"diffs":[[0,"ache' &&"],[-1,"\n\t\t\t\t\t\t"],[0,"$pragma "]],"start1":27513,"start2":27513,"length1":23,"length2":16}]],"length":49956,"saved":false}
{"ts":1363307603925,"patch":[[{"diffs":[[0,"ache' &&"],[1," "],[0,"$pragma "]],"start1":27513,"start2":27513,"length1":16,"length2":17}]],"length":49957,"saved":false}
{"ts":1363307611455,"patch":[[{"diffs":[[0,"che' &&\n"],[-1,"\t\t\t\t\t"],[0,"\tisset($"]],"start1":27539,"start2":27539,"length1":21,"length2":16}]],"length":49952,"saved":false}
{"ts":1363307612920,"patch":[[{"diffs":[[0,"ache' &&"],[-1,"\n\t"],[0,"isset($t"]],"start1":27538,"start2":27538,"length1":18,"length2":16}]],"length":49950,"saved":false}
{"ts":1363307615519,"patch":[[{"diffs":[[0,"ache' &&"],[1," "],[0,"isset($t"]],"start1":27538,"start2":27538,"length1":16,"length2":17}]],"length":49951,"saved":false}
{"ts":1363307620694,"patch":[[{"diffs":[[0,"tnameHash]))"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\t$scrip"]],"start1":27578,"start2":27578,"length1":28,"length2":24}]],"length":49947,"saved":false}
{"ts":1363307623999,"patch":[[{"diffs":[[0,"eHash]))"],[1," "],[0,"{\n\t\t\t\t$s"]],"start1":27582,"start2":27582,"length1":16,"length2":17}]],"length":49948,"saved":false}
{"ts":1363307638244,"patch":[[{"diffs":[[0,"criptMTime;\n"],[1,"                    \n"],[0,"\t\t\t\t\tif ($sc"]],"start1":27137,"start2":27137,"length1":24,"length2":45}]],"length":49969,"saved":false}
{"ts":1363307641874,"patch":[[{"diffs":[[0,"\t\t\t\t}\n\t\t\t\t}\n"],[1,"                \n"],[0,"\t\t\t}\n\t\t\t// O"]],"start1":27324,"start2":27324,"length1":24,"length2":41}]],"length":49986,"saved":false}
{"ts":1363307643452,"patch":[[{"diffs":[[0,"            "],[1,"#"],[0,"\n\t\t\t}\n\t\t\t// "]],"start1":27340,"start2":27340,"length1":24,"length2":25}]],"length":49987,"saved":false}
{"ts":1363307648360,"patch":[[{"diffs":[[0,"\t\t//"],[-1," Otherwise detect 'Cache-Control' or 'Pragma' (strong) validators (http1.0/http1.1)"],[0,"\n\t\t\t"]],"start1":27360,"start2":27360,"length1":91,"length2":8}]],"length":49904,"saved":false}
{"ts":1363307650780,"patch":[[{"diffs":[[0,"       #"],[1," Otherwise detect 'Cache-Control' or 'Pragma' (strong) validators (http1.0/http1.1)"],[0,"\n\t\t\t}\n\t\t"]],"start1":27345,"start2":27345,"length1":16,"length2":99}]],"length":49987,"saved":false}
{"ts":1363307653416,"patch":[[{"diffs":[[0,"\t\t}\n"],[-1,"\t\t\t//\n"],[0,"\t\t\te"]],"start1":27438,"start2":27438,"length1":14,"length2":8}]],"length":49981,"saved":false}
{"ts":1363307655891,"patch":[[{"diffs":[[0,"ttp1.1)\n\t\t\t}"],[-1,"\n\t"],[0,"\t\telse if (("]],"start1":27429,"start2":27429,"length1":26,"length2":24}]],"length":49979,"saved":false}
{"ts":1363307657442,"patch":[[{"diffs":[[0,".1)\n\t\t\t}"],[-1,"\t\t"],[0,"else if "]],"start1":27433,"start2":27433,"length1":18,"length2":16}]],"length":49977,"saved":false}
{"ts":1363307659090,"patch":[[{"diffs":[[0,".1)\n\t\t\t}"],[1," "],[0,"else if "]],"start1":27433,"start2":27433,"length1":16,"length2":17}]],"length":49978,"saved":false}
{"ts":1363307664145,"patch":[[{"diffs":[[0,"PT_NAME']);\n"],[1,"                \n"],[0,"\t\t\t\tif ($thi"]],"start1":27710,"start2":27710,"length1":24,"length2":41}]],"length":49995,"saved":false}
{"ts":1363307667947,"patch":[[{"diffs":[[0,"tMTime)\n"],[-1,"\t\t\t\t"],[0,"{\n\t\t\t\t\t/"]],"start1":27792,"start2":27792,"length1":20,"length2":16}]],"length":49991,"saved":false}
{"ts":1363307669467,"patch":[[{"diffs":[[0,"ptMTime)"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\t\t/"]],"start1":27791,"start2":27791,"length1":17,"length2":17}]],"length":49991,"saved":false}
{"ts":1363307676302,"patch":[[{"diffs":[[0,"he = true;\n\t\t\t\t}"],[-1,"\n\t\t\t\t"],[0,"else\n\t\t\t\t{\n\t\t\t\t\t"]],"start1":27897,"start2":27897,"length1":37,"length2":32}]],"length":49986,"saved":false}
{"ts":1363307677762,"patch":[[{"diffs":[[0,"e;\n\t\t\t\t}"],[1," "],[0,"else\n\t\t\t"]],"start1":27905,"start2":27905,"length1":16,"length2":17}]],"length":49987,"saved":false}
{"ts":1363307680112,"patch":[[{"diffs":[[0,";\n\t\t\t\t} else"],[-1,"\n\t\t\t\t"],[1," "],[0,"{\n\t\t\t\t\t// Fi"]],"start1":27906,"start2":27906,"length1":29,"length2":25}]],"length":49983,"saved":false}
{"ts":1363307683469,"patch":[[{"diffs":[[0,"Time;\n\t\t\t\t}\n"],[1,"                \n"],[0,"\t\t\t\tclearsta"]],"start1":28029,"start2":28029,"length1":24,"length2":41}]],"length":50000,"saved":false}
{"ts":1363307690910,"patch":[[{"diffs":[[0,"seCache)"],[-1,"\n\t\t"],[1," "],[0,"{\t\t\t\t\n\t\t"]],"start1":28098,"start2":28098,"length1":19,"length2":17}]],"length":49998,"saved":false}
{"ts":1363307695209,"patch":[[{"diffs":[[0,"ders());\n\t\t}"],[-1,"\n\t\t"],[0,"else\n\t\t{\n\t\t\t"]],"start1":28168,"start2":28168,"length1":27,"length2":24}]],"length":49995,"saved":false}
{"ts":1363307696786,"patch":[[{"diffs":[[0,"());\n\t\t}"],[1," "],[0,"else\n\t\t{"]],"start1":28172,"start2":28172,"length1":16,"length2":17}]],"length":49996,"saved":false}
{"ts":1363307698618,"patch":[[{"diffs":[[0,"));\n\t\t} else"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$script"]],"start1":28173,"start2":28173,"length1":27,"length2":25}]],"length":49994,"saved":false}
{"ts":1363307703259,"patch":[[{"diffs":[[0,"ANGE']))"],[-1,"\n\t\t\t"],[1," "],[0,"{\n\t\t\t\tco"]],"start1":28456,"start2":28456,"length1":20,"length2":17}]],"length":49991,"saved":false}
{"ts":1363307709480,"patch":[[{"diffs":[[0,"tByte);\n\t\t\t}"],[-1,"\n\t\t\t"],[0,"else\n\t\t\t{\n\t\t"]],"start1":28929,"start2":28929,"length1":28,"length2":24}]],"length":49987,"saved":false}
{"ts":1363307711165,"patch":[[{"diffs":[[0,"e);\n\t\t\t}"],[1," "],[0,"else\n"],[-1,"\t"],[0,"\t\t{\n\t\t\t\t"]],"start1":28933,"start2":28933,"length1":22,"length2":22}]],"length":49987,"saved":false}
{"ts":1363307712728,"patch":[[{"diffs":[[0,");\n\t\t\t} else"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t\t$r->ad"]],"start1":28934,"start2":28934,"length1":27,"length2":25}]],"length":49985,"saved":false}
{"ts":1363307718183,"patch":[[{"diffs":[[0,"eHash]))"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\t$t"]],"start1":29281,"start2":29281,"length1":20,"length2":16}]],"length":49981,"saved":false}
{"ts":1363307719610,"patch":[[{"diffs":[[0,"eHash]))"],[1," "],[0,"{\n\t\t\t\t$t"]],"start1":29281,"start2":29281,"length1":16,"length2":17}]],"length":49982,"saved":false}
{"ts":1363307723294,"patch":[[{"diffs":[[0,"e;\n\t\t\t}\n"],[1,"            \n"],[0,"\t\t\tclear"]],"start1":29345,"start2":29345,"length1":16,"length2":29}]],"length":49995,"saved":false}
{"ts":1363307728696,"patch":[[{"diffs":[[0,"ON'], $matches))"],[-1,"\n\t\t"],[0,"{\n\t\t\t// Digest m"]],"start1":29576,"start2":29576,"length1":35,"length2":32}]],"length":49992,"saved":false}
{"ts":1363307730222,"patch":[[{"diffs":[[0,"atches))"],[1," "],[0,"{\n\t\t\t// "]],"start1":29584,"start2":29584,"length1":16,"length2":17}]],"length":49993,"saved":false}
{"ts":1363307735975,"patch":[[{"diffs":[[0," => $b)\n"],[-1,"\t\t\t"],[0,"{\n\t\t\t\tfo"]],"start1":29726,"start2":29726,"length1":19,"length2":16}]],"length":49990,"saved":false}
{"ts":1363307737450,"patch":[[{"diffs":[[0,"a => $b)"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\tfo"]],"start1":29725,"start2":29725,"length1":17,"length2":17}]],"length":49990,"saved":false}
{"ts":1363307739671,"patch":[[{"diffs":[[0,"as $k => $v)"],[1," {"],[0,"\n\t\t\t\t\t$info["]],"start1":29752,"start2":29752,"length1":24,"length2":26}]],"length":49992,"saved":false}
{"ts":1363307742173,"patch":[[{"diffs":[[0,"', $v);\n"],[1,"\t\t\t\t}\n"],[0,"\t\t\t}\n\t\t\t"]],"start1":29816,"start2":29816,"length1":16,"length2":22}]],"length":49998,"saved":false}
{"ts":1363307758793,"patch":[[{"diffs":[[0,"'username']) ||\n"],[-1,"\t\t\t\t"],[0,"!isset($info['re"]],"start1":29900,"start2":29900,"length1":36,"length2":32}]],"length":49994,"saved":false}
{"ts":1363307760272,"patch":[[{"diffs":[[0,"me']) ||"],[-1,"\n"],[1," "],[0,"!isset($"]],"start1":29907,"start2":29907,"length1":17,"length2":17}]],"length":49994,"saved":false}
{"ts":1363307772969,"patch":[[{"diffs":[[0,"fo['nc']) ||"],[-1,"\n\t\t\t\t"],[0,"!isset($info"]],"start1":30106,"start2":30106,"length1":29,"length2":24}]],"length":49989,"saved":false}
{"ts":1363307774700,"patch":[[{"diffs":[[0,"nc']) ||"],[1," "],[0,"!isset($"]],"start1":30110,"start2":30110,"length1":16,"length2":17}]],"length":49990,"saved":false}
{"ts":1363307776868,"patch":[[{"diffs":[[0,"o['qop']) ||"],[-1,"\n"],[0,"\t\t\t\t!isset($"]],"start1":30079,"start2":30079,"length1":25,"length2":24}]],"length":49989,"saved":false}
{"ts":1363307778993,"patch":[[{"diffs":[[0,"op']) ||"],[-1,"\t\t\t"],[0,"\t!isset("]],"start1":30083,"start2":30083,"length1":19,"length2":16}]],"length":49986,"saved":false}
{"ts":1363307783575,"patch":[[{"diffs":[[0,"opaque']) ||"],[-1,"\n\t\t"],[0,"\t\t!isset($in"]],"start1":30051,"start2":30051,"length1":27,"length2":24}]],"length":49983,"saved":false}
{"ts":1363307785131,"patch":[[{"diffs":[[0,"ue']) ||"],[-1,"\t\t"],[1," "],[0,"!isset($"]],"start1":30055,"start2":30055,"length1":18,"length2":17}]],"length":49982,"saved":false}
{"ts":1363307790174,"patch":[[{"diffs":[[0,"'nonce']) ||"],[-1,"\n\t\t"],[0,"\t\t!isset($in"]],"start1":29959,"start2":29959,"length1":27,"length2":24}]],"length":49979,"saved":false}
{"ts":1363307791644,"patch":[[{"diffs":[[0,"ce']) ||"],[-1,"\t\t"],[0,"!isset($"]],"start1":29963,"start2":29963,"length1":18,"length2":16}]],"length":49977,"saved":false}
{"ts":1363307793486,"patch":[[{"diffs":[[0,"ce']) ||"],[1," "],[0,"!isset($"]],"start1":29963,"start2":29963,"length1":16,"length2":17}]],"length":49978,"saved":false}
{"ts":1363307799272,"patch":[[{"diffs":[[0,"o['uri']) ||"],[-1,"\n\t\t"],[0,"\t\t!isset($in"]],"start1":29983,"start2":29983,"length1":27,"length2":24}]],"length":49975,"saved":false}
{"ts":1363307800874,"patch":[[{"diffs":[[0,"ri']) ||"],[-1,"\t\t"],[0,"!isset($"]],"start1":29987,"start2":29987,"length1":18,"length2":16}]],"length":49973,"saved":false}
{"ts":1363307802669,"patch":[[{"diffs":[[0,"ri']) ||"],[1," "],[0,"!isset($"]],"start1":29987,"start2":29987,"length1":16,"length2":17}]],"length":49974,"saved":false}
{"ts":1363307809185,"patch":[[{"diffs":[[0,"sponse']) ||"],[-1,"\n\t\t\t\t"],[0,"!isset($info"]],"start1":30012,"start2":30012,"length1":29,"length2":24}]],"length":49969,"saved":false}
{"ts":1363307811051,"patch":[[{"diffs":[[0,"se']) ||"],[1," "],[0,"!isset($"]],"start1":30016,"start2":30016,"length1":16,"length2":17}]],"length":49970,"saved":false}
{"ts":1363307813546,"patch":[[{"diffs":[[0,"lm']) ||"],[-1,"\n\t"],[0,"\t\t\t!isse"]],"start1":29933,"start2":29933,"length1":18,"length2":16}]],"length":49968,"saved":false}
{"ts":1363307815189,"patch":[[{"diffs":[[0,"lm']) ||"],[-1,"\t\t"],[0,"\t!isset("]],"start1":29933,"start2":29933,"length1":18,"length2":16}]],"length":49966,"saved":false}
{"ts":1363307816660,"patch":[[{"diffs":[[0,"'realm']) ||"],[-1,"\t"],[0,"!isset($info"]],"start1":29929,"start2":29929,"length1":25,"length2":24}]],"length":49965,"saved":false}
{"ts":1363307818174,"patch":[[{"diffs":[[0,"lm']) ||"],[1," "],[0,"!isset($"]],"start1":29933,"start2":29933,"length1":16,"length2":17}]],"length":49966,"saved":false}
{"ts":1363307823528,"patch":[[{"diffs":[[0,"once']))\n\t\t\t"],[-1,"\t"],[1,"\n            "],[0,"return false"]],"start1":30111,"start2":30111,"length1":25,"length2":37}]],"length":49978,"saved":false}
{"ts":1363307825379,"patch":[[{"diffs":[[0,"']))\n\t\t\t"],[1,"{"],[0,"\n       "]],"start1":30115,"start2":30115,"length1":16,"length2":17}]],"length":49979,"saved":false}
{"ts":1363307827871,"patch":[[{"diffs":[[0,"eturn false;"],[1,"\n\t\t\t}"],[0,"\n\n\t\t\t//  Che"]],"start1":30138,"start2":30138,"length1":24,"length2":29}]],"length":49984,"saved":false}
{"ts":1363307830159,"patch":[[{"diffs":[[0,"        "],[1,"    "],[0,"return f"]],"start1":30129,"start2":30129,"length1":16,"length2":20}]],"length":49988,"saved":false}
{"ts":1363307832527,"patch":[[{"diffs":[[0,"once']))"],[-1,"\n\t\t\t"],[0,"{\n      "]],"start1":30111,"start2":30111,"length1":20,"length2":16}]],"length":49984,"saved":false}
{"ts":1363307834237,"patch":[[{"diffs":[[0,"once']))"],[1," "],[0,"{\n      "]],"start1":30111,"start2":30111,"length1":16,"length2":17}]],"length":49985,"saved":false}
{"ts":1363307842808,"patch":[[{"diffs":[[0,"['nonce'])))"],[1," {"],[0,"\n\t\t\t\treturn "]],"start1":30293,"start2":30293,"length1":24,"length2":26}]],"length":49987,"saved":false}
{"ts":1363307844486,"patch":[[{"diffs":[[0,"\t\treturn false;\n"],[1,"\t\t\t}\n"],[0,"\t\t\tif ($nonceInf"]],"start1":30310,"start2":30310,"length1":32,"length2":37}]],"length":49992,"saved":false}
{"ts":1363307846261,"patch":[[{"diffs":[[0,"e;\n\t\t\t}\n"],[1,"            \n"],[0,"\t\t\tif ($"]],"start1":30323,"start2":30323,"length1":16,"length2":29}]],"length":50005,"saved":false}
{"ts":1363307848724,"patch":[[{"diffs":[[0,"o['nc'])"],[1,"{"],[0,"\n\t\t\t\tret"]],"start1":30372,"start2":30372,"length1":16,"length2":17}]],"length":50006,"saved":false}
{"ts":1363307850722,"patch":[[{"diffs":[[0,"o['nc'])"],[1," "],[0,"{\n\t\t\t\tre"]],"start1":30372,"start2":30372,"length1":16,"length2":17}]],"length":50007,"saved":false}
{"ts":1363307852402,"patch":[[{"diffs":[[0,"turn false;\n"],[1,"\t\t\t}\n"],[0,"\t\t\tif (!isse"]],"start1":30389,"start2":30389,"length1":24,"length2":29}]],"length":50012,"saved":false}
{"ts":1363307855172,"patch":[[{"diffs":[[0,"e;\n\t\t\t}\n"],[1,"            \n"],[0,"\t\t\tif (!"]],"start1":30398,"start2":30398,"length1":16,"length2":29}]],"length":50025,"saved":false}
{"ts":1363307859495,"patch":[[{"diffs":[[0,"nfo[2]))"],[1," {"],[0,"\n\t\t\t\tret"]],"start1":30440,"start2":30440,"length1":16,"length2":18}]],"length":50027,"saved":false}
{"ts":1363307861122,"patch":[[{"diffs":[[0," false;\n"],[1,"\t\t\t}\n"],[0,"\t\t\tif ($"]],"start1":30461,"start2":30461,"length1":16,"length2":21}]],"length":50032,"saved":false}
{"ts":1363307862842,"patch":[[{"diffs":[[0,"e;\n\t\t\t}\n"],[1,"            \n"],[0,"\t\t\tif ($"]],"start1":30466,"start2":30466,"length1":16,"length2":29}]],"length":50045,"saved":false}
{"ts":1363307867929,"patch":[[{"diffs":[[0,"o['opaque'])"],[1," {"],[0,"\n\t\t\t\treturn "]],"start1":30515,"start2":30515,"length1":24,"length2":26}]],"length":50047,"saved":false}
{"ts":1363307869493,"patch":[[{"diffs":[[0,"alse;\t\t\n"],[1,"                \n"],[0,"\t\t\t\t\t\t\n\t"]],"start1":30542,"start2":30542,"length1":16,"length2":33}]],"length":50064,"saved":false}
{"ts":1363307871176,"patch":[[{"diffs":[[0,"alse;\t\t\n"],[-1,"                "],[1,"\t\t\t}"],[0,"\n\t\t\t\t\t\t\n"]],"start1":30542,"start2":30542,"length1":32,"length2":20}]],"length":50052,"saved":false}
{"ts":1363307873009,"patch":[[{"diffs":[[0,"n false;"],[-1,"\t\t"],[0,"\n\t\t\t}\n\t\t"]],"start1":30539,"start2":30539,"length1":18,"length2":16}]],"length":50050,"saved":false}
{"ts":1363307880627,"patch":[[{"diffs":[[0,"ame'])))"],[1," {"],[0,"\n\t\t\t\tret"]],"start1":30645,"start2":30645,"length1":16,"length2":18}]],"length":50052,"saved":false}
{"ts":1363307882486,"patch":[[{"diffs":[[0," false;\n"],[1,"\t\t\t}\n"],[0,"\t\t\t$ha2 "]],"start1":30666,"start2":30666,"length1":16,"length2":21}]],"length":50057,"saved":false}
{"ts":1363307885186,"patch":[[{"diffs":[[0,"e;\n\t\t\t}\n"],[1,"            \n"],[0,"\t\t\t$ha2 "]],"start1":30671,"start2":30671,"length1":16,"length2":29}]],"length":50070,"saved":false}
{"ts":1363307889681,"patch":[[{"diffs":[[0,"'.$ha2);\n\t\t\t"],[1,"\n            "],[0,"if ($respons"]],"start1":30868,"start2":30868,"length1":24,"length2":37}]],"length":50083,"saved":false}
{"ts":1363307891892,"patch":[[{"diffs":[[0,"ponse'])"],[1," {"],[0,"\n\t\t\t\tret"]],"start1":30920,"start2":30920,"length1":16,"length2":18}]],"length":50085,"saved":false}
{"ts":1363307893486,"patch":[[{"diffs":[[0,"\t\treturn false;\n"],[1,"            }\n"],[0,"\t\t\t\n\t\t\t// Valida"]],"start1":30933,"start2":30933,"length1":32,"length2":46}]],"length":50099,"saved":false}
{"ts":1363308057467,"patch":[[{"diffs":[[0,"rname'];\n\t\t}"],[-1,"\n\t\t"],[0,"else if (pre"]],"start1":31105,"start2":31105,"length1":27,"length2":24}]],"length":50096,"saved":false}
{"ts":1363308058921,"patch":[[{"diffs":[[0,"e'];\n\t\t}"],[1," "],[0,"else if "]],"start1":31109,"start2":31109,"length1":16,"length2":17}]],"length":50097,"saved":false}
{"ts":1363308064000,"patch":[[{"diffs":[[0,"atches))"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t// "]],"start1":31208,"start2":31208,"length1":19,"length2":17}]],"length":50095,"saved":false}
{"ts":1363308067919,"patch":[[{"diffs":[[0,"[1];\n\t\t}"],[-1,"\n\t"],[0,"\telse\n\t\t"]],"start1":31528,"start2":31528,"length1":18,"length2":16}]],"length":50093,"saved":false}
{"ts":1363308069497,"patch":[[{"diffs":[[0,"[1];\n\t\t}"],[-1,"\t"],[1," "],[0,"else\n\t\t{"]],"start1":31528,"start2":31528,"length1":17,"length2":17}]],"length":50093,"saved":false}
{"ts":1363308072336,"patch":[[{"diffs":[[0,"\t\t} else"],[-1,"\n\t\t"],[0,"{\n\t\t\t// "]],"start1":31533,"start2":31533,"length1":19,"length2":16}]],"length":50090,"saved":false}
{"ts":1363308074032,"patch":[[{"diffs":[[0,"\t\t} else"],[1," "],[0,"{\n\t\t\t// "]],"start1":31533,"start2":31533,"length1":16,"length2":17}]],"length":50091,"saved":false}
{"ts":1363308077361,"patch":[[{"diffs":[[0,"es[1]), 2);\n"],[1,"            \n"],[0,"\t\t\tif (count"]],"start1":31282,"start2":31282,"length1":24,"length2":37}]],"length":50104,"saved":false}
{"ts":1363308079718,"patch":[[{"diffs":[[0,", $auth[1]))"],[1," {"],[0,"\n\t\t\t\treturn "]],"start1":31378,"start2":31378,"length1":24,"length2":26}]],"length":50106,"saved":false}
{"ts":1363308081309,"patch":[[{"diffs":[[0,"turn false;\n"],[1,"\t\t\t}\n"],[0,"\t\t\t\n\t\t\t// Va"]],"start1":31399,"start2":31399,"length1":24,"length2":29}]],"length":50111,"saved":false}
{"ts":1363308091349,"patch":[[{"diffs":[[0,"ion']))\n"],[-1,"\t\t"],[0,"{\n\t\t\tcas"]],"start1":31833,"start2":31833,"length1":18,"length2":16}]],"length":50109,"saved":false}
{"ts":1363308093534,"patch":[[{"diffs":[[0,"tream';\n"],[1,"        \n"],[0,"\t\tswitch"]],"start1":31788,"start2":31788,"length1":16,"length2":25},{"diffs":[[0,"sion']))"],[-1,"\n"],[1," "],[0,"{\n\t\t\tcas"]],"start1":31841,"start2":31841,"length1":17,"length2":17}]],"length":50118,"saved":false}
{"ts":1363308111477,"patch":[[{"diffs":[[0,"in';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'html' :"]],"start1":31893,"start2":31893,"length1":33,"length2":32}]],"length":50117,"saved":false}
{"ts":1363308114419,"patch":[[{"diffs":[[0,"ml';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'css' :\n"]],"start1":31984,"start2":31984,"length1":33,"length2":32}]],"length":50116,"saved":false}
{"ts":1363308116099,"patch":[[{"diffs":[[0,"ss';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'xml' :\n"]],"start1":32039,"start2":32039,"length1":33,"length2":32}]],"length":50115,"saved":false}
{"ts":1363308118532,"patch":[[{"diffs":[[0,"ml';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'gif' :\n"]],"start1":32094,"start2":32094,"length1":33,"length2":32},{"diffs":[[0,"if';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'jpeg' :"]],"start1":32150,"start2":32150,"length1":33,"length2":32}]],"length":50113,"saved":false}
{"ts":1363308121222,"patch":[[{"diffs":[[0,"eg';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'png' :\n"]],"start1":32224,"start2":32224,"length1":33,"length2":32}]],"length":50112,"saved":false}
{"ts":1363308124367,"patch":[[{"diffs":[[0,"ng';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'tif' :\n"]],"start1":32280,"start2":32280,"length1":33,"length2":32}]],"length":50111,"saved":false}
{"ts":1363308129032,"patch":[[{"diffs":[[0,"ff';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'wbmp' :"]],"start1":32354,"start2":32354,"length1":33,"length2":32}]],"length":50110,"saved":false}
{"ts":1363308136438,"patch":[[{"diffs":[[0,"mp';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'bmp' :\n"]],"start1":32420,"start2":32420,"length1":33,"length2":32}]],"length":50109,"saved":false}
{"ts":1363308138753,"patch":[[{"diffs":[[0,"mp';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'svg' :\n"]],"start1":32481,"start2":32481,"length1":33,"length2":32}]],"length":50108,"saved":false}
{"ts":1363308141665,"patch":[[{"diffs":[[0,"ml';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'ico' :\n"]],"start1":32541,"start2":32541,"length1":33,"length2":32}]],"length":50107,"saved":false}
{"ts":1363308143458,"patch":[[{"diffs":[[0,"on';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'js' :\n\t"]],"start1":32600,"start2":32600,"length1":33,"length2":32}]],"length":50106,"saved":false}
{"ts":1363308145275,"patch":[[{"diffs":[[0,"pt';\n\t\t\t\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase 'atom' :"]],"start1":32670,"start2":32670,"length1":33,"length2":32},{"diffs":[[0,"\tbreak;\n"],[-1,"\n"],[0,"\t\t\tcase "]],"start1":32746,"start2":32746,"length1":17,"length2":16}]],"length":50104,"saved":false}
{"ts":1363308147847,"patch":[[{"diffs":[[0,"\t\t\tbreak;\n\t\t"],[-1,"}"],[0,"\n\t\treturn $m"]],"start1":32810,"start2":32810,"length1":25,"length2":24}]],"length":50103,"saved":false}
{"ts":1363308149900,"patch":[[{"diffs":[[0,"\t\t\tbreak;\n\t\t"],[1,"}"],[0,"\n\t\treturn $m"]],"start1":32810,"start2":32810,"length1":24,"length2":25}]],"length":50104,"saved":false}
{"ts":1363308153900,"patch":[[{"diffs":[[0,"\tbreak;\n\t\t}\n"],[1,"        \n"],[0,"\t\treturn $mi"]],"start1":32812,"start2":32812,"length1":24,"length2":33}]],"length":50113,"saved":false}
{"ts":1363308163202,"patch":[[{"diffs":[[0,"ile() == '')"],[1," {"],[0,"\n\t\t\treturn;\n"]],"start1":32934,"start2":32934,"length1":24,"length2":26}]],"length":50115,"saved":false}
{"ts":1363308164998,"patch":[[{"diffs":[[0,"\n\t\t\treturn;\n"],[1,"\t\t}\n"],[0,"\t\t\n\t\t$logLin"]],"start1":32948,"start2":32948,"length1":24,"length2":28}]],"length":50119,"saved":false}
{"ts":1363308179796,"patch":[[{"diffs":[[0,"Files as $v)"],[1," {"],[0,"\n\t\t\tunlink($"]],"start1":34288,"start2":34288,"length1":24,"length2":26}]],"length":50121,"saved":false}
{"ts":1363308181609,"patch":[[{"diffs":[[0,"nk($v);\n"],[1,"\t\t}\n"],[0,"\t}\n\n\tpub"]],"start1":34310,"start2":34310,"length1":16,"length2":20}]],"length":50125,"saved":false}
{"ts":1363308189211,"patch":[[{"diffs":[[0,"ST_SIZE)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$th"]],"start1":34647,"start2":34647,"length1":19,"length2":17}]],"length":50123,"saved":false}
{"ts":1363308194406,"patch":[[{"diffs":[[0,">hasHeaders)"],[-1,"\n\t\t"],[0,"{\n\t\t\tif (!$t"]],"start1":34921,"start2":34921,"length1":27,"length2":24}]],"length":50120,"saved":false}
{"ts":1363308196433,"patch":[[{"diffs":[[0,"Headers)"],[1," "],[0,"{\n\t\t\tif "]],"start1":34925,"start2":34925,"length1":16,"length2":17}]],"length":50121,"saved":false}
{"ts":1363308199852,"patch":[[{"diffs":[[0,"ders())\n"],[-1,"\t\t\t"],[0,"{\n\t\t\t\tif"]],"start1":34959,"start2":34959,"length1":19,"length2":16}]],"length":50118,"saved":false}
{"ts":1363308201739,"patch":[[{"diffs":[[0,"aders())"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\tif"]],"start1":34958,"start2":34958,"length1":17,"length2":17}]],"length":50118,"saved":false}
{"ts":1363308205933,"patch":[[{"diffs":[[0,">errNo == 0)"],[1," {"],[0,"\n\t\t\t\t\t$this-"]],"start1":34983,"start2":34983,"length1":24,"length2":26}]],"length":50120,"saved":false}
{"ts":1363308208023,"patch":[[{"diffs":[[0,"rrNo = 400;\n"],[1,"\t\t\t\t}\n"],[0,"\t\t\t\treturn f"]],"start1":35011,"start2":35011,"length1":24,"length2":30}]],"length":50126,"saved":false}
{"ts":1363308209854,"patch":[[{"diffs":[[0," 400;\n\t\t\t\t}\n"],[1,"                \n"],[0,"\t\t\t\treturn f"]],"start1":35017,"start2":35017,"length1":24,"length2":41}]],"length":50143,"saved":false}
{"ts":1363308214481,"patch":[[{"diffs":[[0,"Headers)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t// "]],"start1":35318,"start2":35318,"length1":19,"length2":17}]],"length":50141,"saved":false}
{"ts":1363308217436,"patch":[[{"diffs":[[0," 'POST')"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\t//"]],"start1":35440,"start2":35440,"length1":20,"length2":16}]],"length":50137,"saved":false}
{"ts":1363308219173,"patch":[[{"diffs":[[0," 'POST')"],[1," "],[0,"{\n\t\t\t\t//"]],"start1":35440,"start2":35440,"length1":16,"length2":17}]],"length":50138,"saved":false}
{"ts":1363308221563,"patch":[[{"diffs":[[0,"-Length']))\n"],[-1,"\t\t\t\t"],[0,"{\n\t\t\t\t\t$this"]],"start1":35553,"start2":35553,"length1":28,"length2":24}]],"length":50134,"saved":false}
{"ts":1363308223797,"patch":[[{"diffs":[[0,"ngth']))"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":35556,"start2":35556,"length1":17,"length2":17}]],"length":50134,"saved":false}
{"ts":1363308227679,"patch":[[{"diffs":[[0,"alse;\n\t\t\t\t}\n"],[1,"                \n"],[0,"\t\t\t\t$content"]],"start1":35605,"start2":35605,"length1":24,"length2":41}]],"length":50151,"saved":false}
{"ts":1363308229440,"patch":[[{"diffs":[[0,") : '';\n\t\t\t\t"],[1,"\n                "],[0,"if (!$conten"]],"start1":35747,"start2":35747,"length1":24,"length2":41}]],"length":50168,"saved":false}
{"ts":1363308233057,"patch":[[{"diffs":[[0,"data'))\n"],[-1,"\t\t\t"],[0,"\t{\n\t\t\t\t\t"]],"start1":35923,"start2":35923,"length1":19,"length2":16}]],"length":50165,"saved":false}
{"ts":1363308234981,"patch":[[{"diffs":[[0,"-data'))"],[-1,"\n\t"],[0,"{\n\t\t\t\t\t$"]],"start1":35922,"start2":35922,"length1":18,"length2":16}]],"length":50163,"saved":false}
{"ts":1363308236722,"patch":[[{"diffs":[[0,"-data'))"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":35922,"start2":35922,"length1":16,"length2":17}]],"length":50164,"saved":false}
{"ts":1363308240957,"patch":[[{"diffs":[[0,"' &&"],[-1,"\n\t\t\t\t\t "],[0,"$con"]],"start1":35867,"start2":35867,"length1":15,"length2":8}]],"length":50157,"saved":false}
{"ts":1363308242847,"patch":[[{"diffs":[[0,"oded' &&"],[1," "],[0,"$content"]],"start1":35863,"start2":35863,"length1":16,"length2":17}]],"length":50158,"saved":false}
{"ts":1363308246715,"patch":[[{"diffs":[[0,"ype || \n"],[-1,"\t\t\t\t\t"],[0,"($conten"]],"start1":35790,"start2":35790,"length1":21,"length2":16}]],"length":50153,"saved":false}
{"ts":1363308248535,"patch":[[{"diffs":[[0,"Type || "],[-1,"\n"],[1," "],[0,"($conten"]],"start1":35789,"start2":35789,"length1":17,"length2":17}]],"length":50153,"saved":false}
{"ts":1363308250723,"patch":[[{"diffs":[[0,"tType ||"],[-1," "],[0," ($conte"]],"start1":35788,"start2":35788,"length1":17,"length2":16}]],"length":50152,"saved":false}
{"ts":1363308256957,"patch":[[{"diffs":[[0,"wInput))"],[-1,"\n\t\t\t\t"],[0,"{\n\t\t\t\t\t/"]],"start1":36244,"start2":36244,"length1":21,"length2":16}]],"length":50147,"saved":false}
{"ts":1363308258786,"patch":[[{"diffs":[[0,"wInput))"],[1," "],[0,"{\n\t\t\t\t\t/"]],"start1":36244,"start2":36244,"length1":16,"length2":17}]],"length":50148,"saved":false}
{"ts":1363308263577,"patch":[[{"diffs":[[0,"ncoded')"],[1," {"],[0,"\n\t\t\t\t\t$t"]],"start1":36572,"start2":36572,"length1":16,"length2":18}]],"length":50150,"saved":false}
{"ts":1363308271477,"patch":[[{"diffs":[[0,"Length']));\n"],[1,"                    {\n"],[0,"\t\t\t\telse if "]],"start1":36662,"start2":36662,"length1":24,"length2":46}]],"length":50172,"saved":false}
{"ts":1363308273698,"patch":[[{"diffs":[[0,"        "],[-1,"{"],[0,"\n\t\t\t\tels"]],"start1":36686,"start2":36686,"length1":17,"length2":16}]],"length":50171,"saved":false}
{"ts":1363308275266,"patch":[[{"diffs":[[0,"th']));\n"],[-1,"                    "],[1,"\t\t\t\t}"],[0,"\n\t\t\t\tels"]],"start1":36666,"start2":36666,"length1":36,"length2":21}]],"length":50156,"saved":false}
{"ts":1363308281145,"patch":[[{"diffs":[[0,"m-data')"],[-1,"\n\t\t\t\t"],[0,"{\n\t\t\t\t\ti"]],"start1":36736,"start2":36736,"length1":21,"length2":16}]],"length":50151,"saved":false}
{"ts":1363308282890,"patch":[[{"diffs":[[0,"m-data')"],[1," "],[0,"{\n\t\t\t\t\ti"]],"start1":36736,"start2":36736,"length1":16,"length2":17}]],"length":50152,"saved":false}
{"ts":1363308286158,"patch":[[{"diffs":[[0,"']));\n\t\t\t\t}\n"],[-1,"\t\t\t\t"],[0,"else if ($co"]],"start1":36668,"start2":36668,"length1":28,"length2":24}]],"length":50148,"saved":false}
{"ts":1363308288244,"patch":[[{"diffs":[[0,");\n\t\t\t\t}"],[-1,"\n"],[1," "],[0,"else if "]],"start1":36671,"start2":36671,"length1":17,"length2":17}]],"length":50148,"saved":false}
{"ts":1363308292447,"patch":[[{"diffs":[[0,"dary'][1]))\n"],[-1,"\t\t\t\t\t"],[0,"{\n\t\t\t\t\t\t$thi"]],"start1":36813,"start2":36813,"length1":29,"length2":24}]],"length":50143,"saved":false}
{"ts":1363308294274,"patch":[[{"diffs":[[0,"y'][1]))"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\t\t\t"]],"start1":36816,"start2":36816,"length1":17,"length2":17}]],"length":50143,"saved":false}
{"ts":1363308306619,"patch":[[{"diffs":[[0,"gth']);\n\t\t\t}"],[-1,"\n\t\t\t"],[0,"else\n\t\t\t{\n\t\t"]],"start1":37050,"start2":37050,"length1":28,"length2":24}]],"length":50139,"saved":false}
{"ts":1363308308524,"patch":[[{"diffs":[[0,"]);\n\t\t\t}"],[1," "],[0,"else\n\t\t\t"]],"start1":37054,"start2":37054,"length1":16,"length2":17}]],"length":50140,"saved":false}
{"ts":1363308310304,"patch":[[{"diffs":[[0,");\n\t\t\t} else"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\t$this-"]],"start1":37055,"start2":37055,"length1":28,"length2":24}]],"length":50136,"saved":false}
{"ts":1363308311951,"patch":[[{"diffs":[[0,"\t\t} else"],[1," "],[0,"{\n\t\t\t\t$t"]],"start1":37059,"start2":37059,"length1":16,"length2":17}]],"length":50137,"saved":false}
{"ts":1363308324221,"patch":[[{"diffs":[[0,"ine\n\t\tdo"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t// "]],"start1":37661,"start2":37661,"length1":19,"length2":17}]],"length":50135,"saved":false}
{"ts":1363308327878,"patch":[[{"diffs":[[0,"= false)"],[-1,"\n\t\t\t"],[1," "],[0,"{\n\t\t\t\t//"]],"start1":37761,"start2":37761,"length1":20,"length2":17}]],"length":50132,"saved":false}
{"ts":1363308331188,"patch":[[{"diffs":[[0,"uestUri)"],[-1,"\n\t\t\t\t"],[0,"{\n\t\t\t\t\t$"]],"start1":37843,"start2":37843,"length1":21,"length2":16}]],"length":50127,"saved":false}
{"ts":1363308333376,"patch":[[{"diffs":[[0,"uestUri)"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":37843,"start2":37843,"length1":16,"length2":17}]],"length":50128,"saved":false}
{"ts":1363308338352,"patch":[[{"diffs":[[0,"LENGTH)\n"],[-1,"\t\t\t\t"],[0,"\t{\n\t\t\t\t\t"]],"start1":37920,"start2":37920,"length1":20,"length2":16}]],"length":50124,"saved":false}
{"ts":1363308340109,"patch":[[{"diffs":[[0,"_LENGTH)"],[-1,"\n\t"],[0,"{\n\t\t\t\t\t\t"]],"start1":37919,"start2":37919,"length1":18,"length2":16}]],"length":50122,"saved":false}
{"ts":1363308341695,"patch":[[{"diffs":[[0,"_LENGTH)"],[1," "],[0,"{\n\t\t\t\t\t\t"]],"start1":37919,"start2":37919,"length1":16,"length2":17}]],"length":50123,"saved":false}
{"ts":1363308347203,"patch":[[{"diffs":[[0,"\\r\\n\");\n"],[1,"            \n"],[0,"\t\t\tif ($"]],"start1":37739,"start2":37739,"length1":16,"length2":29}]],"length":50136,"saved":false}
{"ts":1363308350162,"patch":[[{"diffs":[[0,"Input);\n"],[1,"                    \n"],[0,"\t\t\t\t\tif "]],"start1":37896,"start2":37896,"length1":16,"length2":37}]],"length":50157,"saved":false}
{"ts":1363308355165,"patch":[[{"diffs":[[0,"wInput))"],[-1,"\n\t\t\t\t\t"],[0,"{\n\t\t\t\t\t\t"]],"start1":38089,"start2":38089,"length1":22,"length2":16}]],"length":50151,"saved":false}
{"ts":1363308357005,"patch":[[{"diffs":[[0,"wInput))"],[1," "],[0,"{\n\t\t\t\t\t\t"]],"start1":38089,"start2":38089,"length1":16,"length2":17}]],"length":50152,"saved":false}
{"ts":1363308360615,"patch":[[{"diffs":[[0,"alse;\n\t\t\t\t\t}"],[-1,"\n\t\t\t\t\t"],[0,"else if ($le"]],"start1":38004,"start2":38004,"length1":30,"length2":24}]],"length":50146,"saved":false}
{"ts":1363308362499,"patch":[[{"diffs":[[0,";\n\t\t\t\t\t}"],[1," "],[0,"else if "]],"start1":38008,"start2":38008,"length1":16,"length2":17}]],"length":50147,"saved":false}
{"ts":1363308369560,"patch":[[{"diffs":[[0,"eturn true;\n\t\t\t}"],[-1,"\n\t\t\t"],[0,"else if ($pos =="]],"start1":38216,"start2":38216,"length1":36,"length2":32}]],"length":50143,"saved":false}
{"ts":1363308371299,"patch":[[{"diffs":[[0,"ue;\n\t\t\t}"],[1," "],[0,"else if "]],"start1":38224,"start2":38224,"length1":16,"length2":17},{"diffs":[[0," === 0)\n"],[-1,"\t"],[0,"\t\t{\n\t\t\t\t"]],"start1":38246,"start2":38246,"length1":17,"length2":16}]],"length":50143,"saved":false}
{"ts":1363308372951,"patch":[[{"diffs":[[0,"os === 0"],[-1,")\n\t\t"],[0,"{\n\t\t\t\t//"]],"start1":38244,"start2":38244,"length1":20,"length2":16}]],"length":50139,"saved":false}
{"ts":1363308376718,"patch":[[{"diffs":[[0,"os === 0"],[1,") "],[0,"{\n\t\t\t\t//"]],"start1":38244,"start2":38244,"length1":16,"length2":18}]],"length":50141,"saved":false}
{"ts":1363308380787,"patch":[[{"diffs":[[0,"Host']))"],[-1,"\n\t\t\t\t"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":38416,"start2":38416,"length1":21,"length2":17}]],"length":50137,"saved":false}
{"ts":1363308390089,"patch":[[{"diffs":[[0,"uestUri)"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\t//"]],"start1":38891,"start2":38891,"length1":20,"length2":16}]],"length":50133,"saved":false}
{"ts":1363308392033,"patch":[[{"diffs":[[0,"uestUri)"],[1," "],[0,"{\n\t\t\t\t//"]],"start1":38891,"start2":38891,"length1":16,"length2":17}]],"length":50134,"saved":false}
{"ts":1363308394213,"patch":[[{"diffs":[[0,"header))"],[-1,"\n\t\t\t\t"],[0,"{\n\t\t\t\t\ti"]],"start1":38984,"start2":38984,"length1":21,"length2":16}]],"length":50129,"saved":false}
{"ts":1363308395936,"patch":[[{"diffs":[[0,"header))"],[1," "],[0,"{\n\t\t\t\t\ti"]],"start1":38984,"start2":38984,"length1":16,"length2":17}]],"length":50130,"saved":false}
{"ts":1363308399051,"patch":[[{"diffs":[[0,"No == 0)"],[1," {"],[0,"\n\t\t\t\t\t\t$"]],"start1":39014,"start2":39014,"length1":16,"length2":18}]],"length":50132,"saved":false}
{"ts":1363308401410,"patch":[[{"diffs":[[0,"s->errNo = 400;\n"],[1,"\t\t\t\t\t}\n"],[0,"\t\t\t\t\treturn fals"]],"start1":39035,"start2":39035,"length1":32,"length2":39}]],"length":50139,"saved":false}
{"ts":1363308404949,"patch":[[{"diffs":[[0,"400;\n\t\t\t\t\t}\n"],[1,"                    \n"],[0,"\t\t\t\t\treturn "]],"start1":39046,"start2":39046,"length1":24,"length2":45}]],"length":50160,"saved":false}
{"ts":1363308408610,"patch":[[{"diffs":[[0,"alse;\n\t\t\t\t}\n"],[1,"                \n"],[0,"\t\t\t\t$this->h"]],"start1":39092,"start2":39092,"length1":24,"length2":41}]],"length":50177,"saved":false}
{"ts":1363308413286,"patch":[[{"diffs":[[0,"= true;\n\t\t\t}"],[-1,"\n\t\t\t"],[0,"else if (!$t"]],"start1":39146,"start2":39146,"length1":28,"length2":24}]],"length":50173,"saved":false}
{"ts":1363308414938,"patch":[[{"diffs":[[0,"ue;\n\t\t\t}"],[1," "],[0,"else if "]],"start1":39150,"start2":39150,"length1":16,"length2":17},{"diffs":[[0,"eaders)\n"],[-1,"\t\t"],[0,"\t{\n\t\t\t\ti"]],"start1":39180,"start2":39180,"length1":18,"length2":16}]],"length":50172,"saved":false}
{"ts":1363308416757,"patch":[[{"diffs":[[0,">hasHeaders)"],[-1,"\n\t"],[1," "],[0,"{\n\t\t\t\tif (st"]],"start1":39175,"start2":39175,"length1":26,"length2":25}]],"length":50171,"saved":false}
{"ts":1363308420272,"patch":[[{"diffs":[[0," false)\n"],[-1,"\t\t\t\t"],[0,"{\n\t\t\t\t\t$"]],"start1":39222,"start2":39222,"length1":20,"length2":16}]],"length":50167,"saved":false}
{"ts":1363308422194,"patch":[[{"diffs":[[0,"= false)"],[-1,"\n"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":39221,"start2":39221,"length1":17,"length2":17}]],"length":50167,"saved":false}
{"ts":1363308434282,"patch":[[{"diffs":[[0,"er, 2);\n"],[1,"                \n"],[0,"\t\t\t\tif ("]],"start1":39349,"start2":39349,"length1":16,"length2":33}]],"length":50184,"saved":false}
{"ts":1363308436514,"patch":[[{"diffs":[[0,"($exp) == 2)"],[1," {"],[0,"\n\t\t\t\t\t$this-"]],"start1":39387,"start2":39387,"length1":24,"length2":26}]],"length":50186,"saved":false}
{"ts":1363308439065,"patch":[[{"diffs":[[0,"m($exp[1]);\n"],[1,"\t\t\t\t}\n"],[0,"\t\t\t}\n\t\t} whi"]],"start1":39442,"start2":39442,"length1":24,"length2":30}]],"length":50192,"saved":false}
{"ts":1363308446901,"patch":[[{"diffs":[[0,"ile (true);\n"],[1,"        \n"],[0,"\t\treturn tru"]],"start1":39471,"start2":39471,"length1":24,"length2":33}]],"length":50201,"saved":false}
{"ts":1363308452307,"patch":[[{"diffs":[[0,"$header)"],[-1,"\n\t\t"],[0,"{\n\t\t\t$ex"]],"start1":39670,"start2":39670,"length1":19,"length2":16}]],"length":50198,"saved":false}
{"ts":1363308453998,"patch":[[{"diffs":[[0,"$header)"],[1," "],[0,"{\n\t\t\t$ex"]],"start1":39670,"start2":39670,"length1":16,"length2":17}]],"length":50199,"saved":false}
{"ts":1363308455801,"patch":[[{"diffs":[[0,"($exp) == 2)"],[1," {"],[0,"\n\t\t\t\t$parsed"]],"start1":39729,"start2":39729,"length1":24,"length2":26}]],"length":50201,"saved":false}
{"ts":1363308458301,"patch":[[{"diffs":[[0,"er, 2);\n"],[1,"            \n"],[0,"\t\t\tif (c"]],"start1":39709,"start2":39709,"length1":16,"length2":29}]],"length":50214,"saved":false}
{"ts":1363308460823,"patch":[[{"diffs":[[0,"($exp[1]));\n"],[1,"\t\t\t}\n"],[0,"\t\t}\n\t\t\n\t\tret"]],"start1":39814,"start2":39814,"length1":24,"length2":29}]],"length":50219,"saved":false}
{"ts":1363308467345,"patch":[[{"diffs":[[0,"($level)"],[-1,"\n\t\t"],[0,"{\n\t\t\tcas"]],"start1":40068,"start2":40068,"length1":19,"length2":16}]],"length":50216,"saved":false}
{"ts":1363308469487,"patch":[[{"diffs":[[0,"($level)"],[1," "],[0,"{\n\t\t\tcas"]],"start1":40068,"start2":40068,"length1":16,"length2":17}]],"length":50217,"saved":false}
{"ts":1363308480356,"patch":[[{"diffs":[[0,"\t\tswitch"],[1," "],[0,"($level)"]],"start1":40060,"start2":40060,"length1":16,"length2":17}]],"length":50218,"saved":false}
{"ts":1363308482833,"patch":[[{"diffs":[[0,"der);\n\t\t\t\tbreak;"],[-1,"\n\t\t"],[0,"\t\n\t\t\tcase 1 :\t\t\t"]],"start1":40129,"start2":40129,"length1":35,"length2":32}]],"length":50215,"saved":false}
{"ts":1363308486222,"patch":[[{"diffs":[[0,"\tbreak;\n"],[-1,"\t\t\t\n"],[0,"\t\t\tcase "]],"start1":40205,"start2":40205,"length1":20,"length2":16}]],"length":50211,"saved":false}
{"ts":1363308494762,"patch":[[{"diffs":[[0,"el == 2)"],[-1,"\n\t\t"],[0,"{\n\t\t\tif "]],"start1":40296,"start2":40296,"length1":19,"length2":16}]],"length":50208,"saved":false}
{"ts":1363308496609,"patch":[[{"diffs":[[0,"el == 2)"],[1," "],[0,"{\n\t\t\tif "]],"start1":40296,"start2":40296,"length1":16,"length2":17}]],"length":50209,"saved":false}
{"ts":1363308499072,"patch":[[{"diffs":[[0,"items) == 1)"],[1," {"],[0,"\n\t\t\t\treturn "]],"start1":40321,"start2":40321,"length1":24,"length2":26}]],"length":50211,"saved":false}
{"ts":1363308503153,"patch":[[{"diffs":[[0,"$header;\n\t\t\t"],[1,"} "],[0,"else\n\t\t\t\tret"]],"start1":40347,"start2":40347,"length1":24,"length2":26}]],"length":50213,"saved":false}
{"ts":1363308507907,"patch":[[{"diffs":[[0,"r;\n\t\t\t} else"],[1," {"],[0,"\n\t\t\t\treturn "]],"start1":40353,"start2":40353,"length1":24,"length2":26}]],"length":50215,"saved":false}
{"ts":1363308509872,"patch":[[{"diffs":[[0,"$items[1]);\n"],[1,"                \n"],[0,"\t\t}\n\t\tif (co"]],"start1":40404,"start2":40404,"length1":24,"length2":41}]],"length":50232,"saved":false}
{"ts":1363308511736,"patch":[[{"diffs":[[0,"ms[1]);\n"],[-1,"                "],[1,"\t\t\t}"],[0,"\n\t\t}\n\t\ti"]],"start1":40408,"start2":40408,"length1":32,"length2":20}]],"length":50220,"saved":false}
{"ts":1363308514705,"patch":[[{"diffs":[[0,"\t\t}\n\t\t}\n"],[1,"        \n"],[0,"\t\tif (co"]],"start1":40417,"start2":40417,"length1":16,"length2":25}]],"length":50229,"saved":false}
{"ts":1363308519309,"patch":[[{"diffs":[[0,"s) == 1)"],[1," {"],[0,"\n\t\t\tretu"]],"start1":40451,"start2":40451,"length1":16,"length2":18}]],"length":50231,"saved":false}
{"ts":1363308522990,"patch":[[{"diffs":[[0,"el + 1);"],[1,"\n            "],[0,"\n\n\t\t$par"]],"start1":40509,"start2":40509,"length1":16,"length2":29}]],"length":50244,"saved":false}
{"ts":1363308525121,"patch":[[{"diffs":[[0,"l + 1);\n"],[-1,"            "],[1,"\t\t}"],[0,"\n\n\t\t$par"]],"start1":40510,"start2":40510,"length1":28,"length2":19}]],"length":50235,"saved":false}
{"ts":1363308528800,"patch":[[{"diffs":[[0,"as $k => $v)"],[-1,"\n\t\t"],[0,"{\n\t\t\t$parsed"]],"start1":40565,"start2":40565,"length1":27,"length2":24}]],"length":50232,"saved":false}
{"ts":1363308594461,"patch":[[{"diffs":[[0,"k => $v)"],[1," "],[0,"{\n"],[-1,""],[0,"\t\t\t$pars"]],"start1":40569,"start2":40569,"length1":18,"length2":19},{"diffs":[[0,"eader == '')"],[1," {"],[0,"\n\t\t\treturn f"]],"start1":40722,"start2":40722,"length1":24,"length2":26},{"diffs":[[0,"turn false;\n"],[1,"\t\t}\n"],[0,"\t\t\n\t\t// Spli"]],"start1":40742,"start2":40742,"length1":24,"length2":28},{"diffs":[[0,"p) != 3)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$th"]],"start1":41080,"start2":41080,"length1":19,"length2":17},{"diffs":[[0," 'HEAD')"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$th"]],"start1":41226,"start2":41226,"length1":19,"length2":17},{"diffs":[[0,"se;\n\t\t}\n"],[1,"        \n"],[0,"\t\t$this-"]],"start1":41273,"start2":41273,"length1":16,"length2":25},{"diffs":[[0,"exp[1];\n"],[1,"        \n"],[0,"\t\tif (($"]],"start1":41399,"start2":41399,"length1":16,"length2":25},{"diffs":[[0,"= false)"],[1," {"],[0,"\n\t\t\tretu"]],"start1":41473,"start2":41473,"length1":16,"length2":18},{"diffs":[[0," false;\n"],[1,"\t\t}\n"],[0,"\t\t\t\n\t\t//"]],"start1":41493,"start2":41493,"length1":16,"length2":20},{"diffs":[[0,"P_LOW);\n"],[1,"        \n"],[0,"\t\tif (!i"]],"start1":41613,"start2":41613,"length1":16,"length2":25},{"diffs":[[0,"][0] != '/')"],[1," {"],[0,"\n\t\t\treturn f"]],"start1":41674,"start2":41674,"length1":24,"length2":26},{"diffs":[[0,"\t\treturn false;\n"],[1,"\t\t}\n        \n"],[0,"\t\t$this->SERVER["]],"start1":41690,"start2":41690,"length1":32,"length2":45},{"diffs":[[0,"PT_NAME']);\n"],[1,"        \n"],[0,"\t\tforeach ($"]],"start1":41993,"start2":41993,"length1":24,"length2":33},{"diffs":[[0,"$exp2 as $v)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tif (tri"]],"start1":42025,"start2":42025,"length1":27,"length2":25}]],"length":50290,"saved":false}
{"ts":1363308663543,"patch":[[{"diffs":[[0,"== '..')"],[-1,"\n\t\t\t"],[1," "],[0,"{\n\t\t\t\t//"]],"start1":42056,"start2":42056,"length1":20,"length2":17},{"diffs":[[0,"xp[2]);\n"],[1,"        \n"],[0,"\t\tif ($h"]],"start1":42302,"start2":42302,"length1":16,"length2":25},{"diffs":[[0," '1.1'))"],[1," {"],[0,"\n\t\t\tretu"]],"start1":42389,"start2":42389,"length1":16,"length2":18},{"diffs":[[0," false;\n"],[1,"\t\t}\n            \n"],[0,"\t\t$this-"]],"start1":42409,"start2":42409,"length1":16,"length2":33},{"diffs":[[0,"_STRING']);\n"],[1,"        \n"],[0,"\t\tforeach ($"]],"start1":42575,"start2":42575,"length1":24,"length2":33},{"diffs":[[0,"($exp as $v)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tif ($v "]],"start1":42606,"start2":42606,"length1":27,"length2":25},{"diffs":[[0,"f ($v == '')"],[1," {"],[0,"\n\t\t\t\tcontinu"]],"start1":42625,"start2":42625,"length1":24,"length2":26},{"diffs":[[0,"ntinue;\n"],[1,"\t\t\t}\n            \n"],[0,"\t\t\t$exp2"]],"start1":42646,"start2":42646,"length1":16,"length2":34},{"diffs":[[0," $raw);\n"],[1,"        \n"],[0,"\t\tforeac"]],"start1":42858,"start2":42858,"length1":16,"length2":25},{"diffs":[[0,"ach ($exp as $v)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$exp2 = exp"]],"start1":42881,"start2":42881,"length1":35,"length2":33},{"diffs":[[0,"atches))"],[-1,"\n\t\t\t"],[1," "],[0,"{\n\t\t\t\tif"]],"start1":43043,"start2":43043,"length1":20,"length2":17},{"diffs":[[0,"atches[1]]))"],[1," {"],[0,"\n\t\t\t\t\t$this-"]],"start1":43083,"start2":43083,"length1":24,"length2":26},{"diffs":[[0,"array();"],[1,"\n\t\t\t\t}"],[0,"\n\n\t\t\t\tif"]],"start1":43130,"start2":43130,"length1":16,"length2":22}]],"length":50354,"saved":false}
{"ts":1363308668920,"patch":[[{"diffs":[[0,"es[2] == '')"],[1," {"],[0,"\n\t\t\t\t\t$this-"]],"start1":43160,"start2":43160,"length1":24,"length2":26}]],"length":50356,"saved":false}
{"ts":1363308672281,"patch":[[{"diffs":[[0,"$value;\n\t\t\t\t"],[1,"} "],[0,"else\n\t\t\t\t\t$t"]],"start1":43209,"start2":43209,"length1":24,"length2":26}]],"length":50358,"saved":false}
{"ts":1363308674699,"patch":[[{"diffs":[[0,";\n\t\t\t\t} else"],[1,"{"],[0,"\n\t\t\t\t\t$this-"]],"start1":43215,"start2":43215,"length1":24,"length2":25}]],"length":50359,"saved":false}
{"ts":1363308681112,"patch":[[{"diffs":[[0,"\t\t} else"],[1," "],[0,"{\n\t\t\t\t\t$"]],"start1":43219,"start2":43219,"length1":16,"length2":17}]],"length":50360,"saved":false}
{"ts":1363308683098,"patch":[[{"diffs":[[0,"] = $value;\n"],[1,"\t\t\t\t}\n"],[0,"\t\t\t}\n\t\t\telse"]],"start1":43271,"start2":43271,"length1":24,"length2":30}]],"length":50366,"saved":false}
{"ts":1363308688156,"patch":[[{"diffs":[[0,"alue;\n\t\t\t\t}\n\t\t\t}"],[-1,"\n\t\t\t"],[0,"else\n\t\t\t{\n\t\t\t\t$t"]],"start1":43277,"start2":43277,"length1":36,"length2":32}]],"length":50362,"saved":false}
{"ts":1363308690035,"patch":[[{"diffs":[[0,"\t\t}\n\t\t\t}"],[1," "],[0,"else\n\t\t\t"]],"start1":43285,"start2":43285,"length1":16,"length2":17}]],"length":50363,"saved":false}
{"ts":1363308692273,"patch":[[{"diffs":[[0,"\t}\n\t\t\t} else"],[-1,"\n\t\t\t"],[1," "],[0,"{\n\t\t\t\t$this-"]],"start1":43286,"start2":43286,"length1":28,"length2":25}]],"length":50360,"saved":false}
{"ts":1363308703263,"patch":[[{"diffs":[[0,"ndary);\n"],[1,"        \n"],[0,"\t\tif (su"]],"start1":43494,"start2":43494,"length1":16,"length2":25}]],"length":50369,"saved":false}
{"ts":1363308707605,"patch":[[{"diffs":[[0,"dary ||\n"],[-1,"\t\t\t"],[0,"trim(sub"]],"start1":43559,"start2":43559,"length1":19,"length2":16}]],"length":50366,"saved":false}
{"ts":1363308709586,"patch":[[{"diffs":[[0,"ndary ||"],[-1,"\n"],[1," "],[0,"trim(sub"]],"start1":43558,"start2":43558,"length1":17,"length2":17}]],"length":50366,"saved":false}
{"ts":1363308712191,"patch":[[{"diffs":[[0,"2).'--')"],[1," {"],[0,"\n\t\t\tretu"]],"start1":43621,"start2":43621,"length1":16,"length2":18}]],"length":50368,"saved":false}
{"ts":1363308714431,"patch":[[{"diffs":[[0,"n false;"],[1,"\n\t\t}"],[0,"\n\n\t\t// S"]],"start1":43640,"start2":43640,"length1":16,"length2":20}]],"length":50372,"saved":false}
{"ts":1363308720039,"patch":[[{"diffs":[[0,"s $part)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t// "]],"start1":43861,"start2":43861,"length1":19,"length2":17}]],"length":50370,"saved":false}
{"ts":1363308729899,"patch":[[{"diffs":[[0,"e = '';\n"],[1,"            \n"],[0,"\t\t\tif (i"]],"start1":44133,"start2":44133,"length1":16,"length2":29}]],"length":50383,"saved":false}
{"ts":1363308733902,"patch":[[{"diffs":[[0,"filename']))"],[1," {"],[0,"\n\t\t\t\t$fileNa"]],"start1":44203,"start2":44203,"length1":24,"length2":26}]],"length":50385,"saved":false}
{"ts":1363308736571,"patch":[[{"diffs":[[0,"ame']);\n"],[1,"\t\t\t}\n"],[0,"\t\t\tif (i"]],"start1":44309,"start2":44309,"length1":16,"length2":21}]],"length":50390,"saved":false}
{"ts":1363308738004,"patch":[[{"diffs":[[0,");\n\t\t\t}\n"],[1,"            \n"],[0,"\t\t\tif (i"]],"start1":44314,"start2":44314,"length1":16,"length2":29}]],"length":50403,"saved":false}
{"ts":1363308740265,"patch":[[{"diffs":[[0,"ent-Type']))"],[1," []"],[0,"\n\t\t\t\t$conten"]],"start1":44382,"start2":44382,"length1":24,"length2":27}]],"length":50406,"saved":false}

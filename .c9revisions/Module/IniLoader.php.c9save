{"ts":1363142436827,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n/**\n * PHPInSimMod - INILoader Module\n * @package PRISM\n * @subpackage INILonader\n*/\n\n/**\n * protected IniLoader methods (to be extended by other classes, like the section handlers)\n * ->loadIniFile(array &$target, $parseSections = TRUE)\n * ->createIniFile($desc, array $options, $extraInfo = '')\n * ->rewriteLine($section, $key, $value)\n * ->appendSection($section, array &$values)\n * ->removeSection($section)\n*/\nabstract class IniLoader\n{\n\tprotected $iniFile = '';\n\t\n\tprotected function loadIniFile(array &$target, $parseSections = TRUE)\n\t{\n\t\t$iniVARs = FALSE;\n\t\t\n\t\t// Should parse the $PrismDir/config/***.ini file, and load them into the passed $target array.\n\t\t$iniPath = ROOTPATH . '/configs/'.$this->iniFile;\n\t\t\n\t\tif (!file_exists($iniPath))\n\t\t{\n\t\t\tconsole('Could not find ini file \"'.$this->iniFile.'\"');\n\t\t\treturn FALSE;\n\t\t}\n\t\tif (($iniVARs = parse_ini_file($iniPath, $parseSections)) === FALSE)\n\t\t{\n\t\t\tconsole('Could not parse ini file \"'.$this->iniFile.'\"');\n\t\t\treturn FALSE;\n\t\t}\n\n\t\t// Merge iniVARs into target (array_merge didn't seem to work - maybe because target is passed by reference?)\n\t\tforeach ($iniVARs as $k => $v)\n\t\t\t$target[$k] = $v;\n\t\t\n\t\t# At this point we're always successful\n\t\treturn TRUE;\n\t}\n\t\n\n\tprotected function createIniFile($desc, array $options, $extraInfo = '')\n\t{\n\t\t// Check if config folder exists\n\t\tif (!file_exists(ROOTPATH . '/configs/') && \n\t\t\t!@mkdir(ROOTPATH . '/configs/'))\n\t\t{\n\t\t\treturn FALSE;\n\t\t}\n\t\t\n\t\t// Check if file doesn't already exist\n\t\tif (file_exists(ROOTPATH . '/configs/'.$this->iniFile))\n\t\t\treturn FALSE;\n\t\t\n\t\t// Generate file contents\n\t\t$text = '; '.$desc.' (automatically genereated)'.PHP_EOL;\n\t\t$text .= '; File location: ./PHPInSimMod/configs/'.$this->iniFile.PHP_EOL;\n\t\t$text .= $extraInfo;\n\t\t\n\t\t$main = '';\n\t\tforeach ($options as $section => $data)\n\t\t{\n\t\t\tif (is_array($data))\n\t\t\t{\n\t\t\t\t$main .= PHP_EOL.'['.$section.']'.PHP_EOL;\n\t\t\t\tforeach ($data as $key => $value)\n\t\t\t\t{\n\t\t\t\t\t$main .= $key.' = '.((is_numeric($value)) ? $value : '\"'.$value.'\"').PHP_EOL;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($main == '')\n\t\t\treturn FALSE;\n\t\t\n\t\t$text .= $main.PHP_EOL;\n\t\t\n\t\t// Write contents\n\t\tif (!file_put_contents(ROOTPATH.'/configs/'.$this->iniFile, $text))\n\t\t\treturn FALSE;\n\t\t\n\t\treturn TRUE;\n\t}\n\t\n\tprotected function rewriteLine($section, $key, $value)\n\t{\n\t\t// Check if file exists\n\t\tif (!file_exists(ROOTPATH.'/configs/'.$this->iniFile))\n\t\t\treturn false;\n\t\t\n\t\t$newValue = (is_numeric($value)) ? $value : '\"'.$value.'\"';\n\n\t\t// Read the contents of the file into an array of lines\n\t\t$lines = file(ROOTPATH.'/configs/'.$this->iniFile, FILE_IGNORE_NEW_LINES);\n\t\t\n\t\t// Loop through the lines to detect Section and then Key\n\t\t$foundSection = false;\n\t\tforeach ($lines as $num => &$line)\n\t\t{\n\t\t\t$matches = array();\n\t\t\tif (preg_match('/^\\s*\\[(.+)\\]\\s*$/', $line, $matches))\n\t\t\t{\n\t\t\t\tif ($matches[1] == $section)\n\t\t\t\t\t$foundSection = true;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Check if we were in the correct section, but didn't find the line we were looking for\n\t\t\t\t\tif ($foundSection)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Create a new line and insert it.\n\t\t\t\t\t\t$insert = $key.' = '.$newValue.PHP_EOL.PHP_EOL;\n\t\t\t\t\t\tarray_splice($lines, $num, 0, array($insert));\n\t\t\t\t\t\tif (!file_put_contents(ROOTPATH.'/configs/'.$this->iniFile, implode(PHP_EOL, $lines).PHP_EOL))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t$foundSection = false;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif ($foundSection && preg_match('/^'.$key.'\\s*=\\s*.*$/', $line))\n\t\t\t{\n\t\t\t\t// Rewrite the line and store the updated file\n\t\t\t\t$line = preg_replace('/^'.$key.'\\s*=\\s*\"?.+\"?(\\s*;.*)?$/U', $key.' = '.$newValue.'\\\\1', $line);\n\t\t\t\tif (!file_put_contents(ROOTPATH.'/configs/'.$this->iniFile, implode(PHP_EOL, $lines).PHP_EOL))\n\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// In case the last section of the file is the section we were looking for,\n\t\t// but it did not contain the value, then we need to add it here.\n\t\tif ($foundSection)\n\t\t{\n\t\t\t$append = PHP_EOL.$key.' = '.$newValue.PHP_EOL.PHP_EOL;\n\t\t\tif (!file_put_contents(ROOTPATH.'/configs/'.$this->iniFile, $append, FILE_APPEND))\n\t\t\t\treturn false;\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\tprotected function appendSection($section, array &$values)\n\t{\n\t\t// Check if file exists\n\t\tif (!file_exists(ROOTPATH.'/configs/'.$this->iniFile))\n\t\t{\n\t\t\t// Just create a new file for the new section then...\n\t\t\t$this->createIniFile($this->iniFile, 'Configuration File', array($section => $values));\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t// Loop through the new values\n\t\t$append = PHP_EOL.'['.$section.']'.PHP_EOL;\n\t\tforeach ($values as $key => $value)\n\t\t{\n\t\t\t$append .= $key.' = '.((is_numeric($value)) ? $value : '\"'.$value.'\"').PHP_EOL;\n\t\t}\n\t\t\n\t\tif (!file_put_contents(ROOTPATH.'/configs/'.$this->iniFile, $append, FILE_APPEND))\n\t\t\treturn false;\n\t\t\n\t\treturn true;\n\t}\n\t\n\tprotected function removeSection($section)\n\t{\n\t\t// Check if file exists\n\t\tif (!file_exists(ROOTPATH.'/configs/'.$this->iniFile))\n\t\t\treturn false;\n\t\t\n\t\t// Read the contents of the file into an array of lines\n\t\t$lines = file(ROOTPATH.'/configs/'.$this->iniFile, FILE_IGNORE_NEW_LINES);\n\t\t\n\t\t// Loop through the lines to detect Section and then Key\n\t\t$newLines = array();\n\t\t$foundSection = false;\n\t\tforeach ($lines as $num => &$line)\n\t\t{\n\t\t\t$matches = array();\n\t\t\tif (preg_match('/^\\s*\\[(.+)\\]\\s*$/', $line, $matches))\n\t\t\t{\n\t\t\t\tif ($matches[1] == $section)\n\t\t\t\t\t$foundSection = true;\n\t\t\t\telse\n\t\t\t\t\t$foundSection = false;\n\t\t\t}\n\t\t\t\n\t\t\tif ($foundSection == true)\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\t$newLines[] = $line;\n\t\t}\n\t\t\n\t\tif (!file_put_contents(ROOTPATH.'/configs/'.$this->iniFile, implode(PHP_EOL, $newLines)))\n\t\t\treturn false;\n\t\t\n\t\treturn true;\n\t}\n}\n\n?>"]],"start1":0,"start2":0,"length1":0,"length2":5600}]],"length":5600}
{"contributors":[],"silentsave":true,"ts":1363201226263,"patch":[[{"diffs":[[0,"ion)\n*/\n"],[1,"\n\n"],[0,"abstract"]],"start1":413,"start2":413,"length1":16,"length2":18}]],"length":5602,"saved":false}
{"ts":1363201242770,"patch":[[{"diffs":[[0,"on)\n*/\n\n"],[1,"namepsa"],[0,"\nabstrac"]],"start1":414,"start2":414,"length1":16,"length2":23}]],"length":5609,"saved":false}
{"ts":1363201244728,"patch":[[{"diffs":[[0,"\n\nnameps"],[-1,"a"],[0,"\nabstrac"]],"start1":420,"start2":420,"length1":17,"length2":16}]],"length":5608,"saved":false}
{"ts":1363201246391,"patch":[[{"diffs":[[0,"*/\n\n"],[-1,"nameps"],[0,"\nabs"]],"start1":418,"start2":418,"length1":14,"length2":8}]],"length":5602,"saved":false}
{"ts":1363201256870,"patch":[[{"diffs":[[0,"on)\n*/\n\n"],[1,"namespace "],[0,"\nabstrac"]],"start1":414,"start2":414,"length1":16,"length2":26}]],"length":5612,"saved":false}
{"ts":1363201260464,"patch":[[{"diffs":[[0,"mespace "],[1,"P"],[0,"\nabstrac"]],"start1":424,"start2":424,"length1":16,"length2":17}]],"length":5613,"saved":false}
{"ts":1363201262220,"patch":[[{"diffs":[[0,"espace P"],[1,"RISM\\Mo"],[0,"\nabstrac"]],"start1":425,"start2":425,"length1":16,"length2":23}]],"length":5620,"saved":false}
{"ts":1363201263731,"patch":[[{"diffs":[[0,"PRISM\\Mo"],[1,"dule\\I"],[0,"\nabstrac"]],"start1":432,"start2":432,"length1":16,"length2":22}]],"length":5626,"saved":false}
{"ts":1363201265115,"patch":[[{"diffs":[[0,"Module\\I"],[1,"ni"],[0,"\nabstrac"]],"start1":438,"start2":438,"length1":16,"length2":18}]],"length":5628,"saved":false}
{"ts":1363201267595,"patch":[[{"diffs":[[0,"dule\\Ini"],[1,"Loader;\n"],[0,"\nabstrac"]],"start1":440,"start2":440,"length1":16,"length2":24}]],"length":5636,"saved":false}
{"contributors":[],"silentsave":true,"ts":1363273909466,"patch":[[{"diffs":[[0,"dule"],[-1,"\\IniLoader"],[0,";\n\na"]],"start1":440,"start2":440,"length1":18,"length2":8}]],"length":5626,"saved":false}
{"ts":1363274053147,"patch":[[{"diffs":[[0,"}\n}\n"],[-1,"\n?>"]],"start1":5619,"start2":5619,"length1":7,"length2":4}]],"length":5623,"saved":false}

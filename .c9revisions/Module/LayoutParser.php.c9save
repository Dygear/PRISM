{"ts":1363201951175,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n\nclass LayoutParser {\n\t\n\tprivate $version = -1;\n\tprivate $revision = -1;\n\tprivate $numObjects = -1;\n\tprivate $laps = -1;\n\t\n\t/** Base path for layouts. Ends on / */\n\tprivate $basePath;\n\t\n\tprivate $objects = array();\n\t\n\tconst UNPACK = 'x6/Cversion/Crevision/vnumObjects/Claps/x';\n\tconst PACK = 'a6CCvCC';\n\t\n\tpublic function __construct($path) {\n\t\tif (substr($path, -1) != '/') {\n\t\t\t$path .= '/';\n\t\t}\n\t\t\n\t\t$this->basePath = $path;\n\t}\n\t\n\tpublic function __toString()\n\t{\n\t\t$retVal  = \"Version: \".$this->version.\"\\n\";\n\t\t$retVal .= \"Revision: \".$this->revision.\"\\n\";\n\t\t$retVal .= \"NumObjects: \".count($this->objects).\"\\n\";\n\t\t$retVal .= \"Laps: \".$this->laps.\"\\n\";\n\t\t\n\t\t$retVal .= \"Objects: \".$this->laps.\"\\n---------------------------------------\\n\\n\";\n\t\tforeach ($this->objects as $obj)\n\t\t{\n\t\t\t$retVal .= (string) $obj.\"\\n\";\n\t\t}\n\t\t\n\t\t\n\t\treturn $retVal;\n\t}\n\t\n\t/**\n\t * Reads a layout from the file.\n\t * @param shortTrackName Track name like FE1 or BL1\n\t * @param Layoutname Name for the layout behind the BL1_\n\t */\n\tpublic function parseLayout($shortTrackName, $layoutName) {\n\t\t$lyt = file_get_contents($this->basePath . $shortTrackName . '_' . $layoutName . '.lyt');\n\t\t\n\t\tforeach (unpack(Layout::UNPACK, substr($lyt, 0, 12)) as $property => $value) {\n\t\t\t$this->$property = $value;\n\t\t}\n\t\t\n\t\tfor ($i = 0; $i < $this->numObjects; $i++) {\n\t\t\t$object = new LayoutObject(substr($lyt, 12 + $i * 8, 8));\n\t\t\t// stored with xyindex key to easily find objects again\n\t\t\t$this->objects[$object->x().':'.$object->y()] = $object;\n\t\t}\n\t}\n\t\n\t/**\n\t * Whether or not the object is an marshal object\n\t * @return boolean\n\t */\n\tprivate function isMarshal($object) {\n\t\treturn $object instanceof MarshalObject\n\t\t||\t$object->type() == LayoutObject::OBJ_MARSHALL\n\t\t||\t$object->type() == LayoutObject::OBJ_MARSHALL_LEFT\n\t\t||\t$object->type() == LayoutObject::OBJ_MARSHALL_RIGHT;\n\t}\n\t/**\n\t * Write the layout in a file.\n\t * @param shortTrackName Track name like FE1 or BL1\n\t * @param Layoutname Name for the layout behind the BL1_\n\t */\n\tpublic function writeLayout($shortTrackName, $layoutName) {\n\t\t$out = pack(self::PACK, 'LFSLYT', $this->version, $this->revision, count($this->objects), $this->laps, 0x01);\n\t\t\n\t\tforeach ($this->objects as $object) {\n\t\t\t$out .= $object->pack();\n\t\t}\n\t\t\n\t\t$lyt = file_put_contents($this->basePath . $shortTrackName . '_' . $layoutName . '.lyt', $out);\n\t}\n\t\n\tpublic function clearLayout() {\n\t\t$this->objects = array();\n\t}\n\t\n\tpublic function addObject($obj) {\n\t\t// send insim add packet...\n\t\t$this->removeObject();\n\t\t$this->objects[$obj->x().':'.$obj->y()] = $obj;\n\t}\n\t\n\tpublic function removeObject($obj) {\n\t\t// send insim remove packet...\n\t\tunset($this->objects[$obj->x().':'.$obj->y()]);\n\t}\n\t\n\tpublic function findObject($x, $y)\n\t{\n\t\treturn isset($this->objects[$x.$y.$index])?$this->objects[$x.$y.$index]:null;\n\t}\n}\n\n?>"]],"start1":0,"start2":0,"length1":0,"length2":2823}]],"length":2823}
{"contributors":[],"silentsave":true,"ts":1363201937036,"patch":[[{"diffs":[[0,"<?php\n\n"],[1,"\n"],[0,"class La"]],"start1":0,"start2":0,"length1":15,"length2":16}]],"length":2824,"saved":false}
{"ts":1363201939115,"patch":[[{"diffs":[[0,"<?php\n\n\n"],[1,"\n"],[0,"class La"]],"start1":0,"start2":0,"length1":16,"length2":17}]],"length":2825,"saved":false}
{"ts":1363201941416,"patch":[[{"diffs":[[0,"<?php\n\n"],[1,"namespace "],[0,"\n\nclass "]],"start1":0,"start2":0,"length1":15,"length2":25}]],"length":2835,"saved":false}
{"ts":1363201943220,"patch":[[{"diffs":[[0,"mespace "],[1,"PRISM\\Mo"],[0,"\n\nclass "]],"start1":9,"start2":9,"length1":16,"length2":24}]],"length":2843,"saved":false}
{"ts":1363201944717,"patch":[[{"diffs":[[0,"PRISM\\Mo"],[1,"dule]"],[0,"\n\nclass "]],"start1":17,"start2":17,"length1":16,"length2":21}]],"length":2848,"saved":false}
{"ts":1363201945919,"patch":[[{"diffs":[[0,"M\\Module"],[-1,"]"],[0,"\n\nclass "]],"start1":21,"start2":21,"length1":17,"length2":16}]],"length":2847,"saved":false}
{"ts":1363201947747,"patch":[[{"diffs":[[0,"M\\Module"],[1,"\\"],[0,"\n\nclass "]],"start1":21,"start2":21,"length1":16,"length2":17}]],"length":2848,"saved":false}
{"ts":1363201949634,"patch":[[{"diffs":[[0,"\\Module\\"],[1,"Layou"],[0,"\n\nclass "]],"start1":22,"start2":22,"length1":16,"length2":21}]],"length":2853,"saved":false}
{"ts":1363201950981,"patch":[[{"diffs":[[0,"le\\Layou"],[1,"tPa"],[0,"\n\nclass "]],"start1":27,"start2":27,"length1":16,"length2":19}]],"length":2856,"saved":false}
{"ts":1363201952857,"patch":[[{"diffs":[[0,"LayoutPa"],[1,"rser;"],[0,"\n\nclass "]],"start1":30,"start2":30,"length1":16,"length2":21}]],"length":2861,"saved":false}
{"contributors":[],"silentsave":true,"ts":1363273996796,"patch":[[{"diffs":[[0,"<?php\n\n"],[1,"namespace PRISM\\Module;\n\n"],[0,"class La"]],"start1":0,"start2":0,"length1":15,"length2":40},{"diffs":[[0,"rser"],[-1,";rser"],[0," {\n\t"]],"start1":46,"start2":46,"length1":13,"length2":8}]],"length":2848,"saved":false}
{"ts":1363274045909,"patch":[[{"diffs":[[0,"}\n}\n"],[-1,"\n?>"]],"start1":2841,"start2":2841,"length1":7,"length2":4}]],"length":2845,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363313960940,"patch":[[{"diffs":[[0,"<?php\n"],[1,"# Almost PSR"],[0,"\nnamespa"]],"start1":0,"start2":0,"length1":14,"length2":26},{"diffs":[[0,"s.\"\\n\";\n"],[-1,"\t\t\n"],[0,"\t\t$retVa"]],"start1":691,"start2":691,"length1":19,"length2":16},{"diffs":[[0,"-\\n\\n\";\n"],[1,"        \n"],[0,"\t\tforeac"]],"start1":777,"start2":777,"length1":16,"length2":25},{"diffs":[[0,"as $obj)"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\t$re"]],"start1":820,"start2":820,"length1":19,"length2":17},{"diffs":[[0,"bj.\"\\n\";\n\t\t}"],[-1,"\n\t"],[0,"\t\n\t\t\n\t\tretur"]],"start1":856,"start2":856,"length1":26,"length2":24}]],"length":2859,"saved":false}
